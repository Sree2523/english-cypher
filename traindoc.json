[
    {"prompt":"list no.of patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"count patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"count persons","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"count candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"count individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list num of patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list number of patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list persons count","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"num of persons","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"number of patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no of persons","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no. of persons","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the num of patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the number of persons","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the count of persons","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many persons are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many different persons are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many unique persons are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list no.of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list num of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list number of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list individuals count","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"num of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"number of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no. of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the num of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the number of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the count of individuals","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many individuals are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many different individuals are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many unique individuals are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list no.of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list num of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list number of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list candidates count","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"num of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"number of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no. of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the num of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the number of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the count of candidates","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many candidates are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many different candidates are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many unique candidates are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Count the number of patients on the list","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Determine the quantity of patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Find out how many patients are on the list","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Enumerate the number of patients listed","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Assess the total number of patients","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"how many total no.of patients are there","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Compute the quantity of patients listed","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Establish the number of patients present","completion":"s=>(@P Patient:*); RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},

    {"prompt":"list all the patients PI and NH id ","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"Provide a list of patient personal identification (PI) and national health identification numbers (NH)","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"Retrieve the personal identification (PI) and national health identification numbers (NH) for all patients","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"Display the patient records containing their PI and NH identification numbers ","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"Obtain a compilation of patient information, including their PI and NH identification numbers","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"Gather the PI and NH identification numbers for all patients on the list","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"List the PI and NH identification numbers for each patient in the database","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"Present the PI and NH identification numbers for all registered patients","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"Show the PI and NH identification numbers associated with each patient's record","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},
    {"prompt":"Extract the PI and NH identification numbers from the patient database","completion":"s=>(@P Patient:*); RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS Cnt SORT_ASC id_NH LIMIT 100"},

    {"prompt":"list no.of female and male patients","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"no.of female and male patients","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"num of female and male patients","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"number of female and male patients","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many no.of female and male patients are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many num of female and male patients are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list female and male patients count","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"what's the count of female and male patients","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many different female and male patients are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many unique female and male patients are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list no.of female and male persons","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"no.of female and male persons","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"num of female and male persons","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"number of female and male persons","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many no.of female and male persons are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many num of female and male persons are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list female and male persons count","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"what's the count of female and male persons","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many different female and male persons are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many unique female and male persons are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list no.of female and male individuals","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"no.of female and male individuals","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"num of female and male individuals","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"number of female and male individuals","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many no.of female and male individuals are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many num of female and male individuals are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list female and male individuals count","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"what's the count of female and male individuals","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many different female and male individuals are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many unique female and male individuals are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list no.of female and male candidates","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"no.of female and male candidates","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"num of female and male candidates","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"number of female and male candidates","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many no.of female and male candidates are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many num of female and male candidates are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list female and male candidates count","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"what's the count of female and male candidates","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many different female and male candidates are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many unique female and male candidates are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list no.of patients based on gender","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list no.of female patients and male patients","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the number of male and female patients.","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the number of male and female patients on the list","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Determine the total count of male and female patients present","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Calculate the quantity of male and female patients in the list","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"how many no.of female and male patients are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Assess the population of male and female patients and provide the respective counts","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Find out how many male and female patients are there","completion":"s=>(@P Patient:*); RETURN P.gender AS Gender, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list all the ID Issuer and count of corresponding no.of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ID Issuer and count of corresponding no.of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ID Issuer and count of corresponding no of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ID Issuer and count of corresponding num of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"give the ID Issuer and count of corresponding number of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ID Issuer and count of num of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ID Issuer and count of no. of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and count of no. of patients assosiated with it","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and count of number of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ID Issuer and count of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ID Issuer and no. of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and count of patients assosiated with it","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and number of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and count of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list all the ID Issuer and count of corresponding no.of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ID Issuer and count of corresponding no.of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ID Issuer and count of corresponding no of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ID Issuer and count of corresponding num of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"give the ID Issuer and count of corresponding number of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ID Issuer and count of num of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ID Issuer and count of no. of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and count of no. of persons assosiated with it","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and count of number of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ID Issuer and count of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ID Issuer and no. of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and count of persons assosiated with it","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and number of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"ID Issuer and count of persons","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"provide a list of ID issuers along with the corresponding count of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ID issuer and the count of patients associated with each issuer","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Generate a listing that includes the ID issuers and the corresponding patient count","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Create a comprehensive record showing the ID issuers alongside the respective number of patients","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile a summary of ID issuers with an accompanying tally of the patient count","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Construct a report displaying the ID issuers and the total count of patients attributed to each","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Formulate a comprehensive overview featuring the ID issuers and their respective patient counts","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Prepare a comprehensive document presenting the ID issuers and the corresponding patient count for each","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile a comprehensive summary delineating the ID issuers and the count of patients they have registered","completion":"s=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the ethnicity of patients along with the count of patients sharing each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ethnicity of patients and the count of patients sharing each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ethnicity and the count of patients for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ethnicity and the count of patients for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ethnicity and the no.of patients for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ethnicity and the num of patients for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ethnicity and the number of patients for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Generate a listing that includes the ethnicity of patients and the corresponding count of patients who belong to each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Create a record that shows the ethnicities of patients alongside the respective number of patients who share each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile a list of patient ethnicities with an accompanying tally of the count of patients belonging to each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Construct a list of the ethnicities of patients and the total count of patients for each specific ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Formulate an overview of the ethnicities of patients and their respective patient counts","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Produce a detailed breakdown showcasing the different ethnicities of patients and the number of patients belonging to each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Prepare a list of the ethnicities of patients and the corresponding count of patients for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Generate a record of patient ethnicities alongside the respective counts of patients sharing each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile a summary delineating the ethnicities of patients and the count of patients belonging to each specific ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ethnicity of persons along with the count of persons sharing each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ethnicity of persons and the count of persons sharing each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the ethnicity and the count of persons for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ethnicity and the count of persons for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ethnicity and the no.of persons for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ethnicity and the num of persons for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the ethnicity and the number of persons for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Generate a listing that includes the ethnicity of persons and the corresponding count of persons who belong to each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Create a record that shows the ethnicities of persons alongside the respective number of persons who share each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile a list of patient ethnicities with an accompanying tally of the count of persons belonging to each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Construct a list of the ethnicities of persons and the total count of persons for each specific ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Formulate an overview of the ethnicities of persons and their respective patient counts","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Produce a detailed breakdown showcasing the different ethnicities of persons and the number of persons belonging to each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Prepare a list of the ethnicities of persons and the corresponding count of persons for each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Generate a record of patient ethnicities alongside the respective counts of persons sharing each ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile a summary delineating the ethnicities of persons and the count of persons belonging to each specific ethnicity","completion":"s=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the total count of patients who have a latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"list no.of patients with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"list num of patients where latest event date and time were recorded ","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"list number of patients whose latest event date and time are recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"list persons count with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"num of persons where latest event date and time were recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"number of patients with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"no of persons where latest event date and time were recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"no. of persons with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the num of patients with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the number of persons where latest event date and time were recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the count of persons whose latest event date and time are recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many persons are there with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many different persons are there where latest event date and time were recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many unique persons are there with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"no. of candidates with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the num of patients with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the number of candidates where latest event date and time were recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the count of candidates whose latest event date and time are recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many candidates are there with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many different candidates are there where latest event date and time were recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many unique candidates are there with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"no. of individuals with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the num of patients with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the number of individuals where latest event date and time were recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"what's the count of individuals whose latest event date and time are recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many individuals are there with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many different individuals are there where latest event date and time were recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"How many unique individuals are there with latest event date and time recorded","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Generate a listing indicating the overall count of patients who have a recorded latest event date and time","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Create a record that shows the total number of patients with available latest event date and time information","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Compile a list of the count of patients who have recorded their latest event date and time","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Construct a list of the total count of patients who have documented their latest event date and time","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Formulate an overview of overall number of patients with recorded latest event date and time details","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Produce a detailed breakdown indicating the count of patients who have provided information on their latest event date and time","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Prepare a list of total count of patients with available records of their latest event date and time","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Generate a list of number of patients who have documented their latest event date and time","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},
    {"prompt":"Compile the list of count of patients who have recorded their latest event date and time information","completion":"s=>(@P Patient:*{latestEventDatetime !~ NA });RETURN COUNT(*) AS Total LIMIT 100"},

    {"prompt":"list no.of Signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list no.of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list num of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list number of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list signals count","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"num of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"number of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no. of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the num of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the number of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the count of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many signals are there","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many different signals are there","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many unique signals are there","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Count the number of Signals on the list","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of Signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of Signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Find out how many Signals are on the list","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Enumerate the number of Signals listed","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Assess the total number of Signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Tabulate the count of Signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Compute the quantity of Signals listed","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of signals","completion":"s=>(@P Signal:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},

    {"prompt":"list all the data controllers associated with signals and the count of signals attributed to each controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the data controller and count of signals associated","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the data controller and count of signals associated","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list data controllers and no.of Signals associated with each","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the data controllers and no.of signals associated","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the data controllers and num of signals ","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the data controllers and number of signals","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the data controllers signals count","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the data controllers and no.of signals associated","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the data controllers and num of signals ","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the data controllers and number of signals","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the data controllers signals count","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Generate a listing that includes the data controllers linked to signals and the corresponding count of signals to each controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Create a list showing the data controllers associated with signals alongside the respective number of signals to each controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile the list of all data controllers with an accompanying tally of the count of signals attributed to each controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Construct a report displaying the data controllers linked to signals and the total count of signals to each specific controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Formulate a list of overview featuring the data controllers associated with signals and their respective signal counts","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Produce a detailed list showcasing the different data controllers linked to signals and the number of signals corresponding to each controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Prepare a list of document presenting the data controllers associated with signals and the corresponding count of signals for each controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Generate a list of data controllers alongside the respective counts of signals attributed to each controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile a list of summary delineating the data controllers associated with signals and the count of signals attributed to each specific controller","completion":"s=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list all the Message codes associated with signals and the count of signals attributed to each message code","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list all message codes and the count of signals associated","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the message code and count of signals associated","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the message code and count of signals associated","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list message codes and no.of Signals associated with each","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the message codes and no.of signals associated","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the message codes and num of signals ","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the message codes and number of signals","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the message codes signals count","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the message codes and no.of signals associated","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the message codes and num of signals ","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the message codes and number of signals","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the message codes signals count","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of message codes linked to signals along with the count of signals associated with each message code","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the message codes related to signals and their corresponding signal counts","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the message codes associated with signals and the number of signals attributed to each code","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the message codes that are connected to signals, including the count of signals for each code","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the message codes associated with signals and the respective signal counts for each code","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Detail the message codes attributed to signals and the count of signals associated with each specific code","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Give an overview of the message codes that are linked to signals, along with the count of signals for each code","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a summary of the message codes associated with signals and their respective signal counts","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Enumerate the message codes that correspond to signals, indicating the count of signals for each code","completion":"s=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list all the Message types associated with signals and the count of signals attributed to each message type","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list all message type and the count of signals associated","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type and count of signals associated","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type and count of signals associated","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list message type and no.of Signals associated with each","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type and no.of signals associated","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type and num of signals ","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type and number of signals","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type signals count","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type and no.of signals associated","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type and num of signals ","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type and number of signals","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type signals count","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Provide a list of message types linked to signals along with the count of signals associated with each message type","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Display the message types related to signals and their corresponding signal counts","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Show the message types associated with signals and the number of signals attributed to each type","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"List the message types that are connected to signals, including the count of signals for each type","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Present the message types associated with signals and the respective signal counts for each type","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Detail the message types attributed to signals and the count of signals associated with each specific type","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Give an overview of the message types that are linked to signals, along with the count of signals for each type","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Provide a summary of the message types associated with signals and their respective signal counts","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Enumerate the message types that correspond to signals, indicating the count of signals for each type","completion":"S=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},

    {"prompt":"list all the message types, message codes, and the total count of signals for each unique message code, where message codes are OMG and ADT, sorted in ascending order by the total count, and limited to the top 100 results","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list all message type, message codes and the count of signals associated, where message codes are OMG and ADT ","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type, message codes and count of signals associated, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type, message codes and count of signals associated, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list message type, message codes and no.of Signals associated with each, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type, message codes and no.of signals associated, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type, message codes and num of signals, where message codes are OMG and ADT ","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type, message codes and number of signals, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"list the message type, message codes signals count, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type, message codes and no.of signals associated, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type, message codes and num of signals, where message codes are OMG and ADT ","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type, message codes and number of signals, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"return the message type, message codes signals count, where message codes are OMG and ADT","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get a list of message types, message codes, and the total count of signals for each unique message code, specifically for the message codes OMG and ADT, ordered from least to most signals, and limited to the top 100 results","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message types, message codes, and the total number of signals associated with each unique message code, focusing on the message codes OMG and ADT, sorted in increasing order based on the signal count, and displaying only the top 100 results","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Show the message types, message codes, and the count of signals for each unique message code, filtering specifically for the message codes OMG and ADT, arranged in ascending order by the total signal count, and limited to the top 100 outcomes","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Provide a listing of the message types, message codes, and the total count of signals for each unique message code, with a focus on the message codes OMG and ADT, sorted in ascending order by the total signal count, and limited to the top 100 results","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Display the message types, message codes, and the overall number of signals associated with each unique message code, specifically targeting the message codes OMG and ADT, ordered from least to most signals, and presenting only the top 100 entries","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Obtain a summary of the message types, message codes, and the total count of signals for each unique message code, where the message codes are limited to OMG and ADT, sorted in ascending order based on the total signal count, and limited to the top 100 results","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message types, message codes, and the count of signals for each unique message code, specifically for the message codes OMG and ADT, arranged in increasing order by the total signal count, and displaying only the top 100 outcomes","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"List the message types, message codes, and the total number of signals associated with each unique message code, focusing on the message codes OMG and ADT, sorted in ascending order based on the signal count, and limited to the top 100 results","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Show the message types, message codes, and the count of signals for each unique message code, filtering specifically for the message codes OMG and ADT, arranged in ascending order by the total signal count, and limited to the top 100 entries","completion":"S=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},

    {"prompt":"list all the Patient description and the count of pateints attributed to each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list all patient description and the count of patients associated ","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the patient description and count of patients associated","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the patient description and count of patients associated","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list patient description and no.of patients associated with each","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the patient description and no.of patients associated","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the patient description and num of patients ","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the patient description and number of patients","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the patient description patients count","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the patient description and no.of patients associated","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the patient description and num of patients ","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the patient description and number of patients","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the patient description patients count","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Generate a listing that includes the patient descriptions and the corresponding count of patients attributed to each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Create a list showing the patient descriptions alongside the total count of patients for each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Compile a report displaying the different patient descriptions and the count of patients associated with each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a detailed list showing the patient descriptions and the number of patients associated with each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List patient descriptions and the number of patients for each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show patient descriptions and the count of patients attributed to each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display patient descriptions and the total number of patients for each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Give an overview of patient descriptions and the associated patient counts","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Give a list of the different patient descriptions and the count of patients for each description","completion":"s=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list all types of documents and the count of signals attributed to each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list all document type and the count of signals associated ","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document type and count of signals associated","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document type and count of signals associated","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list document type and no.of signals associated with each","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document type and no.of signals associated","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document type and num of signals ","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document type and number of signals","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document type signals count","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document type and no.of signals associated","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document type and num of signals ","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document type and number of signals","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document type signals count","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Share the different types of documents and the count of signals related to each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List document types and how many signals are attributed to each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the types of documents and the count of signals for each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the different document types and the number of signals associated with each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of document types and the signals count for each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Share the various document types and how many signals are linked to each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Give an overview of the types of documents and the count of signals attributed to them","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Offer information on document types and the number of signals connected to each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Create a summary showing the types of documents and the total count of signals for each type","completion":"s=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list all types of document status and the count of signals attributed to each status where document status is not equal to null","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list different document statuses and the count of signals associated ","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document statuses and count of signals associated","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document statuses and count of signals associated","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list document statuses and no.of signals associated with each","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document statuses and no.of signals associated","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document statuses and num of signals ","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document statuses and number of signals","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list the document statuses signals count","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return different document statuses and no.of signals associated","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document statuses and num of signals ","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document statuses and number of signals","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the document statuses signals count","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list all document statuses of signals along with the count of signals attributed to each status, excluding signals with a null document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of document statuses for signals and their respective signal counts, excluding signals with no document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the different document statuses of signals and the count of signals associated with each status, excluding signals without a document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the document statuses assigned to signals and the number of signals attributed to each status, excluding signals that do not have a document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the signal document statuses and the corresponding count of signals for each status, excluding signals with no document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Share the document statuses of signals and the total count of signals assigned to each status, excluding signals lacking a document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Give an overview of signal document statuses and the number of signals attributed to each status, excluding signals without a document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Outline the different document statuses assigned to signals and the corresponding signal counts, excluding signals with no document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Offer information on the document statuses of signals and the count of signals associated with each status, excluding signals that do not have a document status","completion":"s=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list no.of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list no.of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list num of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list number of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list addresses count","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"num of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"number of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"no. of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the num of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the number of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the count of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many addresses are there","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many different addresses are there","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"How many unique addresses are there","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Count the number of addresses on the list","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Find out how many addresses are on the list","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Enumerate the number of addresses listed","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Assess the total number of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Tabulate the count of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Compute the quantity of addresses listed","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of addresses","completion":"s=>(@P Address:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},

    {"prompt":"Find the number of unique patients and their corresponding addresses","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list all addresses and the count of patients associated ","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list the addresses and count of patients associated","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"return the addresses and count of patients associated","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list addresses and no.of patients associated with each","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"how many addresses are there and count the patients associated with each","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list the addresses and no.of patients associated","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list the addresses and num of patients ","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list the addresses and number of patients","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list the addresses patients count","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"return the addresses and no.of patients associated","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"return the addresses and num of patients ","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"return the addresses and number of patients","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"return the addresses patients count","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Determine how many individual patients there are and where they live","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Count the total number of distinct patients and their associated addresses","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Calculate the count of unique patients and their corresponding locations","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Find out how many different patients there are and where they reside","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Count the number of patients and their respective addresses, without duplication","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Discover the total count of unique patients and their corresponding residential addresses","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Determine the number of distinct patients and the addresses linked to them","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Calculate the count of individual patients and the places they call home","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Find out how many patients there are and where they live, without repetition","completion":"S=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt LIMIT 100"},

    {"prompt":"Retrieve the cities and the corresponding number of patients residing in each city","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list all cities and the count of patients associated ","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the cities and count of patients living in each","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return the cities and count of patients associated","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list cities and no.of patients living in each","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"how many cities are there and count the patients living in each city","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the cities and no.of patients associated","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the cities and num of patients ","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the cities and number of patients","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the cities patients count","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return the cities and no.of patients living in each city","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return the cities and num of patients ","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return the cities and number of patients","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return the cities patients count","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get a list of cities along with the number of patients living in each city","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Find the cities and count how many patients live in each of them","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the names of cities and the respective counts of patients residing in them","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the cities and the count of patients who call each city their home","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get a list of cities and the number of patients who reside in each city","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Find out which cities have patients and how many patients are in each city","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Discover the cities and the corresponding patient counts for each city","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the names of cities along with the respective patient counts in each city","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain a list of cities and the count of patients living in each of them","completion":"s=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"list no.of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"count the Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"return the count of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"return the num of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list number of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"list Sexual orientations count","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"num of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"number of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the num of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the number of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the count of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"how many Sexual orientations are there","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"how many different Sexual orientations are there","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"how many unique Sexual orientations are there","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Count the number of Sexual orientations on the list","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Find out how many Sexual orientations are on the list","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Enumerate the number of Sexual orientations listed","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Assess the total number of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Tabulate the count of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Compute the quantity of Sexual orientations listed","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN COUNT(P.name) AS Cnt LIMIT 100"},

    {"prompt":"list all Sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"what all Sexual orientations are there","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return all the sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list sexual orientations ","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return the sexual orientations and no.of patients associated with each orientation","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"List the count of individuals for each specific sexual orientation","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide a list of sexual orientations and the count of individuals in each orientation","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the codes that represent various sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the codes representing different sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Find the codes that represent diverse sexual orientations ","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the codes associated with various sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the codes representing different sexual orientations ","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the codes that represent different sexual orientations ","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the codes that signify different sexual orientations","completion":"s=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Find patients associated with specific sexual orientations and return the corresponding orientations along with the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"what all Sexual orientations are there and num of individuals belonging to each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all sexual orientations and count of patients associated with each orientation ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all sexual orientations and count patients","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the sexual orientations and count of patients associated with each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the sexual orientations and count of patients associated with each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list sexual orientations and no.of patients associated with each","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the sexual orientations and no.of patients associated with each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the sexual orientations and num of patients belonging to each orientation ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the sexual orientations and number of patients belonging to each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the sexual orientations patients count associated with each","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the sexual orientations and no.of patients associated with each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the sexual orientations and num of patients belonging to each orientation ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the sexual orientations and number of patients associated with each","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the sexual orientations patients count ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the count of individuals for each specific sexual orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve patients who are linked to specific sexual orientations and provide the corresponding orientations along with the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Discover patients who are associated with particular sexual orientations and present the corresponding orientations, along with the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Find patients who have specific sexual orientations and display the corresponding orientations, along with the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify patients who are connected to specific sexual orientations and show the corresponding orientations, including the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve patients who belong to particular sexual orientations and present the corresponding orientations, along with the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Locate patients who are affiliated with specific sexual orientations and provide the corresponding orientations, along with the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Uncover patients who have distinct sexual orientations and return the corresponding orientations, along with the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Find patients who are associated with different sexual orientations and display the corresponding orientations, along with the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve patients who have specific sexual orientations and show the corresponding orientations, including the count of patients for each orientation","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Provide a list of codes for all the allergies mentioned on the list","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list codes for all the allergies","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"codes for all the allergies","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list codes for different allergies","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return codes for all the allergies","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"give me codes for all the allergies","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"List the codes corresponding to each allergy included on the list","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Display the codes representing all the allergies listed","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Present a list of codes for all the allergies mentioned","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the codes for each allergy listed","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Display the codes associated with every allergy on the list","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Gather a list of codes for all the allergies included","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the codes for each allergy mentioned on the list","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the codes representing all the allergies present on the list","completion":"s=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the codes for all allergies that patients have, along with the count of patients having each allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"list all codes for all the allergies and the count of patients associated with each allergy ","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"list the codes for all the allergies and count of patients associated with each allergy ","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"return the codes for all the allergies and count of patients associated with each allergy ","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"list codes for all the allergies and no.of patients associated with each","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"list the codes for all the allergies and no.of patients associated with each allergy ","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"list the codes for all the allergies and num of patients  ","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"list the codes for all the allergies and number of patients","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"list the codes for all the allergies patients count","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"return the codes for all the allergies and no.of patients associated","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"return the codes for all the allergies and num of patients ","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"return the codes for all the allergies and number of patients","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"return the codes for all the allergies patients count","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the codes for all the allergies that patients have and include the count of patients who have each allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the codes associated with allergies that patients have, along with the count of patients for each specific allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the codes corresponding to the allergies present in patients, including the count of patients with each allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Find the codes for allergies that patients possess and display the count of patients with each specific allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the codes representing allergies that patients experience, along with the count of patients having each particular allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the codes for allergies observed in patients, and provide the count of patients with each respective allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Gather the codes for allergies that patients exhibit, and include the count of patients with each corresponding allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Identify the codes for allergies seen in patients, along with the count of patients having each individual allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the codes for allergies found in patients, along with the count of patients associated with each allergy","completion":"S=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"list total no of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"list no.of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"list num of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"list number of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"list nodes count","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"num of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"number of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"no of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"no. of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"what's the num of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"what's the number of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"what's the count of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"How many nodes are there","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"How many different nodes are there","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"How many unique nodes are there","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Count the number of nodes on the list","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Determine the total quantity of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Calculate the total count of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Find out how many nodes are on the list","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Enumerate the number of nodes listed","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Assess the total number of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Tabulate the count of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Compute the quantity of nodes listed","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of nodes","completion":"S=>(@O Order:*);RETURN COUNT(O.name) AS Total_Order_nodes LIMIT 100"},

    {"prompt":"Retrieve the placer references for all orders ","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"list all placer references ","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"return the placer references ","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"list placer references ","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"list the placer references","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"Get the placer references associated with all orders","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"Retrieve the placer references for all orders","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"provide a list of placer references","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"Get the placer references for all orders ","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"Gather the placer references for all orders","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"Identify the placer references for all orders","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"Collect the placer references for all orders","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"Obtain the placer references related to all orders","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},
    {"prompt":"find the placer references ","completion":"S=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC placerReference LIMIT 100"},

    {"prompt":"Retrieve the filler references for all orders ","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"list all filler references ","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"return the filler references ","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"list filler references ","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"list the filler references","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"Get the filler references associated with all orders","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"Retrieve the filler references for all orders","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"provide a list of filler references","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"Get the filler references for all orders ","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"Gather the filler references for all orders","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"Identify the filler references for all orders","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"Collect the filler references for all orders","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"Obtain the filler references related to all orders","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},
    {"prompt":"find the filler references ","completion":"S=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" SORT_DESC fillerReference LIMIT 100"},

    {"prompt":"list total no of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list no.of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list num of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list number of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list consents count","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"num of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"number of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"no of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"no. of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the num of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the number of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the count of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many consents are there","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many different consents are there","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many unique consents are there","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Count the number of consents on the list","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the total count of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Find out how many consents are on the list","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Enumerate the number of consents listed","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Assess the total number of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Tabulate the count of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Compute the quantity of consents listed","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of consents","completion":"S=>(@P Consent:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},

    {"prompt":"Retrieve the dcrConsentToShare values for all consents and provide the count for each value","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all dcrConsentToShare values for all consents and the count associated ","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the dcrConsentToShare values for all consents and count associated","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the dcrConsentToShare values for all consents and count  associated","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list dcrConsentToShare values for all consents and no.of consents associated with each","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the dcrConsentToShare values for all consents and no.of consents associated","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the dcrConsentToShare values for all consents and num of consents ","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the dcrConsentToShare values for all consents and number of consents","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the dcrConsentToShare values for all consents and consent count","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the dcrConsentToShare values for all consents and no.of consents associated","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the dcrConsentToShare values for all consents and num of consents ","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the dcrConsentToShare values for all consents and number of consents","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the dcrConsentToShare values for all consents and consent count","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list dcr Concent to share information and consent count","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the values of dcrConsentToShare for all consents and show the count for each value","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the values for dcrConsentToShare in all consents and indicate the number for each value","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the dcrConsentToShare values for all consents and display the count","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Find the values of dcrConsentToShare in all consents and show the count associated with each value","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the values for dcrConsentToShare in all consents and include the count for each specific value","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the values of dcrConsentToShare for all consents and indicate the number","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the values of dcrConsentToShare for all consents and provide the count for each respective value","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the values of dcrConsentToShare for all consents and show the count for each value","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the values for dcrConsentToShare in all consents and present the count for each value","completion":"S=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the scrConsentToShare values for all consents and provide the count for each value","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all scrConsentToShare values for all consents and the count associated ","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the scrConsentToShare values for all consents and count associated","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the scrConsentToShare values for all consents and count  associated","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list scrConsentToShare values for all consents and no.of consents associated with each","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the scrConsentToShare values for all consents and no.of consents associated","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the scrConsentToShare values for all consents and num of consents ","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the scrConsentToShare values for all consents and number of consents","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the scrConsentToShare values for all consents and consent count","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the scrConsentToShare values for all consents and no.of consents associated","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the scrConsentToShare values for all consents and num of consents ","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the scrConsentToShare values for all consents and number of consents","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the scrConsentToShare values for all consents and consent count","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list scr Concent to share information and consent count","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the values of scrConsentToShare for all consents and show the count for each value","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the values for scrConsentToShare in all consents and indicate the number for each value","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the scrConsentToShare values for all consents and display the count","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Find the values of scrConsentToShare in all consents and show the count associated with each value","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the values for scrConsentToShare in all consents and include the count for each specific value","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the values of scrConsentToShare for all consents and indicate the number","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the values of scrConsentToShare for all consents and provide the count for each respective value","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the values of scrConsentToShare for all consents and show the count for each value","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the values for scrConsentToShare in all consents and present the count for each value","completion":"S=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the locationHiding values for all consents and provide the count of individuals for each value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the locationHiding values for all consents ","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all locationHiding values ","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the locationHiding values ","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list locationHiding values ","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the locationHiding values","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the locationHiding values associated with all consents","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the locationHiding values for all consents","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of locationHiding values","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the locationHiding values for all consents ","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the locationHiding values for all consents","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the locationHiding values for all consents","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the locationHiding values for all consents","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the locationHiding information related to all consents","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the locationHiding information ","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the information of locationHiding for all consents and provide the count of individuals associated with each value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of the locationHiding information found in all consents, along with the corresponding count of individuals for each value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Give an overview of the locationHiding information present in all consents and include the count of individuals associated with each value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show a breakdown of the locationHiding information across all consents, indicating the number of individuals for each specific value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the locationHiding information for all consents and specify the count of individuals linked to each value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a summary of the locationHiding information recorded in all consents, along with the respective count of individuals for each value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide an overview of the locationHiding information found in all consents, giving the count of individuals associated with each particular value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the locationHiding information present in all consents and indicate the number of individuals for each value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Give a detailed breakdown of the locationHiding information across all consents, showing the count of individuals for each specific value","completion":"S=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the no.of different Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list no.of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list num of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list number of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list Disease or syndrome count","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"num of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"number of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"no of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"no. of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the num of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the number of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the count of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many Disease or syndrome are there","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many different Disease or syndrome are there","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many unique Disease or syndrome are there","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Count the number of Disease or syndrome on the list","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the total count of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Find out how many Disease or syndrome are on the list","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Enumerate the number of Disease or syndrome listed","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Assess the total number of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Tabulate the count of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Compute the quantity of Disease or syndrome listed","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN COUNT(P.name) AS cnt LIMIT 100"},

    {"prompt":"list the codes for different Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the codes for different Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of codes for different Disease or syndrome","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the codes for different Disease or syndrome  ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the codes for different Disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of codes for various diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the codes corresponding to different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the codes associated with various diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the codes for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of codes for various diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the codes representing different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes for various diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the codes corresponding to different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the codes for a variety of diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the preferred terms for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the preferred terms for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of preferred terms for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms for different diseases or syndromes  ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the preferred terms for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms for various diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms associated with different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms for a variety of diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms related to different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Find the preferred terms used for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the preferred terms corresponding to various diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of preferred terms for various diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the preferred terms associated with different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the coding systems for different diseases or syndromes and provide the count of occurrences for each coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list coding systems for disease or syndrome ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the coding systems for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the  coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of  coding systems for different diseases or syndromes","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the coding systems for different diseases or syndromes  ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the coding systems for different diseases or syndromes ","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the coding systems used for various diseases or syndromes and show the count of occurrences for each coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding systems associated with different diseases or syndromes and indicate the number of occurrences for each coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the coding systems for different diseases or syndromes and display the count of occurrences for each coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Find the coding systems used for different diseases or syndromes and show how many times each coding system appears","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding systems for different diseases or syndromes and include the count of occurrences for each specific coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the coding systems for various diseases or syndromes and indicate the number of occurrences for each coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the coding systems associated with different diseases or syndromes and provide the count of occurrences for each respective coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the coding systems for different diseases or syndromes and show the count of occurrences for each coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the coding systems for different diseases or syndromes and present the count of occurrences for each coding system","completion":"s=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list total no of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list no.of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list no.of point of cares","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list num of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list number of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"list point of care or patient locations count","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"num of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"number of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"no of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"no. of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the num of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the number of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"what's the count of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many point of care or patient locations are there","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many different point of care or patient locations are there","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"How many unique point of care or patient locations are there","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Provide the total number of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Show the count of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Display the total number of locations where point of care or patients are present","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"List the overall count of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Present the total count of locations designated for point of care or patients","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Provide an overview of the number of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Give the total count of locations associated with point of care or patients","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Show the cumulative number of point of care or patient locations","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},
    {"prompt":"Display the overall count of locations used for point of care or patients","completion":"S=>(@P PointOfCare:* );RETURN COUNT(P.name) AS cnt LIMIT 100"},

    {"prompt":"Count the total number of point of care locations that have been assigned to signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"list number of point of care locations and the count of signals associated ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"list num of point of care locations and count of signals associated","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"return num of point of care locations and count of signals associated","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"list no of point of care locations and no.of signals associated with each","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"list no. of point of care locations and no.of signals associated","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"list the number of point of care locations and num of signals ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"list the num of point of care locations and number of signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"list the no of point of care locations signals count","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"return the number of point of care locations and no.of signals associated","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"return the num of point of care locations and num of signals ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"return the no of point of care locations and number of signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"return the no. of point of care locations signals count","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the overall count of point of care locations assigned to signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Determine the total number of point of care locations that have been allocated to signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Find out how many point of care locations have been assigned to signals in total","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Count the number of point of care locations that have been designated for signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the total count of point of care locations that have been assigned to signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Determine the overall number of point of care locations that have been allocated to signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Find the total count of point of care locations that have been assigned to signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Count the number of point of care locations that have been assigned to signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the total number of point of care locations that have been allocated to signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN COUNT(p.name) AS cnt LIMIT 100"},

    {"prompt":"list the room numbers that have been assigned to signals, and provide the count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room numbers for all signals ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all room numbers ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the room numbers ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list room numbers ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the room numbers","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room numbers associated with all signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room numbers for all signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of room numbers","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room numbers for all signals ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the room numbers for all signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the room numbers for all signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the room numbers for all signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the room numbers related to all signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the room numbers ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the room numbers that have been assigned to signals, along with the count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of room numbers that have been allocated to signals, including the count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the room numbers that have been assigned to signals, and indicate the count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the room numbers that have been designated for signals, and show the count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of the room numbers that have been assigned to signals, along with the respective count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room numbers that have been allocated to signals, and provide the count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the room numbers that have been assigned to signals, and indicate the count of occurrences for each respective room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the room numbers that have been assigned to signals, and show the count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room numbers that have been assigned to signals, and include the count of occurrences for each room number","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the beds that have been assigned to signals, and provide the count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"list all beds and the count of signals associated with each bed ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"list the beds and count of signals associated with each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"return the beds and count of signals associated with each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"list beds and no.of signals associated with each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"list the beds and no.of signals associated with each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"list the beds and num of signals ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"list the beds and number of signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"list the beds signals count","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"return the beds and no.of signals associated","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"return the beds and num of signals ","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"return the beds and number of signals","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"return the beds signals count","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Show the beds that have been allocated to signals, along with the count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Provide a list of beds that have been assigned to signals, including the count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Display the beds that have been designated for signals, and indicate the count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"List the beds that have been assigned to signals, and show the count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Present a breakdown of the beds that have been allocated to signals, along with the respective count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the beds that have been assigned to signals, and provide the count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Gather the beds that have been allocated to signals, and indicate the count of occurrences for each respective bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Identify the beds that have been assigned to signals, and show the count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the beds that have been assigned to signals, and include the count of occurrences for each bed","completion":"q=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},

    {"prompt":"list the total no.of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list no.of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list num of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list number of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list Health care activities count","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"num of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"number of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no. of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the num of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the number of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the count of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many Health care activities are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many different Health care activities are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many unique Health care activities are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Count the number of Health care activities on the list","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Determine the total quantity of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Calculate the total count of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Find out how many Health care activities are on the list","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Enumerate the number of Health care activities listed","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Assess the total number of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Tabulate the count of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Compute the quantity of Health care activities listed","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list no.of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list num of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list number of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list Medical Procedure count","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"num of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"number of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no. of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the num of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the number of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the count of Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many Medical Procedure are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many different Medical Procedure are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many unique Medical Procedure are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list no.of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list num of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list number of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list Medical tests count","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"num of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"number of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no. of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the num of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the number of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the count of Medical tests","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many Medical tests are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many different Medical tests are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many unique Medical tests are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list no.of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list num of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list number of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list Medical treatments count","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"num of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"number of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no. of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the num of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the number of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the count of Medical treatments","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many Medical treatments are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many different Medical treatments are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many unique Medical treatments are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list no.of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list num of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list number of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list Healthcare service count","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"num of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"number of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no. of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the num of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the number of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the count of Healthcare service","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many Healthcare service are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many different Healthcare service are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many unique Healthcare service are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list no.of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list num of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list number of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list cilinical activity count","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"num of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"number of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no. of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the num of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the number of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the count of cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many cilinical activity are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many different cilinical activity are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many unique cilinical activity are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list no.of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list num of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list number of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"list healthcare treatment count","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"num of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"number of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"no. of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the num of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the number of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"what's the count of healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many healthcare treatment are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many different healthcare treatment are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"How many unique healthcare treatment are there","completion":"S=>(@P HealthCareActivity:*); RETURN COUNT(P.name) AS COUNT LIMIT 100"},

    {"prompt":"list the names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of all Health care activities ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all names of all Health care activities ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of all Health care activities ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list names of all Health care activities ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the names of all Health care activities ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the names of all Health care activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the names of all Health care activities ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of names for all healthcare activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of various healthcare activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the names associated with different healthcare activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the names of all activities related to healthcare","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of names for different healthcare activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of various activities in the healthcare field","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of all healthcare-related activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the names corresponding to different healthcare activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of activities within the healthcare sector","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of all Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of all Medical Procedure ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all names of all Medical Procedure ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of all Medical Procedure ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list names of all Medical Procedure ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of all Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the names of all Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of all Medical Procedure","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of names of all healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the names of all healthcare treatment ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of all healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the names of all healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the names of all healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the names of all healthcare treatment","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the names of all healthcare treatment ","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of names for all cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of various cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the names associated with different cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the names of all activities related to healthcare","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of names for different cilinical activity","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of various activities in the healthcare field","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of all healthcare-related activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the names corresponding to different healthcare activities","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of activities within the healthcare sector","completion":"S=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the names of all Active Problems","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the names of all Active Problems ","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list all names of all Active Problems ","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return the names of all Active Problems ","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list names of all Active Problems ","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the names of all Active Problems","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"provide a list of names of all Active Problems","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the names of all Active Problems ","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the names of all Active Problems","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Identify the names of all Active Problems","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Collect the names of all Active Problems","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the names of all Active Problems","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"find the names of all Active Problems ","completion":"S=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the codes of all Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes of all Active Problems ","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all codes of all Active Problems ","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the codes of all Active Problems ","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list codes of all Active Problems ","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the codes of all Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of codes of all Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the codes of all Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the codes of all Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the codes of all Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the codes of all Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the codes of all Active Problems ","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of codes for all Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the codes of various Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the codes associated with different Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the codes of all Problems related to Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of codes for different Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the codes of various Problems in the Active Problems field","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes of all Active Problems-related Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the codes corresponding to different Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the codes of Problems within the Active Problems sector","completion":"q=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the names of coding system assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all names of coding system assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of coding system assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list names of coding system assosiated with Active Problems ","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list names of coding system assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return names of coding system assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of coding system names associated with active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of coding systems linked to active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the coding system names that are associated with active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the names of coding systems related to active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of coding system names for active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of coding systems associated with active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of coding systems for active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system names corresponding to active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of coding systems linked to cases of active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the preferred terms assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all preferred terms assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the preferred terms assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list preferred terms assosiated with Active Problems ","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list preferred terms assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return preferred terms assosiated with Active Problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide prefered terms associated with active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms linked to active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the preferred terms that are associated with active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the preferred terms related to active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of preferred terms for active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms associated with active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms for active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms corresponding to active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms linked to cases of active problems","completion":"q=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the total no.of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"return count of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"list no.of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"list num of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"list number of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"list Diagnostic Procedures count","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"num of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"number of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"no of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"no. of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"what's the num of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"what's the number of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"what's the count of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"How many Diagnostic Procedures are there","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"How many different Diagnostic Procedures are there","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"How many unique Diagnostic Procedures are there","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Count the number of Diagnostic Procedures on the list","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Determine the total quantity of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Calculate the total count of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Find out how many Diagnostic Procedures are on the list","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Enumerate the number of Diagnostic Procedures listed","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Assess the total number of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Tabulate the count of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Compute the quantity of Diagnostic Procedures listed","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},
    {"prompt":"Generate a listing indicating the count of Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 1"},

    {"prompt":"list the codes of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all codes of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the codes of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list codes of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the codes of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of codes of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the codes of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the codes of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the codes of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the codes of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the codes of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of codes for all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the codes of various Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the codes associated with different Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the codes of all Problems related to Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of codes for different Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the codes of various Problems in the Diagnostic Procedures field","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes of all Diagnostic Procedures-related Problems","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the codes corresponding to different Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the codes of Problems within the Diagnostic Procedures sector","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the preferred terms assosiated with Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the preferred terms of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all preferred terms of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the preferred terms of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list preferred terms of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of preferred terms of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the preferred terms of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the preferred terms of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms of all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the preferred terms of all Diagnostic Procedures ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of preferred terms for all Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms of various Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the preferred terms associated with different Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the preferred terms of all Problems related to Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of preferred terms for different Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms of various Problems in the Diagnostic Procedures field","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms of all Diagnostic Procedures-related Problems","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms corresponding to different Diagnostic Procedures","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms of Problems within the Diagnostic Procedures sector","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the names of coding system assosiated with Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all names of coding system for Diagnostic Procedures and the count of procedure associated ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of coding system assosiated with Diagnostic Procedures and count of procedure associated","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of coding system for Diagnostic Procedures and count of procedure associated","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list names of coding system assosiated with Diagnostic Procedures and no.of procedure associated with each","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of coding system assosiated with Diagnostic Procedures and no.of procedure associated","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of coding system assosiated with Diagnostic Procedures and num of procedure ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of coding system assosiated with Diagnostic Procedures and number of procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of coding system for Diagnostic Procedures procedure count","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of coding system assosiated with Diagnostic Procedures and no.of procedure associated","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of coding system assosiated with Diagnostic Procedures and num of procedure ","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of coding system assosiated with Diagnostic Procedures and number of procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of coding system assosiated with Diagnostic Procedures procedure count","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of coding system names associated with Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of coding systems linked to Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the coding system names that are associated with Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the names of coding systems related to Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of coding system names for Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of coding systems associated with Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of coding systems for Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system names corresponding to Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of coding systems linked to cases of Diagnostic Procedures including the count of occurrences for each procedure","completion":"q=>(@s DiagnosticProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the total no.of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"list no.of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"list num of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"list number of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"list Addresses which are associated with postcodes count","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"num of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"number of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"no of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"no. of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the num of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the number of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"what's the count of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"How many Addresses which are associated with postcodes are there","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"How many different Addresses which are associated with postcodes are there","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"How many unique Addresses which are associated with postcodes are there","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Count the number of Addresses which are associated with postcodes on the list","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Find out how many Addresses which are associated with postcodes are on the list","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Enumerate the number of Addresses which are associated with postcodes listed","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Assess the total number of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Tabulate the count of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Compute the quantity of Addresses which are associated with postcodes listed","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of Addresses which are associated with postcodes","completion":"s=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN UCOUNT(O.name) AS Cnt LIMIT 100"},

    {"prompt":"list the total no.of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"list no.of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"list num of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"list number of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"list Laboratory Procedures count","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"num of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"number of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"no of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"no. of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"what's the num of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"what's the number of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"what's the count of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"How many Laboratory Procedures are there","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"How many different Laboratory Procedures are there","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"How many unique Laboratory Procedures are there","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Count the number of Laboratory Procedures on the list","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the total count of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Find out how many Laboratory Procedures are on the list","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Enumerate the number of Laboratory Procedures listed","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Assess the total number of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Tabulate the count of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Compute the quantity of Laboratory Procedures listed","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN COUNT(s.name) AS cnt LIMIT 100"},

    {"prompt":"list the codes of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all codes of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the codes of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list codes of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the codes of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of codes of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the codes of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the codes of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the codes of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the codes of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the codes of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of codes for all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the codes of various Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the codes associated with different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the codes of all Problems related to Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of codes for different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the codes of various Problems in the Laboratory Procedures field","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes of all Laboratory Procedures-related Problems","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the codes corresponding to different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the codes of Problems within the Laboratory Procedures sector","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the preferred terms assosiated with Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the preferred terms of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all preferred terms of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the preferred terms of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list preferred terms of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of preferred terms of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the preferred terms of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the preferred terms of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the preferred terms of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of preferred terms for all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms of various Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the preferred terms associated with different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the preferred terms of all Problems related to Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of preferred terms for different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms of various Problems in the Laboratory Procedures field","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms of all Laboratory Procedures-related Problems","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms corresponding to different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms of Problems within the Laboratory Procedures sector","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of preferred terms associated with Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms linked to Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the preferred terms that are associated with Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the preferred terms related to Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of preferred terms for Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms associated with Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms for Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms corresponding to Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms linked to cases of Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the names of coding system assosiated with Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of coding system of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of coding system of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all names of coding system of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the names of coding system of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list names of coding system of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the names of coding system of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of names of coding system of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of coding system of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the names of coding system of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the names of coding system of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the names of coding system of all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the names of coding system of all Laboratory Procedures ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of names of coding system for all Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of coding system of various Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the names of coding system associated with different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the names of coding system of all Problems related to Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of names of coding system for different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of coding system of various Problems in the Laboratory Procedures field","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of coding system of all Laboratory Procedures-related Problems","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the names of coding system corresponding to different Laboratory Procedures","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of coding system of Problems within the Laboratory Procedures sector","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the total no.of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list no.of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list num of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list number of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list Hospitals count","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"num of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"number of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"no of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"no. of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the num of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the number of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the count of Hospitals","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many Hospitals are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many different Hospitals are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many unique Hospitals are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list no.of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list num of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list number of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list Hospitals count","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"num of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"number of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"no of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"no. of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the num of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the number of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the count of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many Hospital Service are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many different Hospital Service are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many unique Hospital Service are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list no.of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list num of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list number of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list clinics count","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"num of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"number of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"no of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"no. of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the num of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the number of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"what's the count of Clinics","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many Clinics are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many different Clinics are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"How many unique Clinics are there","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Count the number of Hospital Service on the list","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the total count of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Find out how many Hospital Service are on the list","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Enumerate the number of Hospital Service listed","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Assess the total number of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Tabulate the count of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Compute the quantity of Hospital Service listed","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},

    {"prompt":"list id's of all Hospital Service ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the id's of all Hospital Service ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list id's of all Hospital Service ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the id's of all Hospital Service","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the id's of all Hospital Service associated with all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the id's of all Hospital Service for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of id's of all Hospital Service","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the id's of all Hospital Service for all orders ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the id's of all Hospital Service for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the id's of all Hospital Service for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the id's of all Hospital Service for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the id's of all Hospital Service related to all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the id's of all Hospital Service ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list id's of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the id's of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list id's of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the id's of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the id's of all Hospitals associated with all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the id's of all Hospitals for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of id's of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the id's of all Hospitals for all orders ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the id's of all Hospitals for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the id's of all Hospitals for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the id's of all Hospitals for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the id's of all Hospitals related to all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the id's of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list id's of all clinics ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the id's of all clinics ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list id's of all clinics ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the id's of all clinics","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the id's of all clinics associated with all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the id's of all clinics for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of id's of all clinics","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the id's of all clinics for all orders ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the id's of all clinics for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the id's of all clinics for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the id's of all clinics for all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the id's of all clinics related to all orders","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the id's of all clinics ","completion":"s=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the preferred terms assosiated with Hospital Service","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the preferred terms of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all preferred terms of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the preferred terms of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list preferred terms of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of preferred terms of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the preferred terms of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the preferred terms of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms of all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the preferred terms of all Hospitals ","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of preferred terms for all Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms of various Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the preferred terms associated with different Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the preferred terms of all Problems related to Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of preferred terms for different Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred terms of various Problems in the Hospitals field","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms corresponding to different Hospitals","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms of Problems within the Hospitals sector","completion":"s=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the total no.of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Count the number of Home Phone numbers on the list","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the total count of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Find out how many Home Phone numbers are on the list","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Enumerate the number of Home Phone numbers listed","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Assess the total number of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Tabulate the count of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Compute the quantity of Home Phone numbers listed","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"list the total no.of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Count the number of Phone numbers on the list","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Determine the total quantity of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Calculate the total count of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Find out how many Phone numbers are on the list","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Enumerate the number of Phone numbers listed","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Assess the total number of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Tabulate the count of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Compute the quantity of Phone numbers listed","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},
    {"prompt":"Generate a listing indicating the count of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN COUNT(S.name) AS cnt LIMIT 100"},

    {"prompt":"list the names of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of Home Phone numbers names ","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the Home Phone numbers names","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the names of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of Home Phone numbers names","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the Home Phone numbers names","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of Home Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list the names of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of Phone numbers names ","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the Phone numbers names","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the names of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of Phone numbers names","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the names of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the names of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the Phone numbers names","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the names of Phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the names of Home Phone numbers which are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"Provide a list of Home Phone numbers names which are associated with patients along with the count ","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"Display the names of Home Phone numbers which are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"Show the Home Phone numbers names that are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"List the names of Home Phone numbers which are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"Present a compilation of Home Phone numbers names which are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"Gather the names of Home Phone numbers which are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"Retrieve the names of Home Phone numbers which are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"Obtain the Home Phone numbers names which are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},
    {"prompt":"Display the names of Home Phone numbers which are associated with patients along with the count","completion":"s=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 10"},

    {"prompt":"list the severity of allergies that are associated with Patients along with the count of patients","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of allergy severities associated with patients, along with the count of patients for each severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the severity levels of allergies that are linked to patients, along with the count of patients for each severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the allergy severity ratings associated with patients, and indicate the count of patients for each severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the severities of allergies that are associated with patients, and show the count of patients for each severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of allergy severities that are linked to patients, along with the respective count of patients for each severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity levels of allergies that are associated with patients, and provide the count of patients for each severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the allergy severity information for patients, and indicate the count of patients for each respective severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the severity of allergies associated with patients, and show the count of patients for each severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the allergy severity levels that are associated with patients, and include the count of patients for each severity","completion":"s=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the class types of signals associated with healthcare activities, and provide the count of signals for each class type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the types of signal classes that are linked to healthcare activities, and indicate the count of signals for each class type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of signal class types associated with healthcare activities, along with the count of signals for each class type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the categories of signal classes that are associated with healthcare activities, and show the count of signals for each category","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the class types of signals that are linked to healthcare activities, and provide the count of signals for each type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of signal class types associated with healthcare activities, along with the respective count of signals for each type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the class types of signals that are associated with healthcare activities, and include the count of signals for each type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the class types of signals associated with healthcare activities, and indicate the count of signals for each respective type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the types of signal classes that are associated with healthcare activities, and show the count of signals for each class type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the class types of signals that are linked to healthcare activities, and provide the count of signals for each type","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the pre Admit Number of signals associated with healthcare activities, and provide the count of signals for each class type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the types of pre Admit Number that are linked to healthcare activities, and indicate the count of signals for each class type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of pre Admit Number associated with healthcare activities, along with the count of signals for each class type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the categories of pre Admit Number that are associated with healthcare activities, and show the count of signals for each category","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the pre Admit Number that are linked to healthcare activities, and provide the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of pre Admit Number types associated with healthcare activities, along with the respective count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the pre Admit Number of signals that are associated with healthcare activities, and include the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the pre Admit Number of signals associated with healthcare activities, and indicate the count of signals for each respective type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the types of signal pre Admit Number that are associated with healthcare activities, and show the count of signals for each class type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the pre Admit Number of signals that are linked to healthcare activities, and provide the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.preAdmitNumber AS preAdmitNumber, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the patient Type of signals associated with healthcare activities, and provide the count of signals for each class type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the types of signal patient Type that are linked to healthcare activities, and indicate the count of signals for each class type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of signal patient Type associated with healthcare activities, along with the count of signals for each class type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the categories of signal patient Type that are associated with healthcare activities, and show the count of signals for each category","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the patient Type of signals that are linked to healthcare activities, and provide the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of signal patient Type associated with healthcare activities, along with the respective count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the patient Type of signals that are associated with healthcare activities, and include the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the patient Type of signals associated with healthcare activities, and indicate the count of signals for each respective type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the types of signal patient Type that are associated with healthcare activities, and show the count of signals for each class type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the patient Type of signals that are linked to healthcare activities, and provide the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the order control types of signals associated with orders, and provide the count of signals for each order control type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the types of order control associated with signals for orders, and indicate the count of signals for each order control type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of order control types linked to signals for orders, along with the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the categories of order control types that are associated with signals for orders, and show the count of signals for each category","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the order control types of signals associated with orders, and provide the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of order control types associated with signals for orders, along with the respective count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the order control types of signals that are associated with orders, and include the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the order control types of signals associated with orders, and indicate the count of signals for each respective type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the types of order control associated with signals for orders, and show the count of signals for each order control type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the order control types of signals that are linked to orders, and provide the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the order status types of signals associated with orders, and provide the count of signals for each order status type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the types of order status associated with signals for orders, and indicate the count of signals for each order status type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of order status types linked to signals for orders, along with the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the categories of order status types that are associated with signals for orders, and show the count of signals for each category","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the order status types of signals associated with orders, and provide the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of order status types associated with signals for orders, along with the respective count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the order status types of signals that are associated with orders, and include the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the order status types of signals associated with orders, and indicate the count of signals for each respective type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the types of order status associated with signals for orders, and show the count of signals for each order status type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the order status types of signals that are linked to orders, and provide the count of signals for each type","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the values of fillerField1 associated with signals for diagnostic procedures, and provide the count of signals for each fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the values of fillerField1 linked to signals for diagnostic procedures, and indicate the count of signals for each fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of fillerField1 values associated with signals for diagnostic procedures, along with the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the fillerField1 values that are associated with signals for diagnostic procedures, and show the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the fillerField1 values of signals associated with diagnostic procedures, and provide the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of fillerField1 values associated with signals for diagnostic procedures, along with the respective count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the fillerField1 values of signals that are associated with diagnostic procedures, and include the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the fillerField1 values of signals associated with diagnostic procedures, and indicate the count of signals for each respective value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the fillerField1 values associated with signals for diagnostic procedures, and show the count of signals for each fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the fillerField1 values of signals that are linked to diagnostic procedures, and provide the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the values of fillerField2 associated with signals for diagnostic procedures, and provide the count of signals for each fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the values of fillerField2 linked to signals for diagnostic procedures, and indicate the count of signals for each fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of fillerField2 values associated with signals for diagnostic procedures, along with the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the fillerField2 values that are associated with signals for diagnostic procedures, and show the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the fillerField2 values of signals associated with diagnostic procedures, and provide the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a breakdown of fillerField2 values associated with signals for diagnostic procedures, along with the respective count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the fillerField2 values of signals that are associated with diagnostic procedures, and include the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the fillerField2 values of signals associated with diagnostic procedures, and indicate the count of signals for each respective value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the fillerField2 values associated with signals for diagnostic procedures, and show the count of signals for each fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the fillerField2 values of signals that are linked to diagnostic procedures, and provide the count of signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the names of practitioners who attended, ensuring unique combinations of practioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"list the names of all attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"list all names of all attending doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"return the names of all attending doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"list names of all attending doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Get the names of all attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"provide a list of names of all attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Gather the names of all attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Identify the names of all attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Collect the names of all attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Obtain the names of all attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"find the names of all attending doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Provide a list of names for all attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Display the names of various attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Show the names associated with different attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"List the names of all doctors related to attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Present a compilation of names for different attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Gather the names of various doctors in the attending doctors field","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Retrieve the names of all attending doctors-related doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Obtain the names corresponding to different attending doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Display the names of doctors within the attending doctors sector","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Provide a list of practitioner names who attended, ensuring unique combinations of practitioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Display the names of practitioners who attended, ensuring unique combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Show a unique list of practitioner names who attended, associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Present the names of practitioners who attended, ensuring each combination with signals is unique","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"List the practitioner names who attended, ensuring there are no duplicate combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Retrieve a set of practitioner names who attended, ensuring uniqueness in combination with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Gather the names of practitioners who attended, ensuring each combination with signals is distinct","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Get a unique set of practitioner names who attended, that are associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},
    {"prompt":"Display the practitioner names who attended, ensuring there are no repeated combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ATTENDING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC name LIMIT 100"},

    {"prompt":"list the names of practitioners who referred, ensuring unique combinations of practioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list the names of all referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve the names of all referring doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list all names of all referring doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"return the names of all referring doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list names of all referring doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Get the names of all referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"provide a list of names of all referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of all referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Identify the names of all referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Collect the names of all referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Obtain the names of all referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"find the names of all referring doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Provide a list of names for all referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of various referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Show the names associated with different referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"List the names of all doctors related to referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Present a compilation of names for different referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of various doctors in the referring doctors field","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve the names of all referring doctors-related doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Obtain the names corresponding to different referring doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of doctors within the referring doctors sector","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Provide a list of practitioner names who referred, ensuring unique combinations of practitioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of practitioners who referred, ensuring unique combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Show a unique list of practitioner names who referred, associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Present the names of practitioners who referred, ensuring each combination with signals is unique","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"List the practitioner names who referred, ensuring there are no duplicate combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve a set of practitioner names who referred, ensuring uniqueness in combination with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of practitioners who referred, ensuring each combination with signals is distinct","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Get a unique set of practitioner names who referred, that are associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the practitioner names who referred, ensuring there are no repeated combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r REFERRING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},

    {"prompt":"list the names of practitioners who consulted, ensuring unique combinations of practioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list the names of all consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve the names of all consulting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list all names of all consulting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"return the names of all consulting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list names of all consulting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Get the names of all consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"provide a list of names of all consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of all consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Identify the names of all consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Collect the names of all consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Obtain the names of all consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"find the names of all consulting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Provide a list of names for all consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of various consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Show the names associated with different consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"List the names of all doctors related to consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Present a compilation of names for different consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of various doctors in the consulting doctors field","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve the names of all consulting doctors-related doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Obtain the names corresponding to different consulting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of doctors within the consulting doctors sector","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Provide a list of practitioner names who consulted, ensuring unique combinations of practitioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of practitioners who consulted, ensuring unique combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Show a unique list of practitioner names who consulted, associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Present the names of practitioners who consulted, ensuring each combination with signals is unique","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"List the practitioner names who consulted, ensuring there are no duplicate combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve a set of practitioner names who consulted, ensuring uniqueness in combination with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of practitioners who consulted, ensuring each combination with signals is distinct","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Get a unique set of practitioner names who consulted, that are associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the practitioner names who consulted, ensuring there are no repeated combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},

    {"prompt":"list the names of practitioners who admitted, ensuring unique combinations of practioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list the names of all admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve the names of all admitting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list all names of all admitting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"return the names of all admitting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list names of all admitting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Get the names of all admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"provide a list of names of all admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of all admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Identify the names of all admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Collect the names of all admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Obtain the names of all admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"find the names of all admitting doctors ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Provide a list of names for all admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of various admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Show the names associated with different admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"List the names of all doctors related to admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Present a compilation of names for different admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of various doctors in the admitting doctors field","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve the names of all admitting doctors-related doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Obtain the names corresponding to different admitting doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of doctors within the admitting doctors sector","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Provide a list of practitioner names who admitted, ensuring unique combinations of practitioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of practitioners who admitted, ensuring unique combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Show a unique list of practitioner names who admitted, associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Present the names of practitioners who admitted, ensuring each combination with signals is unique","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"List the practitioner names who admitted, ensuring there are no duplicate combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve a set of practitioner names who admitted, ensuring uniqueness in combination with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of practitioners who admitted, ensuring each combination with signals is distinct","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Get a unique set of practitioner names who admitted, that are associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the practitioner names who admitted, ensuring there are no repeated combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r ADMITTING_DOCTOR_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 100"},

    {"prompt":"list the names of practitioners who served as primary care providers, ensuring unique combinations of practioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"list the names of all primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Retrieve the names of all primary care providers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"list all names of all primary care providers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"return the names of all primary care providers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"list names of all primary care providers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Get the names of all primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"provide a list of names of all primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Gather the names of all primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Identify the names of all primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Collect the names of all primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Obtain the names of all primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"find the names of all primary care providers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Provide a list of names for all primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Display the names of various primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Show the names associated with different primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"List the names of all doctors related to primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Present a compilation of names for different primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Gather the names of various doctors in the primary care providers field","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Retrieve the names of all primary care providers-related doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Obtain the names corresponding to different primary care providers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Display the names of doctors within the primary care providers sector","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Provide a list of practitioner names who served as primary care providers, ensuring unique combinations of practitioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Display the names of practitioners who served as primary care providers, ensuring unique combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Show a unique list of practitioner names who served as primary care providers, associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Present the names of practitioners who served as primary care providers, ensuring each combination with signals is unique","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"List the practitioner names who served as primary care providers, ensuring there are no duplicate combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Retrieve a set of practitioner names who served as primary care providers, ensuring uniqueness in combination with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Gather the names of practitioners who served as primary care providers, ensuring each combination with signals is distinct","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Get a unique set of practitioner names who served as primary care providers, that are associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},
    {"prompt":"Display the practitioner names who served as primary care providers, ensuring there are no repeated combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r PRIMARY_CARE_PROVIDER_WAS]->(@O Practitioner:*);RETURN O.name AS name SORT_DESC_QLEX name LIMIT 10"},

    {"prompt":"list the names of practitioners who was responsible observers, ensuring unique combinations of practioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list the names of all responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve the names of all responsible observers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list all names of all responsible observers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"return the names of all responsible observers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"list names of all responsible observers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Get the names of all responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"provide a list of names of all responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of all responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Identify the names of all responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Collect the names of all responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Obtain the names of all responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"find the names of all responsible observers ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Provide a list of names for all responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of various responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Show the names associated with different responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"List the names of all doctors related to responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Present a compilation of names for different responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of various doctors in the responsible observers field","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve the names of all responsible observers-related doctors","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Obtain the names corresponding to different responsible observers","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of doctors within the responsible observers sector","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Provide a list of practitioner names who was responsible observers, ensuring unique combinations of practitioners and signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the names of practitioners who was responsible observers, ensuring unique combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Show a unique list of practitioner names who was responsible observers, associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Present the names of practitioners who was responsible observers, ensuring each combination with signals is unique","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"List the practitioner names who was responsible observers, ensuring there are no duplicate combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Retrieve a set of practitioner names who was responsible observers, ensuring uniqueness in combination with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Gather the names of practitioners who was responsible observers, ensuring each combination with signals is distinct","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Get a unique set of practitioner names who was responsible observers, that are associated with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},
    {"prompt":"Display the practitioner names who was responsible observers, ensuring there are no repeated combinations with signals","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS name SORT_DESC_QLEX name LIMIT 100"},

    {"prompt":"list the names of practitioners who serve as primary care providers for Hospitals, and provide the count of organizations associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list names of primary care providers and the count of hospitals associated with each doctor ","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"List the names of practitioners who act as primary care providers for Hospitals, and indicate the count of organizations associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the names of practitioners who serve as primary care providers for Hospitals, along with the count of organizations linked to each practitioner.","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Display the names of practitioners who are primary care providers for Hospitals, and provide the count of organizations associated with each practitioner.","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Present a breakdown of practitioners who serve as primary care providers for Hospitals, including the respective count of organizations for each practitioner.","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the names of practitioners who act as primary care providers for Hospitals, and include the count of organizations associated with each practitioner.","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Gather the names of practitioners who serve as primary care providers for Hospitals, and show the count of organizations linked to each respective practitioner","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Identify the practitioners who act as primary care providers for Hospitals, and indicate the count of organizations associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the names of practitioners who serve as primary care providers for Hospitals, and provide the count of organizations for each practitioner","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"List the practitioners who act as primary care providers for Hospitals, and specify the count of organizations associated with each respective practitioner","completion":"s=>(@S Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@O HealthCareOrganisation:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"list the names of practitioners who serve as responsible observers, and provide the count of results associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"list names of responsible observers and the count of results associated with each doctor","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"List the names of practitioners who act as responsible observers, and indicate the count of results associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"Show the names of practitioners who serve as responsible observers, along with the count of results linked to each practitioner.","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"Display the names of practitioners who are responsible observers, and provide the count of results associated with each practitioner.","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"Present a breakdown of practitioners who serve as responsible observers, including the respective count of results for each practitioner.","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"Retrieve the names of practitioners who act as responsible observers, and include the count of results associated with each practitioner.","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"Gather the names of practitioners who serve as responsible observers, and show the count of results linked to each respective practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"Identify the practitioners who act as responsible observers, and indicate the count of results associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"Get the names of practitioners who serve as responsible observers, and provide the count of results for each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},
    {"prompt":"List the practitioners who act as responsible observers, and specify the count of results associated with each respective practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_RESPONSIBLE_OBSERVER_FOR]->(@O Finding:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 10"},

    {"prompt":"list the names of practitioners who acted as assistant result interpreters for laboratory procedures, and provide the count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list names of assistant result interpreters for laboratory procedures and count procedures associated with each doctor","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of practitioner names who served as assistant result interpreters for laboratory procedures, along with the respective count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the names of practitioners who acted as assistant result interpreters for laboratory procedures, and indicate the count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the names of practitioners who served as assistant result interpreters for laboratory procedures, along with the count of procedures linked to each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present a breakdown of practitioner names who acted as assistant result interpreters for laboratory procedures, including the corresponding count of procedures for each practitioner.","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the names of practitioners who functioned as assistant result interpreters for laboratory procedures, and include the count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the names of practitioners who worked as assistant result interpreters for laboratory procedures, and provide the count of procedures associated with each respective practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Identify the practitioners who served as assistant result interpreters for laboratory procedures, and specify the count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the names of practitioners who acted as assistant result interpreters for laboratory procedures, and provide the count of procedures for each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the practitioners who functioned as assistant result interpreters for laboratory procedures, and indicate the count of procedures associated with each respective practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O LaboratoryProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the names of practitioners who acted as assistant result interpreters for diagnostic procedures, and provide the count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list names of assistant result interpreters for diagnostic procedures and count procedures associated with each doctor","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of practitioner names who served as assistant result interpreters for diagnostic procedures, along with the respective count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the names of practitioners who acted as assistant result interpreters for diagnostic procedures, and indicate the count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the names of practitioners who served as assistant result interpreters for diagnostic procedures, along with the count of procedures linked to each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present a breakdown of practitioner names who acted as assistant result interpreters for diagnostic procedures, including the corresponding count of procedures for each practitioner.","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the names of practitioners who functioned as assistant result interpreters for diagnostic procedures, and include the count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the names of practitioners who worked as assistant result interpreters for diagnostic procedures, and provide the count of procedures associated with each respective practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Identify the practitioners who served as assistant result interpreters for diagnostic procedures, and specify the count of procedures associated with each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the names of practitioners who acted as assistant result interpreters for diagnostic procedures, and provide the count of procedures for each practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the practitioners who functioned as assistant result interpreters for diagnostic procedures, and indicate the count of procedures associated with each respective practitioner","completion":"s=>(@S Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN S.name AS S, COUNT(O.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the values of fillerField1 associated with signals for laboratory procedures, and provide the count of signals for each fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list fillerfield1 for laboratory tests and count signals for each fillerfeild1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list fillerfield1 for laboratory tests","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the fillerField1 values linked to signals for laboratory procedures, along with the count of signals for each fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the fillerField1 values associated with signals for laboratory procedures, and display the count of signals for each corresponding fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of fillerField1 values that are associated with signals for laboratory procedures, along with the count of signals for each specific fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the fillerField1 values related to signals for laboratory procedures, and indicate the count of signals for each particular fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the fillerField1 values associated with signals for laboratory procedures, along with the count of signals for each respective fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the fillerField1 values that are linked to signals for laboratory procedures, and provide the count of signals for each fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the values of fillerField1 that are associated with signals for laboratory procedures, and specify the count of signals for each respective fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the fillerField1 values related to signals for laboratory procedures, and indicate the count of signals for each fillerField1 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the values of fillerField1 that are linked to signals for laboratory procedures, and provide the count of signals for each value of fillerField1","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.fillerField1 AS fillerField1, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the values of fillerField2 associated with signals for laboratory procedures, and provide the count of signals for each fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list fillerfield2 for laboratory tests and count signals for each fillerfeild2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list fillerfield2 for laboratory tests","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the fillerField2 values linked to signals for laboratory procedures, along with the count of signals for each fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the fillerField2 values associated with signals for laboratory procedures, and display the count of signals for each corresponding fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of fillerField2 values that are associated with signals for laboratory procedures, along with the count of signals for each specific fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the fillerField2 values related to signals for laboratory procedures, and indicate the count of signals for each particular fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present the fillerField2 values associated with signals for laboratory procedures, along with the count of signals for each respective fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the fillerField2 values that are linked to signals for laboratory procedures, and provide the count of signals for each fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the values of fillerField2 that are associated with signals for laboratory procedures, and specify the count of signals for each respective fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the fillerField2 values related to signals for laboratory procedures, and indicate the count of signals for each fillerField2 value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the values of fillerField2 that are linked to signals for laboratory procedures, and provide the count of signals for each value of fillerField2","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the values of last status associated with signals for laboratory procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return values of last status for laboratory tests and count signals for each value","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"return values of last status for lab tests","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the last status values linked to signals for laboratory procedures, along with the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the last status values associated with signals for laboratory procedures, and display the count of signals for each corresponding status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of last status values that are associated with signals for laboratory procedures, along with the count of signals for each specific status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the last status values related to signals for laboratory procedures, and indicate the count of signals for each particular status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the last status values associated with signals for laboratory procedures, along with the count of signals for each respective status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the last status values that are linked to signals for laboratory procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the values of last status that are associated with signals for laboratory procedures, and specify the count of signals for each respective status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the last status values related to signals for laboratory procedures, and indicate the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the values of last status that are linked to signals for laboratory procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the diagnostic services associated with signals for laboratory procedures, and provide the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"list all diagnostic services for lab tests and count signals for each service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the diagnostic services linked to signals for laboratory procedures, along with the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the diagnostic services associated with signals for laboratory procedures, and display the count of signals for each specific diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of diagnostic services that are linked to signals for laboratory procedures, and indicate the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the diagnostic services related to signals for laboratory procedures, and specify the count of signals for each respective diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the diagnostic services associated with signals for laboratory procedures, and provide the count of signals for each corresponding diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the diagnostic services that are associated with signals for laboratory procedures, and indicate the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the diagnostic services linked to signals for laboratory procedures, and specify the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the diagnostic services related to signals for laboratory procedures, and provide the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the diagnostic services associated with signals for laboratory procedures, and indicate the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the statuses associated with signals for laboratory procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the statuses linked to signals for laboratory procedures, along with the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the statuses associated with signals for laboratory procedures, and display the count of signals for each specific status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of statuses that are linked to signals for laboratory procedures, and indicate the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the statuses related to signals for laboratory procedures, and specify the count of signals for each respective status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the statuses associated with signals for laboratory procedures, and provide the count of signals for each corresponding status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the statuses that are associated with signals for laboratory procedures, and indicate the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the statuses linked to signals for laboratory procedures, and specify the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the statuses related to signals for laboratory procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the statuses associated with signals for laboratory procedures, and indicate the count of signals for each status ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the values of last status associated with signals for diagnostic procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the last status values linked to signals for diagnostic procedures, along with the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the last status values associated with signals for diagnostic procedures, and display the count of signals for each corresponding status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of last status values that are associated with signals for diagnostic procedures, along with the count of signals for each specific status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the last status values related to signals for diagnostic procedures, and indicate the count of signals for each particular status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the last status values associated with signals for diagnostic procedures, along with the count of signals for each respective status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the last status values that are linked to signals for diagnostic procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the values of last status that are associated with signals for diagnostic procedures, and specify the count of signals for each respective status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the last status values related to signals for diagnostic procedures, and indicate the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the values of last status that are linked to signals for diagnostic procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.lastStatusChange AS lastStatusChange, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the diagnostic services associated with signals for diagnostic procedures, and provide the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the diagnostic services linked to signals for diagnostic procedures, along with the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the diagnostic services associated with signals for diagnostic procedures, and display the count of signals for each specific diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of diagnostic services that are linked to signals for diagnostic procedures, and indicate the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the diagnostic services related to signals for diagnostic procedures, and specify the count of signals for each respective diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the diagnostic services associated with signals for diagnostic procedures, and provide the count of signals for each corresponding diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the diagnostic services that are associated with signals for diagnostic procedures, and indicate the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the diagnostic services linked to signals for diagnostic procedures, and specify the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the diagnostic services related to signals for diagnostic procedures, and provide the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the diagnostic services associated with signals for diagnostic procedures, and indicate the count of signals for each diagnostic service","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the statuses associated with signals for diagnostic procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the statuses linked to signals for diagnostic procedures, along with the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the statuses associated with signals for diagnostic procedures, and display the count of signals for each specific status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide a list of statuses that are linked to signals for diagnostic procedures, and indicate the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the statuses related to signals for diagnostic procedures, and specify the count of signals for each respective status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the statuses associated with signals for diagnostic procedures, and provide the count of signals for each corresponding status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"List the statuses that are associated with signals for diagnostic procedures, and indicate the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the statuses linked to signals for diagnostic procedures, and specify the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Gather the statuses related to signals for diagnostic procedures, and provide the count of signals for each status","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the statuses associated with signals for diagnostic procedures, and indicate the count of signals for each status ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN r.status AS status, COUNT(S.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list various attributes of signals including data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location ","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"list all attributes of signals","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"list various elements of signals","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"list various characteristics of signals","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"Retrieve different signal attributes such as data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location ","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"Get a list of signal details including data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location ","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"Show various signal attributes such as data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location ","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"Provide a list of signal properties including data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"Display different attributes of signals such as data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"Present a comprehensive list of signal attributes including data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"List various signal properties such as data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"Gather information about different signal attributes like data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},
    {"prompt":"Retrieve a range of signal details including data controller, signal date and time, message code, message type, signal ID, HL7 message version, event type, recorded date, occurred date, description, document type, document status, and document location","completion":"s=>(@S Signal:*);RETURN S.dataController AS dataController, S.signalDateTime AS signalDateTime, S.messageCode AS messageCode, S.messageType AS messageType, S.signalId AS signalID, S.hl7MessageVersion AS hl7MessageVersion, S.eventType AS eventType, S.recordedDate AS recordedDate, S.occurredDate AS occurredDate, S.description AS description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation SORT_DESC signalID LIMIT 100"},

    {"prompt":"list various attributes of patients including signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date ","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"list various attributes of patients","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"list various elements of patients","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"list various characteristics of patients","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"Get patient details such as signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date ","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"Retrieve signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date for patients","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"Provide information about patients including signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"Display patient attributes such as signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"List details of patients including signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"Retrieve patient information such as signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"Gather attributes of patients including signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"Obtain patient details such as signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},
    {"prompt":"Retrieve patient attributes including signal ID, latest event datetime, orders date, diet, NH ID, PI ID, NH ID issuer, PI ID issuer, family name, first name, middle name, date of birth, gender, race, primary language, marital status, religion, nationality, ethnicity, date of death, death indicator, pseudo-person status, ID reliability, and referral date","completion":"s=>(@S Patient:*);RETURN S.signalId AS signalId, S.latestEventDatetime AS latestEventDatetime, S.ordersDate AS ordersDate, S.diet AS diet, S.id_NH AS id_NH, S.id_PI AS id_PI, S.idIssuer_NH AS idIssuer_NH, S.idIssuer_PI AS idIssuer_PI, S.familyName AS familyName, S.firstName AS firstName, S.middleName AS middleName, S.dateOfBirth AS dateOfBirth, S.gender AS gender, S.race AS race, S.primaryLanguage AS primaryLanguage, S.maritalStatus AS maritalStatus, S.religion AS religion, S.nationality AS nationality, S.ethnicity AS ethnicity, S.dateOfDeath AS dateOfDeath, S.deathIndicator AS deathIndicator, S.isPseudoPerson AS isPseudoPerson, S.idReliability AS idReliability, S.referralDate AS referralDate SORT_DESC signalId LIMIT 100"},

    {"prompt":"list the names of practitioners along with their family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"list the names of practitioners","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"list names of doctors","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"list all doctors","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"list details of all doctors","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"Get the names of practitioners, their family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve practitioner details such as names, family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"Provide information about practitioners including names, family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"Display the names of practitioners along with their family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers.","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"List practitioners and their associated details such as names, family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve practitioner names, family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"Gather practitioner attributes including names, family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"Obtain the names of practitioners, their family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve practitioner details such as names, family names, first names, prefixes, GP practice names, GP practice codes, IDs, and ID issuers","completion":"s=>(@S Practitioner:*);RETURN S.name AS Name, S.familyName AS familyName, S.firstName AS firstName, S.prefix AS prefix, S.gpPracticeName AS gpPracticeName, S.gpPracticeCode AS gpPracticeCode, S.id AS id, S.idIssuer AS idIssuer SORT_ASC id LIMIT 100"},

    {"prompt":"list the names of orders along with their placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"list the names of orders","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"get the details of all orders","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"list all order details","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"Get the names of orders, their placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve order details including names, placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"Provide information about orders such as names, placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"Display the names of orders along with their placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"List orders and their associated details such as names, placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve order names, placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"Gather order attributes including names, placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the names of orders, their placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve order details such as names, placer references, filler references, and dates","completion":"s=>(@S Order:*);RETURN S.name AS Name, S.placerReference AS placerReference, S.fillerReference AS fillerReference, S.date AS date SORT_ASC date LIMIT 100"},

    {"prompt":"list the names, codes, preferred terms, and coding systems of laboratory procedures","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Get the names, codes, preferred terms, and coding systems of laboratory procedures","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve information about laboratory procedures including names, codes, preferred terms, and coding systems","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Provide details about laboratory procedures such as names, codes, preferred terms, and coding systems","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Display the names, codes, preferred terms, and coding systems of laboratory procedures","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"List laboratory procedures and their associated attributes such as names, codes, preferred terms, and coding systems","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve procedure names, codes, preferred terms, and coding systems for laboratory procedures","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Gather information about laboratory procedures including names, codes, preferred terms, and coding systems","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Obtain the names, codes, preferred terms, and coding systems of laboratory procedures","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve details about laboratory procedures such as names, codes, preferred terms, and coding systems","completion":"s=>(@S LaboratoryProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},

    {"prompt":"list the names, ids, preferred terms of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"Get the names, ids, preferred terms of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve information about Hospital Service including names, ids, preferred terms","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"Provide details about Hospital Service such as names, ids, preferred terms","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"Display the names, ids, preferred terms of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"List Hospital Service and their associated attributes such as names, ids, preferred terms","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve procedure names, ids, preferred terms for Hospital Service","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"Gather information about Hospital Service including names, ids, preferred terms","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"Obtain the names, ids, preferred terms of Hospital Service","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve details about Hospital Service such as names, ids, preferred terms","completion":"s=>(@S HospitalService:*);RETURN S.name AS Name, S.id AS id, S.preferredTerm AS preferredTerm SORT_ASC id LIMIT 100"},

    {"prompt":"Retrieve the names, labels, IDs, organization names, primary role IDs, address details (line 1, line 2, line 3, town), and country of Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"get the address details of hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"get address of hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"list the names, labels, ids, organization names, addresses and country of all Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve the names, labels, ids, organization names, address details and country of all Hospitals ","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"list all names, labels, ids, organization names, addresses and country of all Hospitals ","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"return the names, labels, ids, organization names, address details and country of all Hospitals ","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"list names, labels, ids, organization names, address details and country of all Hospitals ","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Get the names, labels, ids, organization names, address details and country of all Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"provide a list of names, labels, ids, organization names, address details and country of all Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Gather the names, labels, ids, organization names, address details and country of all Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Identify the names, labels, ids, organization names, addresses and country of all Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Collect the names, labels, ids, organization names, address details and country of all Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Obtain the names, labels, ids, organization names, address details and country of all Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"find the names, labels, ids, organization names, address details and country of all Hospitals ","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Provide a list of names, labels, ids, organization names, address details and country for all Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Display the names, labels, ids, organization names, address details and country of various Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Show the names, labels, ids, organization names, address details and country associated with different Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"List the names, labels, ids, organization names, address details and country of all Hospitals related to Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Present a compilation of names, labels, ids, organization names, address details and country for different Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Gather the names, labels, ids, organization names, address details and country of various Hospitals in the Hospitals field","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve the names, labels, ids, organization names, address details and country of all Hospitals-related Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Obtain the names, labels, ids, organization names, address details and country corresponding to different Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Display the names, labels, ids, organization names, address details and country of Hospitals within the Hospitals sector","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Get the names, labels, IDs, organization names, primary role IDs, address information, and country of Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve information about Hospitals including names, labels, IDs, organization names, primary role IDs, address details, and country","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Provide details about Hospitals such as names, labels, IDs, organization names, primary role IDs, address information, and country","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Display the names, labels, IDs, organization names, primary role IDs, address details, and country of Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"List Hospitals and their associated attributes such as names, labels, IDs, organization names, primary role IDs, address information, and country","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve organization names, labels, IDs, primary role IDs, address details, and country for Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Gather information about Hospitals including names, labels, IDs, organization names, primary role IDs, address details, and country","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Obtain the names, labels, IDs, organization names, primary role IDs, address information, and country of Hospitals","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},
    {"prompt":"Retrieve details about Hospitals such as names, labels, IDs, organization names, primary role IDs, address details, and country","completion":"s=>(@S HealthCareOrganisation:*);RETURN S.name AS Name, S.label AS Label, S.id AS id, S.organisationName AS organisationName, S.primanyRoleId AS primanyRoleId, S.addressLine1 AS addressLine1, S.addressLine2 AS addressLine2, S.addressLine3 AS addressLine3, S.town AS town, S.country AS country SORT_ASC id LIMIT 100"},

    {"prompt":"list the names, codes, preferred terms, and coding systems of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"list the names of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"list the names and codes of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"get the codes of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"get the codes and preferred terms of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"get the codes and coding systems of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"get the preferred terms of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"get the coding systems of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the names, codes, preferred terms, and coding systems of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve information about Diagnostic procedures including names, codes, preferred terms, and coding systems","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide details about Diagnostic procedures such as names, codes, preferred terms, and coding systems","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Display the names, codes, preferred terms, and coding systems of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"List Diagnostic procedures and their associated attributes such as names, codes, preferred terms, and coding systems","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve procedure names, codes, preferred terms, and coding systems for Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Gather information about Diagnostic procedures including names, codes, preferred terms, and coding systems","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the names, codes, preferred terms, and coding systems of Diagnostic procedures","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve details about Diagnostic procedures such as names, codes, preferred terms, and coding systems","completion":"s=>(@S DiagnosticProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the names, labels, codes, preferred terms, and coding systems of results","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"list the names of results","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"get the labels of results","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Get the names, labels, codes, preferred terms, and coding systems associated with results","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve information about results including names, labels, codes, preferred terms, and coding systems","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Provide details about results such as names, labels, codes, preferred terms, and coding systems","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Display the names, labels, codes, preferred terms, and coding systems of results","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"List results and their associated attributes such as names, labels, codes, preferred terms, and coding systems","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve names, labels, codes, preferred terms, and coding systems for results","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Gather information about results including names, labels, codes, preferred terms, and coding systems","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Obtain the names, labels, codes, preferred terms, and coding systems of results","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve details about results such as names, labels, codes, preferred terms, and coding systems","completion":"s=>(@S Finding:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},

    {"prompt":"list the names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes of addresses","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"list address details","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"list names and labels of addresses","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"list cities and postcodes of addresses","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"Get the names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes associated with addresses","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"Retrieve information about addresses including names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"Provide details about addresses such as names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"Display the names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes of addresses","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"List addresses and their associated attributes such as names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"Retrieve names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes for addresses","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"Gather information about addresses including names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"Obtain the names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes of addresses","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},
    {"prompt":"Retrieve details about addresses such as names, labels, street addresses, other designations, cities, state/provinces, countries, other geographic designations, county/parishes, and postcodes","completion":"s=>(@S Address:*);RETURN S.name AS Name, S.label AS label, S.streetAddress AS streetAddress, S.otherDesignation AS otherDesignation, S.city AS city, S.stateProvince AS stateProvince, S.country AS country, S.otherGeographicDesignation AS otherGeographicDesignation, S.countyParish AS countyParish, S.postcode AS postcode SORT_ASC postcode LIMIT 100"},

    {"prompt":"Retrieve the names and labels of unique postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"list the names unique postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"list the names postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"list the labels unique postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"Get the names and labels of distinct postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the names and labels associated with unique postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"Provide the names and labels of distinct postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"Display the names and labels of unique postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"List the names and labels of postcodes that are unique","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve names and labels for unique postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"Gather the names and labels of distinct postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the names and labels of unique postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve details of names and labels for unique postcodes","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Postcode:*);RETURN S.name AS Name, S.label AS label SORT_ASC Name LIMIT 100"},

    {"prompt":"Retrieve the names and labels of point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"Get the names and labels of point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve the names and labels associated with point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"Provide the names and labels of point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"Display the names and labels of point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"List the names and labels of point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve names and labels for point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"Gather the names and labels of point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"Obtain the names and labels of point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve details of names and labels for point of care locations","completion":"s=>(@S PointOfCare:*);RETURN S.name AS Name, S.label AS label SORT_DESC Name LIMIT 100"},

    {"prompt":"list the names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding values associated with consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"list the names of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"list the labels of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"list the dcr concent to share values of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"list the dcrconcenttoshare values of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"list the dcrconcent to share values of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"list the scrconcent to share values of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"Get the names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding values of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding attributes for consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"Provide the names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding values associated with consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"Display the names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding details of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"List the names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding values of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding information for consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"Gather the names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding values of consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding attributes for consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve details of names, labels, dcrConsentToShare, scrConsentToShare, and locationHiding for consents","completion":"s=>(@S Consent:*);RETURN S.name AS Name, S.label AS label, S.dcrConsentToShare AS dcrConsentToShare, S.scrConsentToShare AS scrConsentToShare, S.locationHiding AS locationHiding SORT_ASC Name LIMIT 100"},

    {"prompt":"list the names, labels, and orientations associated with sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"list the names of sexual orientation","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"list the names of sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"list the labels of sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"Get the names, labels, and orientations of sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve the names, labels, and orientations for different sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"Provide the names, labels, and orientations associated with sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"Display the names, labels, and orientations of sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"list the names, labels, and orientations of sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve names, labels, and orientations for sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"Gather the names, labels, and orientations of sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"Obtain the names, labels, and orientations for different sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve details of names, labels, and orientations for sexual orientations","completion":"s=>(@S SexualOrientation:*);RETURN S.name AS Name, S.label AS label, S.orientation AS orientation SORT_DESC Name LIMIT 100"},

    {"prompt":"list the names, labels, home phone numbers, home phone number types, and email addresses associated with home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"list the names, labels of home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"list the names and labels of home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"list the details of home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"list the email addresses of home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"list the types of home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"get the names, labels, home phone numbers, phone number types, and email addresses for home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the names, labels, home phone numbers, phone number types, and email addresses of different home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"Provide the names, labels, home phone numbers, phone number types, and email addresses associated with home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"Display the names, labels, home phone numbers, phone number types, and email addresses of home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"List the names, labels, home phone numbers, phone number types, and email addresses of home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve names, labels, home phone numbers, phone number types, and email addresses for home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"Gather the names, labels, home phone numbers, phone number types, and email addresses of home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the names, labels, home phone numbers, phone number types, and email addresses for different home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve details of names, labels, home phone numbers, phone number types, and email addresses for home phone numbers","completion":"s=>(@S PhoneNumberHome:*);RETURN S.name AS Name, S.label AS label, S.phoneNumberHome AS phoneNumberHome, S.phoneNumberHomeType AS phoneNumberHomeType, S.emailAddress AS emailAddress SORT_ASC Name LIMIT 100"},

    {"prompt":"list the names, labels, codes, preferred terms, and coding systems associated with allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"list the names of allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"list the labels of allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"list the codes of allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"list the preferred terms of allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"list the coding systems of allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the names, labels, codes, preferred terms, and coding systems for allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the names, labels, codes, preferred terms, and coding systems of different allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the names, labels, codes, preferred terms, and coding systems associated with allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Display the names, labels, codes, preferred terms, and coding systems of allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"List the names, labels, codes, preferred terms, and coding systems of allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve names, labels, codes, preferred terms, and coding systems for allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Gather the names, labels, codes, preferred terms, and coding systems of allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the names, labels, codes, preferred terms, and coding systems for different allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve details of names, labels, codes, preferred terms, and coding systems for allergies","completion":"s=>(@S Allergies:*);RETURN S.name AS Name, S.label AS label, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"list the names, codes, preferred terms, and coding systems associated with signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Get the names, codes, preferred terms, and coding systems for signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve the names, codes, preferred terms, and coding systems of different signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Provide the names, codes, preferred terms, and coding systems associated with signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Display the names, codes, preferred terms, and coding systems of signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"List the names, codes, preferred terms, and coding systems of signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve names, codes, preferred terms, and coding systems for signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Gather the names, codes, preferred terms, and coding systems of signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Obtain the names, codes, preferred terms, and coding systems for different signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},
    {"prompt":"Retrieve details of names, codes, preferred terms, and coding systems for signs or symptoms","completion":"s=>(@S SignOrSymptom:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_ASC code LIMIT 100"},

    {"prompt":"list the names, labels, codes associated with Health Care Activities","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get the names, labels, codes for treatments ","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the names, labels, and codes linked to treatments","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Provide a list of treatments along with their associated names, labels, and codes","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Display the names, labels, and codes of treatment in the database","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"List the names, labels, and codes related to treatments","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show the names, labels, and codes associated with Health Care Activities recorded in the system","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Extract the names, labels, and codes of Health Care Activities from the database","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Present the associated names, labels, and codes for each treatment","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain a compilation of Health Care Activities along with their respective names, labels, and codes","completion":"s=>(@S HealthCareActivity:*);RETURN S.name AS Name, S.label AS label, S.code AS code SORT_DESC code LIMIT 100"},

    {"prompt":"List the names, codes, preferred terms, and coding systems associated with diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"List the names and codes of diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the names, codes, preferred terms, and coding systems for diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the names, codes, preferred terms, and coding systems of different diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the names, codes, preferred terms, and coding systems associated with diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Display the names, codes, preferred terms, and coding systems of diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"List the names, codes, preferred terms, and coding systems of diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve names, codes, preferred terms, and coding systems for diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Gather the names, codes, preferred terms, and coding systems of diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the names, codes, preferred terms, and coding systems for different diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve details of names, codes, preferred terms, and coding systems for diseases or syndromes","completion":"s=>(@S DiseaseOrSyndrome:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"List the names, codes, preferred terms, and coding systems associated with Active problems","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"List the names and codes of Active problems","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"List the names and coding systems of Active problems","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"List the names and coding systems of Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the names, codes, preferred terms, and coding systems for Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the names, codes, preferred terms, and coding systems of different Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the names, codes, preferred terms, and coding systems associated with Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Display the names, codes, preferred terms, and coding systems of Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"List the names, codes, preferred terms, and coding systems of Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve names, codes, preferred terms, and coding systems for Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Gather the names, codes, preferred terms, and coding systems of Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the names, codes, preferred terms, and coding systems for different Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve details of names, codes, preferred terms, and coding systems for Active problem","completion":"s=>(@S ActiveProblem:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"List the names, codes, preferred terms, and coding systems associated with Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"Get the names, codes, preferred terms, and coding systems for Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"Retrieve the names, codes, preferred terms, and coding systems of different Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"Provide the names, codes, preferred terms, and coding systems associated with Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"Display the names, codes, preferred terms, and coding systems of Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"List the names, codes, preferred terms, and coding systems of Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"Retrieve names, codes, preferred terms, and coding systems for Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"Gather the names, codes, preferred terms, and coding systems of Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"Obtain the names, codes, preferred terms, and coding systems for different Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},
    {"prompt":"Retrieve details of names, codes, preferred terms, and coding systems for Therapeutic or preventive procedure","completion":"s=>(@S TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.code AS code, S.preferredTerm AS preferredTerm, S.codingSystem AS codingSystem SORT_DESC codingSystem LIMIT 100"},

    {"prompt":"List the signal IDs, descriptions, signal date and time, and event dates for signals with the data controller psm_dev_v1_0, excluding those with NA in the description","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"List the signal IDs, descriptions, signal date and time, and event dates for data controller psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"List the signal IDs for data controller psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"List the description for data controller psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"List the date and time for data controller psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"List the event dates for data controller psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"Get the signal IDs, descriptions, signal date and time, and event dates for signals associated with the data controller psm_dev_v1_0, excluding those with NA in the description","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal IDs, descriptions, signal date and time, and event dates for signals managed by the data controller psm_dev_v1_0. Exclude signals with NA in the description","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"Provide the signal IDs, descriptions, signal date and time, and event dates for signals where the data controller is psm_dev_v1_0. Exclude signals with NA in the description","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"Display the signal IDs, descriptions, signal date and time, and event dates for signals associated with the data controller psm_dev_v1_0. Exclude signals with NA in the description","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"List the signal IDs, descriptions, signal date and time, and event dates for signals that have psm_dev_v1_0 as the data controller. Exclude signals with NA in the description ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal IDs, descriptions, signal date and time, and event dates for signals managed by the data controller psm_dev_v1_0, excluding signals with NA in the description","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"Gather the signal IDs, descriptions, signal date and time, and event dates for signals associated with the data controller psm_dev_v1_0. Exclude signals with NA in the description","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"Obtain the signal IDs, descriptions, signal date and time, and event dates for signals where the data controller is psm_dev_v1_0. Exclude signals with NA in the description ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},
    {"prompt":"Retrieve details of signal IDs, descriptions, signal date and time, and event dates for signals with the data controller psm_dev_v1_0. Exclude signals with NA in the description","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_DESC DateTime LIMIT 100"},

    {"prompt":"Retrieve the recorded dates, months, and the total count of signals for signals with the data controller psm_dev_v1_0 and recorded in the year 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"get the details of data controller recorded in the year 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the recorded dates, months, and the total number of signals for signals managed by the data controller psm_dev_v1_0 and recorded in the year 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded dates, months, and the count of signals for signals associated with the data controller psm_dev_v1_0 and recorded in 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Provide the recorded dates, months, and the total count of signals for signals where the data controller is psm_dev_v1_0 and the recorded year is 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Display the recorded dates, months, and the total number of signals for signals with the data controller psm_dev_v1_0 and recorded in the year 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"List the recorded dates, months, and the count of signals for signals managed by the data controller psm_dev_v1_0 and recorded in 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded dates, months, and the total count of signals for signals associated with the data controller psm_dev_v1_0 and recorded in the year 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Gather the recorded dates, months, and the count of signals for signals where the data controller is psm_dev_v1_0 and the recorded year is 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Obtain the recorded dates, months, and the total number of signals for signals with the data controller psm_dev_v1_0 and recorded in the year 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve details of recorded dates, months, and the count of signals for signals managed by the data controller psm_dev_v1_0 and recorded in 2022","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},

    {"prompt":"Retrieve the details of the patient with the family name SOBEL, first name LEONOR, date of birth 20020506, and gender Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the information of the patient whose last name is SOBEL, first name is LEONOR, date of birth is 20020506, and gender is Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the details of the patient with the family name SOBEL, first name LEONOR, date of birth 20020506, and gender Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"Provide the information of the patient whose last name is SOBEL, first name is LEONOR, date of birth is 20020506, and gender is Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"Display the details of the patient with the family name SOBEL, first name LEONOR, date of birth 20020506, and gender Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"List the information of the patient whose last name is SOBEL, first name is LEONOR, date of birth is 20020506, and gender is Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the details of the patient having the family name SOBEL, first name LEONOR, date of birth 20020506, and gender Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"Gather the information of the patient identified by the last name SOBEL, first name LEONOR, date of birth 20020506, and gender Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"Obtain the details of the patient with the family name SOBEL, first name LEONOR, date of birth 20020506, and gender Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the information of the patient whose last name is SOBEL, first name is LEONOR, date of birth is 20020506, and gender is Female","completion":"S=>(@P Patient:* {familyName = \"SOBEL\" AND firstName = \"LEONOR\" AND dateOfBirth = \"20020506\" AND gender = \"Female\" });RETURN *SORT_ASC evpk LIMIT 100"},

    {"prompt":"Retrieve the signals with the data controller psm_dev_v1_0 and message code MDM. Return the signal ID as SignalID, message code, description, distinct signal date, and calculate the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"get the details of signals of data controller and message code MDM","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Get the signals with the data controller psm_dev_v1_0 and message code MDM. Provide the signal ID as SignalID, message code, description, distinct signal date, and calculate the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Retrieve the signals having the data controller psm_dev_v1_0 and message code MDM. Return the signal ID as SignalID, message code, description, distinct signal date, and compute the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Obtain the signals associated with the data controller psm_dev_v1_0 and message code MDM. Display the signal ID as SignalID, message code, description, distinct signal date, and calculate the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Retrieve the signals linked to the data controller psm_dev_v1_0 and message code MDM. Show the signal ID as SignalID, message code, description, distinct signal date, and estimate the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"List the signals that have the data controller psm_dev_v1_0 and message code MDM. Include the signal ID as SignalID, message code, description, distinct signal date, and calculate the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Provide the signals associated with the data controller psm_dev_v1_0 and message code MDM. Retrieve the signal ID as SignalID, message code, description, distinct signal date, and determine the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Display the signals that are controlled by psm_dev_v1_0 and have the message code MDM. Present the signal ID as SignalID, message code, description, distinct signal date, and calculate the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Gather the signals associated with the data controller psm_dev_v1_0 and message code MDM. Collect the signal ID as SignalID, message code, description, distinct signal date, and compute the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Retrieve the signals with the data controller psm_dev_v1_0 and message code MDM. Fetch the signal ID as SignalID, message code, description, distinct signal date, and calculate the number of days since the signal date","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND messageCode = \"MDM\"});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},

    {"prompt":"list the gender of patients, the codes of their allergies, and the corresponding corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the gender of patients, their allergy codes, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the patients' gender, their allergy codes, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the gender of patients, the codes of their allergies, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the gender of patients, their allergy codes, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the patients' gender, their allergy codes, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the gender of patients, the codes of their allergies, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the gender of patients, their allergy codes, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the patients' gender, their allergy codes, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the gender of patients, the codes of their allergies, and the corresponding count of patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count WHERE gender !~ NA SORT_DESC Count LIMIT 100"},

    {"prompt":"list the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the ID type, date of birth, formatted date of birth, and age of patients where id type is IBM","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve all information about patients, including their associations with addresses through the LIVES_IN relationship and associations with sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"list all information about patients","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Get all the details about patients, including their connections to addresses through the LIVES_IN relationship and associations with sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Retrieve complete information about patients, including their associations with addresses through the LIVES_IN relationship and connections to sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Obtain all the relevant data about patients, including their links to addresses through the LIVES_IN relationship and affiliations with sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Get all the information available on patients, including their associations with addresses through the LIVES_IN relationship and connections to sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Retrieve comprehensive details about patients, including their connections to addresses through the LIVES_IN relationship and associations with sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Obtain the complete dataset for patients, including their associations with addresses through the LIVES_IN relationship and connections to sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Get all the available information regarding patients, including their links to addresses through the LIVES_IN relationship and affiliations with sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Retrieve all the necessary data about patients, including their associations with addresses through the LIVES_IN relationship and connections to sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},
    {"prompt":"Obtain a complete record of patients, including their connections to addresses through the LIVES_IN relationship and affiliations with sexual orientations through the IS_ASSOCIATED_WITH relationship","completion":"S2=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * SORT_ASC P_name LIMIT 100"},

    {"prompt":"list the ID, first name, family name, and location hiding status of a patient named LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the ID, first name, family name, and location privacy status of a patient named LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Provide a list of the patient ID, first name, family name, and location hiding status for the individual named LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Display the ID, first name, family name, and location visibility setting of the patient identified as LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Gather information about the patient ID, first name, family name, and location concealment status for the individual named LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"List the ID, first name, family name, and location privacy preference for the patient named LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Present the ID, first name, family name, and location hiding indication for the patient identified as LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Show the patient ID, first name, family name, and location confidentiality status for the individual named LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Extract the ID, first name, family name, and location disclosure setting of the patient named LIONEL from the records","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Obtain a compilation of the patient's ID, first name, family name, and location privacy status for the individual named LIONEL","completion":"S2=>[S1=>(@P Patient:* {firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},

    {"prompt":"Retrieve the city, consent to share status, and count of patients who live in Brentwood and have provided consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the city, consent to share status, and count of patients residing in Brentwood who have given consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the city, consent to share preference, and count of patients living in Brentwood who have provided consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the city, consent to share status, and count of patients who reside in Brentwood and have granted consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the city, consent to share information, and count of patients living in Brentwood who have agreed to consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the city, consent to share status, and count of patients residing in Brentwood who have given their consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the city, consent to share preference, and count of patients living in Brentwood who have provided consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the city, consent to share status, and count of patients who reside in Brentwood and have granted consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the city, consent to share information, and count of patients living in Brentwood who have agreed to consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the city, consent to share status, and count of patients residing in Brentwood who have given their consent","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},

    {"prompt":"list the ID type, allergy severity, patient gender, sexual orientation, and count of patients excluding allergies from 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID type, severity of allergies, patient gender, sexual orientation, and count of patients excluding allergies from 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID type, allergy severity, patient gender, sexual orientation, and count of patients with allergies excluding those from 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the ID type, severity of allergies, patient gender, sexual orientation, and count of patients where allergies are not from 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID type, allergy severity, patient gender, sexual orientation, and count of patients, excluding allergies recorded in 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID type, severity of allergies, patient gender, sexual orientation, and count of patients, excluding allergies that occurred in 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the ID type, allergy severity, patient gender, sexual orientation, and count of patients with allergies, excluding those recorded in 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID type, severity of allergies, patient gender, sexual orientation, and count of patients excluding allergies that occurred in 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID type, allergy severity, patient gender, sexual orientation, and count of patients, excluding allergies from the year 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the ID type, severity of allergies, patient gender, sexual orientation, and count of patients, excluding allergies that happened in 2021","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},

    {"prompt":"List the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients with consent, excluding those with a count less than or equal to 1","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients with consent, excluding counts equal to or less than 1","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients who have given consent, excluding counts less than or equal to 1","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients with consent, excluding those with a count of 1 or less","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients who have given consent, excluding counts that are less than or equal to 1","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients with consent, excluding those with a count equal to or smaller than 1","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients who have given consent, excluding counts equal to or less than 1","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients with consent, excluding those with a count less than 2","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients who have given consent, excluding counts below 2","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the consent to share data (dcrConsentToShare, scrConsentToShare), patient gender, and count of patients with consent, excluding those with a count of 1 or smaller","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the NH identifier issuer, allergy severity, and count of patients with allergies where the severity is Unknown and the NH identifier issuer is not CLI","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the NH identifier issuer, allergy severity, and count of patients with allergies where the severity is Unknown and the NH identifier issuer is not CLI","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the NH identifier issuer, allergy severity, and count of patients who have allergies with an unknown severity and a non-CLI NH identifier issuer","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the NH identifier issuer, allergy severity, and count of patients with allergies where the severity is Unknown and the NH identifier issuer is not CLI","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the NH identifier issuer, allergy severity, and count of patients who have allergies with an unknown severity and an NH identifier issuer other than CLI","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the NH identifier issuer, allergy severity, and count of patients with allergies where the severity is Unknown and the NH identifier issuer is not CLI","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the NH identifier issuer, allergy severity, and count of patients who have allergies with an unknown severity and a non-CLI NH identifier issuer","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the NH identifier issuer, allergy severity, and count of patients with allergies where the severity is Unknown and the NH identifier issuer is not CLI","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the NH identifier issuer, allergy severity, and count of patients who have allergies with an unknown severity and an NH identifier issuer other than CLI","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the NH identifier issuer, allergy severity, and count of patients with allergies where the severity is Unknown and the NH identifier issuer is not CLI","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.severity AS severity, COUNT(P.name) AS Count WHERE severity = \"Unknown\" AND idIssuer_NH != CLI SORT_DESC Count LIMIT 100"},

    {"prompt":"list the gender, location hiding, consent status for data controller sharing, data controller consent to share status, sexual orientation, and count of patients where gender is male","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and count of male patients.","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Provide a list of the gender,  location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and the number of patients who identify as male","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Display the gender,  location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and count of patients with male gender","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Gather information about the gender,  location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and the total count of male patients","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"List the gender,  location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and the number of patients categorized as male","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Present the gender,  location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and the count of patients who are male","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Show the gender,  location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and the total number of patients with male gender","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Extract the gender,  location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and the count of patients who identify as male","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain a compilation of the gender,  location hiding, consent status for data controller sharing, data controller's consent to share status, sexual orientation, and the number of patients whose gender is male","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},

    {"prompt":"Retrieve the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results where the data controller consent to share status is Consent Status Unknown and the gender is Male","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for Consent Status Unknown consent to share status and male gender","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for males with an unknown consent to share status","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for males with a consent to share status that is unknown","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for males with an unknown consent to share status","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for males with Consent Status Unknown consent to share status","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for males with a consent to share status that is unknown","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for males with an unknown consent to share status","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for males with a consent to share status that is unknown","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the gender, location hiding status, data controller consent to share status, and count of patients, Filter the results for males with an unknown consent to share status","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},

    {"prompt":"list the patients who have allergies and their associated sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the patients who have allergies and their associated sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients with allergies and their corresponding sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the patients who have allergies and their associated sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the patients who have allergies and their linked sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients with allergies and their associated sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the patients who have allergies and their corresponding sexual orientation.","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the patients who have allergies and their associated sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients with allergies and their linked sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the patients who have allergies and their corresponding sexual orientation","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},

    {"prompt":"list no.of female and male patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"list no.of patients based on gender","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"list no.of female patients and male patients","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"Count the number of male and female patients.","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"Count the number of male and female patients on the list","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"Determine the total count of male and female patients present","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"Calculate the quantity of male and female patients in the list","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"Tabulate the number of male and female patients in the dataset","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"Assess the population of male and female patients and provide the respective counts","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},
    {"prompt":"Find out how many male and female patients are there","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.code AS code, COUNT(P.name) AS Count EXCLUDE_GROUPBY(code) WHERE gender !~ NA SORT_DESC code LIMIT 100"},

    {"prompt":"List the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems associated with signals and their corresponding patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems associated with signals and their respective patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems linked to signals and their corresponding patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems that are associated with signals and their respective patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems related to signals and their corresponding patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems associated with signals and their corresponding patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems linked to signals and their respective patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems that are associated with signals and their respective patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems related to signals and their corresponding patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, coding system, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth for active problems associated with signals and their respective patients","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateEstablished LIMIT 100"},

    {"prompt":"list the severity, type, identification date, formatted identification date, and count for unique active allergy problems with severity specified, date within the range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, identification date, formatted identification date, and count for unique active allergy problems with specified severity, within the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, identification date, formatted identification date, and count for active allergy problems with unique instances, severity specified, within the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, identification date, formatted identification date, and count for unique active allergy problems with specified severity, falling within the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, identification date, formatted identification date, and count for active allergy problems that are unique, with the specified severity, within the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, identification date, formatted identification date, and count for unique active allergy problems with the specified severity, falling within the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, identification date, formatted identification date, and count for active allergy problems that are unique, with the specified severity, within the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, identification date, formatted identification date, and count for unique active allergy problems with specified severity, during the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, identification date, formatted identification date, and count for active allergy problems that are unique, with the specified severity, during the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, identification date, formatted identification date, and count for unique active allergy problems with specified severity, throughout the date range of January to November 2022","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format, COUNT(P.name) AS cnt EXCLUDE_GROUPBY(IdentificationDate) SORT_DESC Date_New_Format LIMIT 100"},

    {"prompt":"list all the patientsid issuer and NH id ","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Provide a list of patient id issuer and national health (NH) identification numbers","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the id issuer and national health (NH) identification numbers for all patients","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Display the patient records containing theirid issuer and NH identification numbers ","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Obtain a compilation of patient information, including theirid issuer and NH identification numbers","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Gather theid issuer and NH identification numbers for all patients on the list","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"List theid issuer and NH identification numbers for each patient in the database","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Present theid issuer and NH identification numbers for all registered patients","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Show theid issuer and NH identification numbers associated with each patient's record","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Extract theid issuer and NH identification numbers from the patient database","completion":"S=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},

    {"prompt":"List the national health ID (ID), ID issuer, date of birth, and age of patients who are older than 20","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the national health ID (ID), ID issuer, date of birth, and age of patients who are over 20","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, ID issuer, date of birth, and age of patients older than 20","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the national health ID (ID), ID issuer, date of birth, and age for patients above the age of 20","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID, ID issuer, date of birth, and age of patients whose age exceeds 20","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the national health ID (ID), ID issuer, date of birth, and age of patients who are 20 years or older","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the ID, ID issuer, date of birth, and age for patients who are at least 20 years old","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the national health ID (ID), ID issuer, date of birth, and age of patients with an age greater than 20","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, ID issuer, date of birth, and age of patients whose age is above 20 years","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the national health ID (ID), ID issuer, date of birth, and age for patients who have surpassed the age of 20","completion":"S=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"List the patient information including the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients with the PSM ID issuer","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients with the PSM ID issuer","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the patient information including the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients who have the ID issuer PSM","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Obtain the details of patients with the PSM ID issuer, including the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the information of patients with the ID issuer PSM, including the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients whose ID issuer is PSM","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Obtain the patient details such as the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients with the ID issuer PSM","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients whose ID issuer is PSM","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the patient information for patients with the PSM ID issuer, including the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Obtain the details of patients with the ID issuer PSM, including the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days","completion":"s=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},

    {"prompt":"list the signals associated with patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals that are associated with patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals that are connected to patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Obtain the signals associated with patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Fetch the signals that are linked to patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals that are associated with patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals connected to patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Obtain the signals that are associated with patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Fetch the signals that are linked to patients","completion":"S=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    
    {"prompt":"List the total number of signals and the total number of patients associated with those signals","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Count the number of patients and signals on the list","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Determine the quantity of patients and signals","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Calculate the total count of patients and signals","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Find out how many patients and signals are on the list","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Enumerate the number of patients and signals listed","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Assess the total number of patients and signals","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Tabulate the count of patients and signals","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Compute the quantity of patients and signals listed","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Establish the number of patients and signals present","completion":"S=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},

    {"prompt":"list the ID of each patient in the NH and PI nodes, and count how many relationships each patient has","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the ID of patients in the NH and PI nodes, and determine the number of relationships per patient","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"The query retrieves the NH and PI patient IDs, as well as the count of relationships for each patient","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"fetch the IDs of patients in the NH and PI nodes, and calculates the number of relationships for each patient","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Obtain the ID of patients in the NH and PI nodes, and find out the count of relationships per patient","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"The query returns the ID of patients in the NH and PI nodes, along with the total number of relationships each patient has","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the ID of patients in the NH and PI nodes, and determine the count of relationships per patient","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"fetche the NH and PI patient IDs, and counts how many relationships each patient has","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the ID of patients in the NH and PI nodes, and calculate the total number of relationships for each patient","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"retrieve the following information: the ID of patients in the NH and PI nodes, along with the count of relationships per patient","completion":"S=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},

    {"prompt":"list the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date of patients associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the information about the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date for patients associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"The query retrieves the details of patients including their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date. The patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"fetch the information of patients, such as their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date where patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date for patients who are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"The query returns the details of patients, including their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date. These patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the information about patients, such as their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date. The patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"fetche the details of patients, including their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date where patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date for patients who are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"The query retrieves the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date of patients who are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},

    {"prompt":"list the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date for patients associated with NH ID 9998557805 and NH issuer ID IBM, ensuring uniqueness","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the information about the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date for patients associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"The query retrieves the details of patients including their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date. The patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"fetch the information of patients, such as their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date where patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date for patients who are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"The query returns the details of patients, including their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date. These patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the information about patients, such as their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date. The patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"fetch the details of patients, including their name, patient ID, first name, family name, date of birth, signal ID, description, and signal date where patients are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date for patients who are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"The query retrieves the name, patient ID, first name, family name, date of birth, signal ID, description, and signal date of patients who are associated with NH ID 9998557805 and NH issuer ID IBM","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},

    {"prompt":"Retrieve all information related to the relationship between any signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Get all the details associated with the relationship between any signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"The query retrieves all the information connected to the relationship between signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"fetch all the data linked to the relationship between signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Obtain all the information regarding the relationship between signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"The query returns all the details related to the association between signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the information pertaining to the relationship between signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"fetche all the data associated with the relationship between signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Get all the details connected to the relationship between signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"The query retrieves all information regarding the association between signals and the patient with ID 6252041994897922579","completion":"S3{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},

    {"prompt":"Find unique relationships between patients and allergies and list the type, severity, date, allergy code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve distinct connections between patients and allergies. Obtain the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Discover exclusive associations between patients and allergies. Fetch the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Identify unique links between patients and allergies. Collect the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Find distinct relationships between patients and allergies. Retrieve the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Explore unique connections between patients and allergies. Obtain the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Uncover exclusive associations between patients and allergies. Fetch the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve unique links between patients and allergies. Collect the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Discover distinct relationships between patients and allergies. Retrieve the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},
    {"prompt":"Identify exclusive connections between patients and allergies. Obtain the allergy type, severity, date, code, patient ID, and allergy name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r HAS_ALLERGY]->(@A Allergies:*);RETURN r.type AS type, r.severity AS Severity,r.date AS date, A.code AS Code, P.name AS id, A.name AS All SORT_DESC Code LIMIT 100"},

    {"prompt":"list the first name, family name, gender, date of birth, and age of patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the patients' first name, last name, gender, date of birth, and age","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patients' first name, surname, gender, date of birth, and age","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, family name, gender, date of birth, and age of the patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Fetch the patients' first name, last name, gender, date of birth, and age","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Extract the first name, family name, gender, date of birth, and age of the patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Gather the patients' first name, surname, gender, date of birth, and age","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Acquire the first name, family name, gender, date of birth, and age of the patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patients' first name, last name, gender, date of birth, and age","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the first name, family name, gender, date of birth, and age information for the patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the first name, family name, gender, date of birth, and formatted date of birth of patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Fetch the given name, surname, gender, birth date, and formatted birth date of individuals","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the first name, last name, gender, date of birth, and formatted birth date of patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patients' first name, last name, gender, date of birth, and formatted date of birth","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the individuals' first name, family name, gender, birth date, and formatted birth date","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the given name, surname, gender, birth date, and formatted birth date of the patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the patients' first name, family name, gender, date of birth, and formatted date of birth","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Fetch the first name, last name, gender, birth date, and formatted birth date of the individuals","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patients' given name, last name, gender, birth date, and formatted birth date","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the first name, family name, gender, date of birth, and formatted date of birth for each patient","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the data controller, signal ID, and name associated with the signals for patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, and name linked to the signals related to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal identification, and name associated with the signals corresponding to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Obtain the data controller, signal ID, and name connected to the signals attributed to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Fetch the data controller, signal ID, and name that are associated with the signals pertaining to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal identifier, and name linked to the signals in relation to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Obtain the data controller, signal ID, and name associated with the signals pertaining to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, and name that are connected to the signals related to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal identification, and name associated with the signals in regard to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Obtain the data controller, signal ID, and name that are associated with the signals corresponding to patients","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},

    {"prompt":"list the SCR consent to store, message code, message type, and count for the signals associated with patients who have given consent, excluding those recorded in 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the SCR consent to store, message code, message type, and count for the signals linked to patients who have provided consent, excluding records from the year 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the consent for SCR storage, message code, message type, and count for the signals associated with patients who have given their consent, excluding entries recorded in 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent for storage, message code, message type, and count for the signals associated with patients who have granted consent, excluding those recorded in 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the consent for SCR storage, message code, message type, and count for the signals linked to patients who have given their consent, excluding records from 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to share, message code, message type, and count for the signals associated with patients who have provided consent, excluding entries recorded in 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the consent for SCR storage, message code, message type, and count for the signals associated with patients who have given their consent, excluding those recorded in 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the SCR consent to store, message code, message type, and count for the signals linked to patients who have provided consent, excluding records from the year 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent for storage, message code, message type, and count for the signals associated with patients who have granted consent, excluding entries recorded in 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the consent for SCR storage, message code, message type, and count for the signals linked to patients who have given their consent, excluding records from 2021","completion":"S=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the description, class, and count of healthcare activities associated with signals that have a non-null description","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the description, class, and count of healthcare activities linked to signals that have a valid description","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the description, class, and count of healthcare activities associated with signals that contain a meaningful description","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the description, class, and count of healthcare activities that are associated with signals having a description other than NA","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the description, class, and count of healthcare activities linked to signals that possess a non-empty description","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the description, class, and count of healthcare activities associated with signals that have a description value","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the description, class, and count of healthcare activities associated with signals that do not have a null description","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the description, class, and count of healthcare activities linked to signals that provide a description other than NA","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the description, class, and count of healthcare activities associated with signals that have a meaningful description","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the description, class, and count of healthcare activities that are associated with signals having a non-null description","completion":"s1=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description AS Description, r1.class AS Class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals linked to healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals that are associated with healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals that have an association with healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals that are linked to healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals that have an association with healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},

    {"prompt":"Retrieve the code, patient class, and count of signals associated with healthcare activities where the patient class is not NA","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the code, patient class, and count of signals linked to healthcare activities excluding NA patient class","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the code, patient class, and count of signals associated with healthcare activities where the patient class is not NA","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the code, patient class, and count of signals that are associated with healthcare activities, excluding NA patient class","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the code, patient class, and count of signals associated with healthcare activities where the patient class is not NA","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the code, patient class, and count of signals linked to healthcare activities excluding NA patient class","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the code, patient class, and count of signals associated with healthcare activities where the patient class is not NA","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the code, patient class, and count of signals that are associated with healthcare activities, excluding NA patient class","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the code, patient class, and count of signals associated with healthcare activities where the patient class is not NA","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the code, patient class, and count of signals linked to healthcare activities excluding NA patient class","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the patient class and count of signals associated with outpatient healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals linked to healthcare activities with the class Outpatient","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals associated with healthcare activities classified as Outpatient","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals that are associated with healthcare activities categorized as outpatient","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals associated with healthcare activities where the class is specified as Outpatient","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals linked to healthcare activities with the classification of Outpatient","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities belonging to the outpatient class","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals linked to healthcare activities where the class is identified as Outpatient","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals associated with healthcare activities with the class attribute set as Outpatient","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals that are associated with outpatient healthcare activities","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},

    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities in the year 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals linked to healthcare activities occurring in 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals associated with healthcare activities taking place in the year 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals that are associated with healthcare activities recorded in 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals associated with healthcare activities where the signal date is in 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals linked to healthcare activities with the year 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities that occurred in 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals linked to healthcare activities with a signal date in the year 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals associated with healthcare activities recorded in the year 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals that are associated with healthcare activities happening in 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the message code, message type, patient class, and count of signals associated with healthcare activities in the first half of 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and count of signals linked to healthcare activities occurring between January and June 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the message code, message type, patient class, and count of signals associated with healthcare activities taking place in the first half of 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and count of signals that are associated with healthcare activities recorded in the period from January to June 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and count of signals associated with healthcare activities where the signal date is in the first half of 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the message code, message type, patient class, and count of signals linked to healthcare activities with the year 2022 and within the months of January to June","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and count of signals associated with healthcare activities that occurred in the first half of 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and count of signals linked to healthcare activities with a signal date in the year 2022 and between January and June","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the message code, message type, patient class, and count of signals associated with healthcare activities recorded in the first half of 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and count of signals that are associated with healthcare activities happening between January and June 2022","completion":"S=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the gender and count of patients excluding those with missing gender information.","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender and count of patients, excluding cases where gender information is not available","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the gender and count of patients, excluding instances where gender information is missing","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender and count of patients, excluding those with unspecified gender","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender and count of patients, excluding cases where gender information is not provided","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the gender and count of patients, excluding instances where gender is not specified","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender and count of patients, excluding those with unknown gender","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender and count of patients, excluding cases where gender is not recorded","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the gender and count of patients, excluding instances where gender is missing","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender and count of patients, excluding those with gender information not available","completion":"S=>(@s Patient:*);RETURN s.gender AS gender, COUNT(s.name) AS Count WHERE gender !~ NA SORT_ASC gender LIMIT 100"},

    {"prompt":"list the signal ID, gender, and count of male patients, excluding cases where gender information is not available","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, gender, and count of male patients, excluding instances where gender is missing","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, gender, and count of male patients, excluding those with unspecified gender","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Retrieve the signal ID, gender, and count of male patients, excluding cases where gender is not recorded","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, gender, and count of male patients, excluding instances where gender is unknown","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, gender, and count of male patients, excluding those with gender information not provided","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Retrieve the signal ID, gender, and count of male patients, excluding cases where gender is not specified","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, gender, and count of male patients, excluding instances where gender information is not available","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, gender, and count of male patients, excluding those with missing gender information","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},
    {"prompt":"Retrieve the signal ID, gender, and count of male patients, excluding cases where gender is not mentioned","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.signalId AS signalId, s.gender AS gender, COUNT(s.name) AS Count WHERE gender = \"Male\" SORT_ASC signalId LIMIT 100"},

    {"prompt":"list the ethnicity, NHS number issuer, gender, and count of male patients with NHS number issuer IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Get the ethnicity, NHS number issuer, gender, and count of male patients who have an NHS number issuer IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Obtain the ethnicity, NHS number issuer, gender, and count of male patients with the NHS number issuer IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Retrieve the ethnicity, NHS number issuer, gender, and count of male patients where the NHS number issuer is IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Get the ethnicity, NHS number issuer, gender, and count of male patients with the NHS number issuer IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Obtain the ethnicity, NHS number issuer, gender, and count of male patients who have an NHS number issuer IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Retrieve the ethnicity, NHS number issuer, gender, and count of male patients with the NHS number issuer IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Get the ethnicity, NHS number issuer, gender, and count of male patients where the NHS number issuer is IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Obtain the ethnicity, NHS number issuer, gender, and count of male patients with the NHS number issuer IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},
    {"prompt":"Retrieve the ethnicity, NHS number issuer, gender, and count of male patients who have an NHS number issuer IBM","completion":"S=>(@s Patient:*{gender !~ NA});RETURN s.ethnicity AS ethnicity, s.idIssuer_NH AS idIssuer_NH, s.gender AS gender, COUNT(s.name) AS Count WHERE idIssuer_NH = \"IBM\" AND gender = \"Male\" SORT_ASC idIssuer_NH LIMIT 100"},

    {"prompt":"list the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Get the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals that are associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals that are associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Get the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals that are associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Get the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the name, list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, and sensitivity of signals that are associated with active problems","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A ActiveProblem:*);RETURN S.name AS Name, P.listpriority AS listpriority, P.dateEstablished AS dateEstablished, P.dateResolution AS dateResolution, P.classification AS classification, P.ranking AS ranking, P.patientAware AS patientAware, P.familyAware AS familyAware, P.sensitivity AS sensitivity SORT_ASC Name LIMIT 100"},

    {"prompt":"list the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Get the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals that are associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Obtain the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals that are associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Get the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Obtain the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals that are associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Get the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Obtain the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},
    {"prompt":"Retrieve the name, class, type, pre-admission number, patient type, encounter number, readmission indicator, admission date, admission source, admission reason, visit user code, expected admission date, visit priority code, discharge disposition, discharge location, discharge date, expected discharge date, referral status, referral priority, referral originating ID, referral date, and referral reason of signals that are associated with healthcare activities","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A HealthCareActivity:*);RETURN S.name AS Name, P.class AS class, P.type AS type, P.preAdmitNumber AS preAdmitNumber, P.patientType AS patientType, P.encounterNumber AS encounterNumber, P.readmissionIndicator AS readmissionIndicator, P.admitDate AS admitDate, P.admitSource AS admitSource, P.admitReason AS admitReason, P.VisitUserCode AS VisitUserCode, P.admitDateExpected AS admitDateExpected, P.VisitPriorityCode AS VisitPriorityCode, P.DischargeDisposition AS DischargeDisposition, P.dischargeToLocation AS dischargeToLocation, P.dischargeDate AS dischargeDate, P.dischargeDateExpected AS dischargeDateExpected, P.referralStatus AS referralStatus, P.referralPriority AS referralPriority, P.referralOriginatingID AS referralOriginatingID, P.referralDate AS referralDate, P.referralReason AS referralReason SORT_DESC Name LIMIT 100"},

    {"prompt":"list the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID of signals that have been assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Get the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID associated with signals that have been assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Obtain the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID of signals that are assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Retrieve the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID of signals that have been assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Get the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID associated with signals that have been assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Obtain the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID of signals that are assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Retrieve the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID of signals that have been assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Get the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID associated with signals that have been assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Obtain the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID of signals that are assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    {"prompt":"Retrieve the name, room, bed, facility, person location type, building, floor, description, and comprehensive ID of signals that have been assigned to a point of care","completion":"S=>(@S Signal:*)-[@P HAS_BEEN_ASSIGNED]->(@A PointOfCare:*);RETURN S.name AS Name, A.room AS room, A.bed AS bed, A.facility AS facility, A.personLocationType AS personLocationType, A.building AS building, A.floor AS floor, A.description AS description, A.comprehensiveID AS comprehensiveID LIMIT 100"},
    
    {"prompt":"list the name, description, date, type, minutes, priority, code, preferred term, and coding system associated with signals that are associated with a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the name, description, date, type, minutes, priority, code, preferred term, and coding system of signals that are associated with a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the name, description, date, type, minutes, priority, code, preferred term, and coding system related to signals that are associated with a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the name, description, date, type, minutes, priority, code, preferred term, and coding system associated with signals that are linked to a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the name, description, date, type, minutes, priority, code, preferred term, and coding system of signals that are linked to a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the name, description, date, type, minutes, priority, code, preferred term, and coding system related to signals that are linked to a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the name, description, date, type, minutes, priority, code, preferred term, and coding system associated with signals that are connected to a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the name, description, date, type, minutes, priority, code, preferred term, and coding system of signals that are connected to a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the name, description, date, type, minutes, priority, code, preferred term, and coding system related to signals that are connected to a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the name, description, date, type, minutes, priority, code, preferred term, and coding system associated with signals that are linked to a therapeutic or preventive procedure","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A TherapeuticOrPreventiveProcedure:*);RETURN S.name AS Name, S.description AS description, P.date AS date, P.type AS type, P.minutes AS minutes, P.priority AS priority, A.code AS code, A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"list the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with signals that are associated with a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Get the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis of signals that are associated with a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis related to signals that are associated with a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with signals that are linked to a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Get the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis of signals that are linked to a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis related to signals that are linked to a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with signals that are connected to a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Get the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis of signals that are connected to a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Obtain the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis related to signals that are connected to a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},
    {"prompt":"Retrieve the value, signal name, finding name, references range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with signals that are linked to a finding","completion":"S=>(@S Signal:*)-[@P IS_ASSOCIATED_WITH]->(@A Finding:*);RETURN P.value AS value, S.name AS Name, A.name AS NameF, P.referencesRange AS referencesRange, P.abnormalFlags AS abnormalFlags, P.natureOfAbnormalTest AS natureOfAbnormalTest, P.status AS status, P.dateOfObservation AS dateOfObservation, P.dateOfAnalysis AS dateOfAnalysis SORT_ASC Name LIMIT 100"},

    {"prompt":"list the code, preferred term, and coding system for active problems associated with patients. Also, include the list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system for active problems linked to patients. Additionally, provide the list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the calculated age in a formatted manner","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system for active problems associated with patients. Include details such as list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system for active problems related to patients. Additionally, include information such as list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the active problem code, preferred term, and coding system associated with patients. Include details such as list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system for active problems of patients. Additionally, provide details such as list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system for active problems linked to patients. Also, include the list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system for active problems associated with patients. Additionally, provide details such as list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system for active problems related to patients. Include information such as list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the active problem code, preferred term, and coding system associated with patients. Also, include details such as list priority, date established, date resolution, classification, ranking, patient awareness, family awareness, sensitivity, gender, date of birth, and the formatted date of birth","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},

    {"prompt":"Obtain the severity, type, date, and formatted date of patient allergies. Only include allergies from 2022 between January and November with a valid severity. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, date, and formatted date for allergies reported by patients. Limit the results to allergies recorded in 2022 between January and November, with a defined severity. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, date, and formatted date of allergies experienced by patients. Only include allergies that occurred in 2022 between January and November and have a valid severity. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, date, and formatted date of patient allergies. Limit the results to allergies recorded in 2022 between January and November, excluding those without a severity value. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, date, and formatted date for patient allergies. Filter the results to include only allergies reported in 2022 between January and November, excluding those with no severity specified. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, date, and formatted date of allergies associated with patients. Include only allergies recorded in 2022 between January and November with a defined severity. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, date, and formatted date of allergies experienced by patients. Limit the results to allergies reported in 2022 between January and November, excluding those without a severity value. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, date, and formatted date for patient allergies. Include only allergies that occurred in 2022 between January and November and have a valid severity. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, date, and formatted date of allergies associated with patients. Only include allergies recorded in 2022 between January and November with a defined severity. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, date, and formatted date of patient allergies. Limit the results to allergies reported in 2022 between January and November, excluding those without a severity specified. Exclude the grouping based on the new date format","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},

    {"prompt":"Get the type, date, and formatted date of patient allergies, excluding allergies from June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the type, date, and formatted date for allergies reported by patients, excluding allergies recorded in June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the type, date, and formatted date of allergies experienced by patients, excluding allergies that occurred in June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Get the type, date, and formatted date of allergies associated with patients, excluding allergies recorded in June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the type, date, and formatted date of patient allergies, filtering out allergies from June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the type, date, and formatted date for patient allergies, excluding allergies reported in June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Get the type, date, and formatted date of allergies experienced by patients, excluding allergies from June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the type, date, and formatted date of allergies associated with patients, excluding allergies occurring in June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the type, date, and formatted date of patient allergies, excluding allergies recorded in June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Get the type, date, and formatted date for allergies reported by patients, excluding allergies from June 2004","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) != 2004 AND DATE_MONTH($date+0) = 6}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS type, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},

    {"prompt":"Get the signal ID, unique message codes, description, date, and the number of days elapsed since the signal's occurrence for all signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the signal ID, distinct message codes, description, date, and the number of days since the signal occurred for all signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the signal ID, unique message codes, description, date, and the number of days since the signal's date for all available signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the signal ID, distinct message codes, description, date, and the number of days elapsed since the signal's occurrence for all available signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the signal ID, unique message codes, description, date, and the number of days since the signal's occurrence for all recorded signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the signal ID, distinct message codes, description, date, and the number of days since the signal occurred for all recorded signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the signal ID, unique message codes, description, date, and the number of days elapsed since the signal's date for all recorded signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the signal ID, distinct message codes, description, date, and the number of days since the signal occurred for all available signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the signal ID, unique message codes, description, date, and the number of days since the signal's occurrence for all available signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the signal ID, distinct message codes, description, date, and the number of days elapsed since the signal's occurrence for all signals","completion":"S=>(@S Signal:* );RETURN S.signalId AS signalId, DISTINCT(S.messageCode) AS messageCode,S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},

    {"prompt":"Retrieve the date of birth, formatted date of birth, and age of patients residing at an address linked to the 'IBM' ID issuer and having a recorded sexual orientation","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' date of birth, formatted date of birth, and age for those who live at an address associated with the 'IBM' ID issuer and have a documented sexual orientation","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the date of birth, formatted date of birth, and age of patients who are registered with the 'IBM' ID issuer and have a recorded sexual orientation, along with their respective addresses","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the recorded date of birth, formatted date of birth, and calculated age of patients who live at an address associated with the 'IBM' ID issuer and have a known sexual orientation","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the date of birth, formatted date of birth, and age of patients residing at an address linked to the 'IBM' ID issuer and having a documented sexual orientation","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the patients' date of birth, formatted date of birth, and age for those who live at an address associated with the 'IBM' ID issuer and have a recorded sexual orientation","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the date of birth, formatted date of birth, and age of patients who are registered with the 'IBM' ID issuer and have a documented sexual orientation, along with their respective addresses","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the recorded date of birth, formatted date of birth, and calculated age of patients who live at an address associated with the 'IBM' ID issuer and have a known sexual orientation","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the date of birth, formatted date of birth, and age of patients who are associated with the 'IBM' ID issuer, reside at a known address, and have a recorded sexual orientation","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' date of birth, formatted date of birth, and age for those who live at an address linked to the 'IBM' ID issuer and have a documented sexual orientation","completion":"S2=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"list the recorded date, month, and count of signals for signals that were recorded in the year 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the date of recording, month, and total count of signals for signals recorded in the year 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Obtain the recorded date, month, and number of signals for signals that were recorded in 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the date and month of recording, along with the total count of signals, for signals that were recorded in the year 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded date, month, and count of signals for signals that were logged in 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Obtain the date of recording, month, and total number of signals for signals recorded in the year 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the recorded date, month, and number of signals for signals that were recorded in the year 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the date and month of recording, along with the total number of signals, for signals recorded in the year 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Obtain the recorded date, month, and count of signals for signals that were registered in 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the date of recording, month, and total count of signals for signals recorded in the year 2022","completion":"S=>(@S Signal {DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},

    {"prompt":"Get the first name, last name, gender, patient type, date of birth, and age of patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, family name, gender, patient category, date of birth, and age for patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the given name, surname, gender, patient classification, birth date, and age of patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, family name, gender, patient type, date of birth, and calculated age for patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, gender, patient status, date of birth, and age of individuals","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the given name, family name, gender, patient type, date of birth, and age for the patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, last name, gender, patient category, date of birth, and age of the individuals","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, family name, gender, patient classification, date of birth, and calculated age for patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the given name, surname, gender, patient type, birth date, and age of the individuals","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, family name, gender, patient type, date of birth, and age for the patients","completion":"S=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.patientType AS \"Patient Type\", P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

     {"prompt":"List the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients associated with signals where the data controller is psm_dev_v1_0. Filter the results to include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients who are associated with signals where the data controller is psm_dev_v1_0. Include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"retrieve the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients associated with signals. The signals must have a data controller value of psm_dev_v1_0. The results are filtered to include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients who are associated with signals. The signals must have a data controller value of psm_dev_v1_0. Only include records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients associated with signals. The signals should have a data controller value of psm_dev_v1_0. Filter the results to include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"return the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients who are associated with signals. The signals must have a data controller value of psm_dev_v1_0. The results are filtered to include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients who are associated with signals. The signals must have a data controller value of psm_dev_v1_0. Include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients associated with signals. The signals should have a data controller value of psm_dev_v1_0. Filter the results to include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"retrieve the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients associated with signals. The signals must have a data controller value of psm_dev_v1_0. The results are filtered to include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients who are associated with signals. The signals must have a data controller value of psm_dev_v1_0. Include only records where the year is 2022 and the month is 11 or November","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id_NH, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"list the NH ID, NH issuer ID, date of birth, and age (in years) for patients whose age is greater than 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, NH issuer ID, date of birth, and age (in years) for patients who are older than 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"retrieve the NH ID, NH issuer ID, date of birth, and age (in years) for patients whose age exceeds 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, ID issuer, date of birth, and age (in years) for patients whose age is above 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the ID, ID issuer, date of birth, and age (in years) for patients whose age is over 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"return the ID, ID issuer, date of birth, and age (in years) for patients who are older than 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the NH ID, NH issuer ID, date of birth, and age (in years) for patients whose age is more than 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, NH issuer ID, date of birth, and age (in years) for patients who are aged above 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"retrieve the NH ID, NH issuer ID, date of birth, and age (in years) for patients whose age is greater than 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, ID issuer, date of birth, and age (in years) for patients who are older than 20 years","completion":"S=>(@P Patient:* {DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS ID, P.idIssuer_NH AS idIssuer, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the NH ID, first name, family name, date of birth, signal ID, description, signal date, year of the signal date, and month of the signal date for patients associated with signals where the data controller is psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients associated with signals where the data controller is psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"retrieve the NH ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients who are associated with signals and have the data controller psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients associated with signals where the data controller is psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients who are associated with signals that have the data controller psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"return the NH ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients associated with signals where the data controller is psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients associated with signals where the data controller is psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients who are associated with signals having the data controller psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"retrieve the NH ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients associated with signals where the data controller is psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, first name, family name, date of birth, signal ID, description, signal date, year, and month for patients associated with signals where the data controller is psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"})-[@r IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, P.dateOfBirth AS dateOfBirth, S.signalId AS signalId, S.description AS Description, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"list the signal ID, description, signal date and time, and formatted event date (in the format MM/DD/YYYY) for signals where the data controller is psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Fetch the ID, description, signal date and time, along with the formatted event date (in MM/DD/YYYY format) for signals associated with the data controller named psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Obtain the signal ID, description, date and time of the signal, and format the event date as MM/DD/YYYY for signals attributed to the data controller known as psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, date and time of the signal, and format the event date as MM/DD/YYYY for signals where the data controller is specified as psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Obtain the signal ID, description, signal date and time, and format the event date as MM/DD/YYYY for signals linked to the data controller labeled psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Fetch the ID, description, signal date and time, and format the event date as MM/DD/YYYY for signals associated with the data controller identified as psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, signal date and time, and format the event date as MM/DD/YYYY for signals where the data controller is indicated as psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Obtain the signal ID, description, date and time of the signal, and format the event date as MM/DD/YYYY for signals attributed to the data controller with the name psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Fetch the signal ID, description, signal date and time, and format the event date as MM/DD/YYYY for signals where the data controller is referenced as psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, date and time of the signal, and format the event date as MM/DD/YYYY for signals associated with the data controller called psm_dev_v1_0","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date SORT_ASC DateTime LIMIT 100"},

    {"prompt":"list the names of practitioners (identified as Practitioner_ID) who have attended to signals with a signal date in the year 2022 and  the priority of the diagnosis (Diagnosis_Priority) associated with the practitioners and the count of signals attended by each practitioner","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Get the names of practitioners (Practitioner_ID) who treated signals in 2022, along with the diagnosis priority (Diagnosis_Priority) and the count of signals they attended","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Retrieve the names of practitioners (Practitioner_ID) who handled signals in the year 2022, including the diagnosis priority (Diagnosis_Priority) and the number of signals they attended","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Obtain the names of practitioners (Practitioner_ID) who attended to signals dated in 2022, along with the diagnosis priority (Diagnosis_Priority) and the count of signals they handled","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Fetch the names of practitioners (Practitioner_ID) who responded to signals with a signal date in 2022, along with the diagnosis priority (Diagnosis_Priority) and the total number of signals they attended","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Get the names of practitioners (Practitioner_ID) who provided care for signals in 2022, including the diagnosis priority (Diagnosis_Priority) and the count of signals they treated","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Retrieve the names of practitioners (Practitioner_ID) who managed signals in the year 2022, along with the diagnosis priority (Diagnosis_Priority) and the number of signals they managed","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Obtain the names of practitioners (Practitioner_ID) who dealt with signals dated in 2022, along with the diagnosis priority (Diagnosis_Priority) and the count of signals they handled","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Fetch the names of practitioners (Practitioner_ID) who attended to signals with a signal date in 2022, along with the diagnosis priority (Diagnosis_Priority) and the total count of signals they attended","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},
    {"prompt":"Get the names of practitioners (Practitioner_ID) who responded to signals occurring in 2022, including the diagnosis priority (Diagnosis_Priority) and the count of signals they responded to","completion":"S2=>[S1=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 ATTENDING_DOCTOR_WAS]->(@D Practitioner:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SignOrSymptom:*);RETURN D.name AS Practitioner_ID, r2.priority AS Diagnosis_Priority, COUNT(D.name) AS COUNT SORT_DESC COUNT LIMIT 100"},

    {"prompt":"list the preferred terms (preferredTerm) of diagnostic procedures (DiagnosticProcedure) associated with orders (Order), along with the placer reference (placerReference) for context uniqueness","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred terms (preferredTerm) for diagnostic procedures (DiagnosticProcedure) linked to orders (Order), and include the unique placer reference (placerReference)","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred terms (preferredTerm) related to diagnostic procedures (DiagnosticProcedure) associated with orders (Order), along with the unique placer reference (placerReference)","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the preferred terms (preferredTerm) corresponding to diagnostic procedures (DiagnosticProcedure) connected to orders (Order), and include the placer reference (placerReference) and ensure context uniqueness","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Fetch the preferred terms (preferredTerm) for diagnostic procedures (DiagnosticProcedure) that are associated with orders (Order), along with the contextually unique placer reference (placerReference)","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred terms (preferredTerm) of diagnostic procedures (DiagnosticProcedure) that are linked to orders (Order), and include the placer reference (placerReference) and maintain context uniqueness","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the preferred terms (preferredTerm) for diagnostic procedures (DiagnosticProcedure) associated with orders (Order), along with the contextually unique placer reference (placerReference)","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred terms (preferredTerm) of diagnostic procedures (DiagnosticProcedure) connected to orders (Order), and include the unique placer reference (placerReference)","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Fetch the preferred terms (preferredTerm) for diagnostic procedures (DiagnosticProcedure) that are associated with orders (Order), and include the uniquely identified placer reference (placerReference)","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred terms (preferredTerm) associated with diagnostic procedures (DiagnosticProcedure) that are linked to orders (Order), and include the placer reference (placerReference)","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"Retrieve the preferred term, coding system, name of the diagnostic procedure, name of the finding, and the count of results associated with each diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, and names of diagnostic procedures, along with the names of the associated results and their respective counts","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, and names of diagnostic procedures, as well as the names of the results and the total count of results linked to each diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term, coding system, and names of the diagnostic procedures, along with the names of the results and the count of results associated with each diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the preferred term, coding system, and names of the diagnostic procedures, as well as the names of the associated results and their respective counts","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, and names of diagnostic procedures, along with the names of the results and the count of results associated with each diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, and names of diagnostic procedures, as well as the names of the results and the total count of results linked to each diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term, coding system, and names of the diagnostic procedures, along with the names of the results and the count of results associated with each diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the preferred term, coding system, and names of the diagnostic procedures, as well as the names of the associated results and their respective counts","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, and names of diagnostic procedures, along with the names of the results and the count of results associated with each diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the count of names associated with addresses (cnt1) and the count of names associated with postcodes (cnt2) ","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Get the number of names linked to addresses (cnt1) and the number of names linked to postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Retrieve the count of names associated with addresses (cnt1) and the count of names associated with postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Obtain the total number of names connected to addresses (cnt1) and the total number of names connected to postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Fetch the count of names that are associated with addresses (cnt1) and the count of names that are associated with postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Get the number of names that are linked to addresses (cnt1) and the number of names that are linked to postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Retrieve the count of names associated with addresses (cnt1) and the count of names associated with postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Obtain the total count of names connected to addresses (cnt1) and the total count of names connected to postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Fetch the number of names that are associated with addresses (cnt1) and the number of names that are associated with postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},
    {"prompt":"Get the count of names linked to addresses (cnt1) and the count of names linked to postcodes (cnt2)","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN COUNT(P.name) AS cnt1, COUNT(D.name) AS cnt2 SORT_DESC cnt2 LIMIT 100"},

    {"prompt":"list the code, coding system, name of the diagnostic procedure, and name of the finding for results that are associated with diagnostic procedures where the finding's nodeFor property is not equal to NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Get the code, coding system, diagnostic procedure name, and finding name for results associated with diagnostic procedures, excluding results where the nodeFor property is NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Retrieve the code, coding system, name of the diagnostic procedure, and name of the finding for results that are connected to diagnostic procedures, except for results where the nodeFor property is NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Obtain the code, coding system, diagnostic procedure name, and finding name for results associated with diagnostic procedures, excluding results with the nodeFor property not equal to NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Fetch the code, coding system, name of the diagnostic procedure, and name of the finding for results associated with diagnostic procedures, excluding results where the nodeFor property is not equal to NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Get the code, coding system, diagnostic procedure name, and finding name for results that are linked to diagnostic procedures, excluding results where the nodeFor property is not NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Retrieve the code, coding system, name of the diagnostic procedure, and name of the finding for results associated with diagnostic procedures, excluding results where the nodeFor property is not equal to NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Obtain the code, coding system, diagnostic procedure name, and finding name for results associated with diagnostic procedures, excluding results where the nodeFor property is different from NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Fetch the code, coding system, name of the diagnostic procedure, and name of the finding for results associated with diagnostic procedures, excluding results where the nodeFor property is not equal to NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},
    {"prompt":"Get the code, coding system, diagnostic procedure name, and finding name for results that are connected to diagnostic procedures, excluding results where the nodeFor property is not NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 "},

    {"prompt":"List the country, state/province, city, and name associated with addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the country, state/province, city, and name linked to addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the country, state/province, city, and name associated with addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Obtain the country, state/province, city, and name connected to addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Fetch the country, state/province, city, and name linked with addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the country, state/province, city, and name associated with addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the country, state/province, city, and name connected to addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Obtain the country, state/province, city, and name linked with addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Fetch the country, state/province, city, and name associated with addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the country, state/province, city, and name connected to addresses and postcodes","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},

    {"prompt":"Find the unique relationships between findings and diagnostic procedures. Retrieve the preferred term, coding system, name of the diagnostic procedure, and name of the finding","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"list the preferred term, coding system, name of the diagnostic procedure, and name of the results","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"list the preferred term, coding system, name of all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of all diagnostic Procedures and name of the results ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list all preferred term, coding system, name of all diagnostic Procedures and name of the results ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"return the preferred term, coding system, name of all diagnostic Procedures and name of the results ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"list preferred term, coding system, name of all diagnostic Procedures and name of the results ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name of all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"provide a list of preferred term, coding system, name of all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred term, coding system, name of all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the preferred term, coding system, name of all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Collect the preferred term, coding system, name of all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term, coding system, name of all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"find the preferred term, coding system, name of all diagnostic Procedures and name of the results ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide a list of preferred term, coding system, name for all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred term, coding system, name of various diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Show the preferred term, coding system, name associated with different diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the preferred term, coding system, name of all tests related to diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Present a compilation of preferred term, coding system, name for different diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Gather the preferred term, coding system, name of various tests in the diagnostic Procedures and name of the results ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of all diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term, coding system, name corresponding to different diagnostic Procedures and name of the results","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Display the preferred term, coding system, name of tests within the diagnostic Procedures and name of the results ","completion":"q=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"List the preferred term, coding system, diagnostic procedure name, and finding name for the unique relationships between findings and diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Find the unique associations between findings and diagnostic procedures. Retrieve the preferred term, coding system, name of the diagnostic procedure, and name of the finding","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of the diagnostic procedure, and name of the finding for the distinct relationships between findings and diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Find the unique connections between findings and diagnostic procedures. Retrieve the preferred term, coding system, diagnostic procedure name, and finding name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of the diagnostic procedure, and name of the finding associated with the unique findings in diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Find the distinct relationships between findings and diagnostic procedures. Retrieve the preferred term, coding system, name of the diagnostic procedure, and name of the finding","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of the diagnostic procedure, and name of the finding for the unique findings in diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Find the unique links between findings and diagnostic procedures. Retrieve the preferred term, coding system, diagnostic procedure name, and finding name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Find the unique links between findings and diagnostic procedures. Retrieve the preferred term, coding system, diagnostic procedure name, and finding name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},

    {"prompt":"Retrieve the code, filler reference, and placer reference for the unique relationships between diagnostic procedures and orders","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Find the unique associations between diagnostic procedures and orders. Retrieve the diagnostic procedure code, filler reference, and placer reference","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of the order associated with the unique diagnostic procedures","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Find the distinct relationships between diagnostic procedures and orders. Retrieve the code, filler reference, and placer reference of the diagnostic procedure and order","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure code, filler reference, and placer reference for the unique associations between diagnostic procedures and orders","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Find the unique connections between diagnostic procedures and orders. Retrieve the code, filler reference, and placer reference of the order related to the diagnostic procedure","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of the order associated with the unique diagnostic procedures","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Find the unique links between diagnostic procedures and orders. Retrieve the diagnostic procedure code, filler reference, and placer reference","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference for the distinct diagnostic procedures and orders","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Find the unique associations between diagnostic procedures and orders. Retrieve the code, filler reference, and placer reference of the diagnostic procedure and order","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the preferred term and placer reference for the unique associations between diagnostic procedures and orders","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Find the distinct connections between diagnostic procedures and orders. Retrieve the preferred term of the diagnostic procedure and the placer reference of the order","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer reference associated with the unique diagnostic procedures and orders","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Find the unique links between diagnostic procedures and orders. Retrieve the preferred term of the diagnostic procedure and the placer reference of the order","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer reference for the unique associations between diagnostic procedures and orders","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Find the unique associations between diagnostic procedures and orders. Retrieve the preferred term of the diagnostic procedure and the placer reference of the order","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer reference associated with the distinct diagnostic procedures and orders","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Find the unique connections between diagnostic procedures and orders. Retrieve the preferred term of the diagnostic procedure and the placer reference of the order","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer reference for the distinct diagnostic procedures and orders","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Find the unique relationships between diagnostic procedures and orders. Retrieve the preferred term of the diagnostic procedure and the placer reference of the order","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"Retrieve the code, preferred term, and name of the diagnostic procedure for the unique findings associated with it","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Find distinct findings linked to diagnostic procedures. Retrieve the code, preferred term, and name of the diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of the diagnostic procedure for the unique associations with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Find unique associations between findings and diagnostic procedures. Retrieve the code, preferred term, and name of the diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of the diagnostic procedure for the distinct findings associated with it","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Find distinct associations between findings and diagnostic procedures. Retrieve the code, preferred term, and name of the diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of the diagnostic procedure for the unique findings linked to it","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Find unique connections between findings and diagnostic procedures. Retrieve the code, preferred term, and name of the diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of the diagnostic procedure for the distinct findings linked to it","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Find unique relationships between findings and diagnostic procedures. Retrieve the code, preferred term, and name of the diagnostic procedure","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the coding system and placer reference associated with diagnostic procedures in distinct orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system and placer reference for unique instances of orders associated with diagnostic procedures","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system and placer reference linked to diagnostic procedures in unique orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system and placer reference for distinct orders associated with diagnostic procedures","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system and placer reference associated with diagnostic procedures in unique occurrences of orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system and placer reference for distinct instances of orders associated with diagnostic procedures","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system and placer reference linked to diagnostic procedures in unique occurrences of orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system and placer reference for unique orders associated with diagnostic procedures","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system and placer reference associated with diagnostic procedures in distinct instances of orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system and placer reference for unique orders linked to diagnostic procedures","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"list the street address, city, and name for distinct addresses and their corresponding postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name linked to unique instances of addresses and postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name associated with unique occurrences of addresses and postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name for distinct instances of addresses and their corresponding postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name linked to unique occurrences of addresses and postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name associated with unique addresses and their corresponding postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name for distinct occurrences of addresses and postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name linked to unique addresses and postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name associated with unique instances of addresses and postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name for distinct addresses and their corresponding postcodes","completion":"S1{UNIQUE}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},

    {"prompt":"list the preferred term, coding system, name, and additional name for distinct results and their corresponding diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and additional name linked to unique instances of results and diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and additional name associated with unique occurrences of results and diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and additional name for distinct instances of results and their corresponding diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and additional name linked to unique occurrences of results and diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and additional name associated with unique results and their corresponding diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and additional name for distinct occurrences of results and diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and additional name linked to unique results and diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and additional name associated with unique instances of results and diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and additional name for distinct results and their corresponding diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},

    {"prompt":"list the preferred term and placer reference for distinct diagnostic procedures and their corresponding orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer reference linked to unique instances of diagnostic procedures and orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer reference associated with unique occurrences of diagnostic procedures and orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer reference for distinct instances of diagnostic procedures and their corresponding orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer reference linked to unique occurrences of diagnostic procedures and orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer reference associated with unique diagnostic procedures and their corresponding orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer reference for distinct occurrences of diagnostic procedures and orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer reference linked to unique diagnostic procedures and orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer reference associated with unique instances of diagnostic procedures and orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer reference for distinct diagnostic procedures and their corresponding orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"list the preferred term, coding system, names of diagnostic procedures and name of results, along with the count of occurrences","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, names of diagnostic procedures, and the names of results, along with the count of instances","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, diagnostic procedure names, and result names, along with the count of occurrences","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term, coding system, names of diagnostic procedures, and result names, including the count of instances","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the preferred term, coding system, diagnostic procedure names, and names of results, along with the count of occurrences","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, names of diagnostic procedures, and the names of results, along with the count of instances","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, diagnostic procedure names, and result names, along with the count of occurrences","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term, coding system, names of diagnostic procedures, and result names, including the count of instances","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the preferred term, coding system, diagnostic procedure names, and names of results, along with the count of occurrences","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, names of diagnostic procedures, and the names of results, along with the count of instances","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the code, preferred term, and name for different diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Provide a list of codes, preferred terms, and names for various diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the codes, preferred terms, and names of different diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the codes, preferred terms, and names for various diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Give the codes, preferred terms, and names associated with diverse diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Describe the codes, preferred terms, and names linked to various diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Share a list of codes, preferred terms, and names for different diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    
    {"prompt":"Retrieve the code, preferred term, and name for findings associated with diagnostic procedures that have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and name of findings linked to diagnostic procedures that have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name associated with findings that are related to diagnostic procedures and have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and name for findings that are associated with diagnostic procedures and have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of findings that are linked to diagnostic procedures and have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and name associated with findings that are connected to diagnostic procedures and have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name for findings that are linked to diagnostic procedures and have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and name associated with findings that are associated with diagnostic procedures and have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of findings that are related to diagnostic procedures and have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and name for findings associated with diagnostic procedures that have a non-null 'nodeFor' property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"list the coding system, filler reference, and placer reference for diagnostic procedures that are linked to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference associated with diagnostic procedures that have an association with orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the coding system, filler reference, and placer reference for diagnostic procedures that are connected to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference of diagnostic procedures associated with orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the coding system, filler reference, and placer reference associated with diagnostic procedures that are related to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference for diagnostic procedures that have an association with orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the coding system, filler reference, and placer reference associated with diagnostic procedures that are linked to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference for diagnostic procedures that are associated with orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the coding system, filler reference, and placer reference associated with diagnostic procedures that have a connection to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference of diagnostic procedures that are linked to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"list the code, filler reference, and placer reference for diagnostic procedures that are linked to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference associated with diagnostic procedures that have an association with orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, filler reference, and placer reference for diagnostic procedures that are connected to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of diagnostic procedures associated with orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, filler reference, and placer reference associated with diagnostic procedures that are related to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference for diagnostic procedures that have an association with orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, filler reference, and placer reference associated with diagnostic procedures that are linked to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference for diagnostic procedures that are associated with orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, filler reference, and placer reference associated with diagnostic procedures that have a connection to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of diagnostic procedures that are linked to orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},

    {"prompt":"Obtain the coding system and placer reference for diagnostic procedures that are linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"list the coding system and placer reference associated with diagnostic procedures that have an association with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the coding system and placer reference for diagnostic procedures that are connected to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the coding system and placer reference associated with diagnostic procedures that are related to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system and placer reference for diagnostic procedures that have an association with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the coding system and placer reference associated with diagnostic procedures that are linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system and placer reference for diagnostic procedures that are associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Obtain the coding system and placer reference associated with diagnostic procedures that have a connection to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system and placer reference of diagnostic procedures that are linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"list the country, state/province, city, and name for addresses associated with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name linked to addresses that have an association with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Obtain the country, state/province, city, and name associated with addresses that are connected to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name of addresses associated with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Obtain the country, state/province, city, and name associated with addresses that are related to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name for addresses that have an association with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Obtain the country, state/province, city, and name associated with addresses that are linked to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name for addresses associated with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Obtain the country, state/province, city, and name associated with addresses that have a connection to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name of addresses that are linked to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},

    {"prompt":"list the code, coding system, name, and associated name for findings that are related to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name associated with findings linked to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and name associated with findings that are connected to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name for findings associated with diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of findings that are related to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name associated with findings that have an association with diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and name associated with findings that are linked to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name for findings associated with diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of findings that are connected to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name associated with findings that are linked to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},

    {"prompt":"list the code, coding system, name, and associated name for unique findings that are related to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name associated with unique findings linked to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and name associated with unique findings that are connected to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name for unique findings associated with diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of unique findings that are related to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name associated with unique findings that have an association with diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and name associated with unique findings that are linked to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name for unique findings associated with diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of unique findings that are connected to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name associated with unique findings that are linked to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},

    {"prompt":"list the preferred term, coding system, name, and associated name for unique findings that are related to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and name associated with unique findings linked to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and name associated with unique findings that are connected to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and associated name for unique findings associated with diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of unique findings that are related to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and name associated with unique findings that have an association with diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and name associated with unique findings that are linked to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and associated name for unique findings associated with diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of unique findings that are connected to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and name associated with unique findings that are linked to diagnostic procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},

    {"prompt":"list the preferred term, coding system, name, associated name, and count of occurrences for findings associated with diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, associated name, and count of findings related to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, associated name, and count of occurrences for findings linked to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, associated name, and count of findings associated with diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, associated name, and count of occurrences for findings connected to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, associated name, and count of findings related to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, associated name, and count of occurrences for findings that are associated with diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, associated name, and count of findings linked to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, associated name, and count of occurrences for findings associated with diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, associated name, and count of findings connected to diagnostic procedures","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the country, state/province, city, and name linked to postcodes for unique addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name associated with postcodes for distinct addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the country, state/province, city, and name that are associated with postcodes for unique addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name linked to postcodes for individual addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the country, state/province, city, and name associated with postcodes for specific addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name linked to postcodes for separate addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the country, state/province, city, and name that are associated with postcodes for distinct addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name associated with postcodes for unique address entries","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the country, state/province, city, and name linked to postcodes for exclusive addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the country, state/province, city, and name associated with postcodes for individual address records","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.country AS country, P.stateProvince AS stateProvince, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},

    {"prompt":"Get the street address, city, and name linked to postcodes for unique addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name associated with postcodes for distinct addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the street address, city, and name that are associated with postcodes for unique addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name linked to postcodes for individual addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the street address, city, and name associated with postcodes for specific addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name linked to postcodes for separate addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the street address, city, and name that are associated with postcodes for distinct addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name associated with postcodes for unique address entries","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the street address, city, and name linked to postcodes for exclusive addresses","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name associated with postcodes for individual address records","completion":"S1{UNIQUE_SELECT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},

    {"prompt":"Get the diagnostic procedure codes and placer references linked to distinct orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the procedure codes and placer references associated with unique diagnostic orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the codes and placer references of diagnostic procedures associated with distinct orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure codes and placer references for exclusive orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the codes and placer references linked to unique diagnostic orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure codes and placer references for distinct order entries","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the procedure codes and placer references associated with specific diagnostic orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the codes and placer references of diagnostic procedures for unique order records","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the diagnostic procedure codes and placer references linked to individual orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the codes and placer references associated with unique diagnostic order entries","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},

    {"prompt":"Get the coding systems and placer references linked to diagnostic procedures in a unique order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding systems and placer references associated with diagnostic procedures within a specific order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding systems and placer references of diagnostic procedures in a distinct order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding systems and placer references for diagnostic procedures that are associated with exclusive order contexts","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding systems and placer references linked to diagnostic procedures within a specific context of orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding systems and placer references of diagnostic procedures in a particular order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding systems and placer references associated with diagnostic procedures in a unique order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding systems and placer references for diagnostic procedures within a specific order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding systems and placer references linked to diagnostic procedures that are associated with individual order contexts","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding systems and placer references of diagnostic procedures within a distinct order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"Get the preferred term and placer references linked to diagnostic procedures in a unique order context","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer references associated with diagnostic procedures within a specific order context","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer references of diagnostic procedures in a distinct order context","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer references for diagnostic procedures that are associated with exclusive order contexts","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer references linked to diagnostic procedures within a specific context of orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer references of diagnostic procedures in a particular order context","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer references associated with diagnostic procedures in a unique order context","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer references for diagnostic procedures within a specific order context","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the preferred term and placer references linked to diagnostic procedures that are associated with individual order contexts","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the preferred term and placer references of diagnostic procedures within a distinct order context","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.preferredTerm AS preferredTerm, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"Get the code and placer references linked to diagnostic procedures in a unique order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer references associated with diagnostic procedures within a specific order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and placer references of diagnostic procedures in a distinct order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer references for diagnostic procedures that are associated with exclusive order contexts","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and placer references linked to diagnostic procedures within a specific context of orders","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer references of diagnostic procedures in a particular order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and placer references associated with diagnostic procedures in a unique order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer references for diagnostic procedures within a specific order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and placer references linked to diagnostic procedures that are associated with individual order contexts","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer references of diagnostic procedures within a distinct order context","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},

    {"prompt":"Get the code and preferred term linked to diagnostic procedures in a unique order context","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and preferred term associated with diagnostic procedures within a specific order context","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and preferred term of diagnostic procedures in a distinct order context","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and preferred term for diagnostic procedures that are associated with exclusive order contexts","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and preferred term linked to diagnostic procedures within a specific context of orders","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and preferred term of diagnostic procedures in a particular order context","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and preferred term associated with diagnostic procedures in a unique order context","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and preferred term for diagnostic procedures within a specific order context","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and preferred term linked to diagnostic procedures that are associated with individual order contexts","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and preferred term of diagnostic procedures within a distinct order context","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Get the codes, coding systems, names, and corresponding names of diagnostic procedures in relation to findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure codes, coding systems, names, and associated names within the context of findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the codes, coding systems, names, and related names of diagnostic procedures associated with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure codes, coding systems, names, and corresponding names in the context of findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the codes, coding systems, names, and linked names of diagnostic procedures in the context of findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure codes, coding systems, names, and associated names within the findings context","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the codes, coding systems, names, and names associated with diagnostic procedures within the context of findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure codes, coding systems, names, and associated names in relation to findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the codes, coding systems, names, and corresponding names of diagnostic procedures linked to findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure codes, coding systems, names, and names associated with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},

    {"prompt":"Get the state/province, city, name, and count of addresses linked to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the state/province, city, name, and count of addresses associated with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the state/province, city, name, and number of addresses associated with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the state/province, city, name, and count of addresses that are linked to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the state/province, city, name, and count of addresses that are associated with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the state/province, city, name, and number of addresses linked to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the state/province, city, name, and count of addresses that have an association with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the state/province, city, name, and count of addresses that are associated with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the state/province, city, name, and number of addresses that are associated with postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the state/province, city, name, and count of addresses that have a connection to postcodes","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.stateProvince AS stateProvince, P.city AS city, D.name AS Name, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 10"},

    {"prompt":"Get the code, preferred term, and name of diagnostic procedures linked to findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of diagnostic procedures associated with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and name of diagnostic procedures that are associated with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of diagnostic procedures that are linked to findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and name of diagnostic procedures associated with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of diagnostic procedures that have an association with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and name of diagnostic procedures that are associated with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of diagnostic procedures that have a connection to findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and name of diagnostic procedures associated with findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and name of diagnostic procedures linked to findings","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.preferredTerm AS preferredTerm, D.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Get the code and placer reference of diagnostic procedures linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and placer reference of diagnostic procedures that are associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer reference of diagnostic procedures that are linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer reference of diagnostic procedures that have an association with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and placer reference of diagnostic procedures that are associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer reference of diagnostic procedures that have a connection to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and placer reference of diagnostic procedures linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},

    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures for findings where the nodeFor property is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and name of diagnostic procedures associated with findings that have a non-NA nodeFor property","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures linked to findings with a nodeFor property other than NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and name of diagnostic procedures for findings with a nodeFor property that is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures associated with findings that have a nodeFor property not equal to NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and name of diagnostic procedures for findings where the nodeFor property is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures linked to findings that have a nodeFor property other than NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and name of diagnostic procedures for findings with a non-NA nodeFor property","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures associated with findings where the nodeFor property is not equal to NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and name of diagnostic procedures for findings with a nodeFor property other than NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},

    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures for findings where the nodeFor property is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name of diagnostic procedures associated with findings that have a non-NA nodeFor property","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures linked to findings with a nodeFor property other than NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name of diagnostic procedures for findings with a nodeFor property that is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures associated with findings that have a nodeFor property not equal to NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name of diagnostic procedures for findings where the nodeFor property is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures linked to findings that have a nodeFor property other than NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name of diagnostic procedures for findings with a non-NA nodeFor property","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures associated with findings where the nodeFor property is not equal to NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and name of diagnostic procedures for findings with a nodeFor property other than NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},

    {"prompt":"Get the coding system, filler reference, and placer reference of diagnostic procedures linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference of diagnostic procedures that are associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference of diagnostic procedures for orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference of diagnostic procedures linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference of diagnostic procedures that are associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference of diagnostic procedures for orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference of diagnostic procedures linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"Get the preferred term, coding system, name of diagnostic procedures, and the associated finding names","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of diagnostic procedures, and the names of associated findings","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name of diagnostic procedures, and the names of findings associated with them","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of diagnostic procedures, and the names of findings that are associated with them","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name of diagnostic procedures, and the associated finding names","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of diagnostic procedures, and the names of associated findings","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name of diagnostic procedures, and the names of findings associated with them","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of diagnostic procedures, and the names of findings that are associated with them","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name of diagnostic procedures, and the associated finding names","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name of diagnostic procedures, and the names of associated findings","completion":"S=>(@P Finding:*)-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},

    {"prompt":"Get the street address, city, and name of postcodes associated with addresses, sorted in descending order by the city","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name of postcodes associated with addresses, sorted in descending order according to the city","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name of postcodes associated with addresses, sorted by the city in descending order","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name of postcodes associated with addresses, with the city sorted in descending order","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name of postcodes associated with addresses, ordering them in descending order based on the city","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name of postcodes associated with addresses, arranging them in descending order with respect to the city","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name of postcodes associated with addresses, sorted by the city in descending order","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name of postcodes associated with addresses, with the city sorted in descending order","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Get the street address, city, and name of postcodes associated with addresses, sorting them in descending order based on the city","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},
    {"prompt":"Retrieve the street address, city, and name of postcodes associated with addresses, ordering them in descending order according to the city","completion":"S1{UNIQUE_IN_CONTEXT}=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 100"},

    {"prompt":"Get the code, filler reference, and placer reference of diagnostic procedures linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, filler reference, and placer reference of diagnostic procedures that are associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of diagnostic procedures that are linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, filler reference, and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of diagnostic procedures that have an association with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, filler reference, and placer reference of diagnostic procedures that are associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of diagnostic procedures that have a connection to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, filler reference, and placer reference of diagnostic procedures associated with orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference of diagnostic procedures linked to orders","completion":"S1=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},

    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures for findings where the nodeFor property is not NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and associated name of diagnostic procedures for findings with a non-NA nodeFor property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures for findings that are not labeled as NA in the nodeFor property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and associated name of diagnostic procedures for findings where the nodeFor property does not contain NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures for findings with a nodeFor property value other than NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and associated name of diagnostic procedures for findings excluding those with an NA value in the nodeFor property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures for findings that do not have the nodeFor property set to NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and associated name of diagnostic procedures for findings excluding those with a nodeFor value of NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Get the preferred term, coding system, name, and associated name of diagnostic procedures for findings where the nodeFor property is not equal to NA","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},
    {"prompt":"Retrieve the preferred term, coding system, name, and associated name of diagnostic procedures for findings that have a non-NA value in the nodeFor property","completion":"S=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 LIMIT 100"},

    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures for findings with a non-NA nodeFor property","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name of diagnostic procedures for findings that are not labeled as NA in the nodeFor property","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures for findings where the nodeFor property does not contain NA","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name of diagnostic procedures for findings excluding those with an NA value in the nodeFor property","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures for findings with a nodeFor property value other than NA","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name of diagnostic procedures for findings excluding those with a nodeFor value of NA","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures for findings where the nodeFor property is not equal to NA","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name of diagnostic procedures for findings that have a non-NA value in the nodeFor property","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of diagnostic procedures for findings where the nodeFor property is not set to NA","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name of diagnostic procedures for findings excluding those with a nodeFor value equal to NA","completion":"S{UNIQUE_SELECT}=>(@P Finding:*{nodeFor ~ NA})-[@r1 IS_FINDING_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},

    {"prompt":"list the street address, city, and name related to postcodes for addresses","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name associated with postcodes in address records","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the street address, city, and name linked to postcodes for the given addresses","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name corresponding to postcodes in the address data","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the street address, city, and name that are associated with postcodes for addresses","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name that are linked to postcodes in the address records","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the street address, city, and name that are associated with the postcodes specified in the address information","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name that are connected to the postcodes mentioned in the address data","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Get the street address, city, and name for the postcodes associated with the provided addresses","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},
    {"prompt":"Retrieve the street address, city, and name for the postcodes associated with the given addresses","completion":"S1=>(@P Address:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Postcode:*);RETURN P.streetAddress AS streetAddress, P.city AS city, D.name AS Name SORT_DESC city LIMIT 10"},

    {"prompt":"Get the code, filler reference, and placer reference linked to diagnostic procedures in order records","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference for diagnostic procedures mentioned in order records","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, filler reference, and placer reference associated with the diagnostic procedures specified in order information","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference that are connected to the diagnostic procedures in the order data","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, filler reference, and placer reference for the diagnostic procedures recorded in the order records","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference for the diagnostic procedures mentioned in the order data","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, filler reference, and placer reference that are associated with the diagnostic procedures in the order records","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference that are linked to the diagnostic procedures specified in the order information","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, filler reference, and placer reference associated with diagnostic procedures in the provided order records","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, filler reference, and placer reference associated with diagnostic procedures in the given order records","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.fillerReference AS fillerReference, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},

    {"prompt":"Get the coding system, filler reference, and placer reference linked to unique diagnostic procedures in order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference for unique diagnostic procedures mentioned in order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference associated with the unique diagnostic procedures specified in order information","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference that are connected to the unique diagnostic procedures in the order data","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference for the unique diagnostic procedures recorded in the order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference for the unique diagnostic procedures mentioned in the order data","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference that are associated with the unique diagnostic procedures in the order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference that are linked to the unique diagnostic procedures specified in the order information","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference associated with unique diagnostic procedures in the provided order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference associated with unique diagnostic procedures in the given order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"Get the coding system, and placer reference linked to unique diagnostic procedures in order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, and placer reference for unique diagnostic procedures mentioned in order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, and placer reference associated with the unique diagnostic procedures specified in order information","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, and placer reference that are connected to the unique diagnostic procedures in the order data","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, and placer reference for the unique diagnostic procedures recorded in the order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, and placer reference for the unique diagnostic procedures mentioned in the order data","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, and placer reference that are associated with the unique diagnostic procedures in the order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, and placer reference that are linked to the unique diagnostic procedures specified in the order information","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, and placer reference associated with unique diagnostic procedures in the provided order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, and placer reference associated with unique diagnostic procedures in the given order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"Get the code, and placer reference linked to diagnostic procedures in order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, and placer reference for diagnostic procedures mentioned in order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, and placer reference associated with the diagnostic procedures specified in order information","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, and placer reference that are connected to the diagnostic procedures in the order data","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, and placer reference for the diagnostic procedures recorded in the order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, and placer reference for the diagnostic procedures mentioned in the order data","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, and placer reference that are associated with the diagnostic procedures in the order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, and placer reference that are linked to the diagnostic procedures specified in the order information","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, and placer reference associated with diagnostic procedures in the provided order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, and placer reference associated with diagnostic procedures in the given order records","completion":"S1{UNIQUE}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.code AS code, D.placerReference AS placerReference SORT_DESC code LIMIT 100"},

    {"prompt":"Get the code, coding system, name, and associated name for unique findings that serve as results for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name of unique findings that are linked to laboratory procedures as results","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name from unique findings that correspond to laboratory procedures as their results","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name for unique findings that are recorded as results for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name of unique findings that are associated with laboratory procedures as their results","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name from unique findings that indicate results for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name for unique findings that are identified as results for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name of unique findings that are linked to laboratory procedures and represent their results","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, coding system, name, and associated name from unique findings that are assigned as results for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, coding system, name, and associated name for unique findings that are associated with laboratory procedures and serve as their results","completion":"S{UNIQUE_SELECT}=>(@P Finding:*)-[@r1 IS_RESULT_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, D.codingSystem AS codingSystem, D.name AS name, P.name AS name1 SORT_DESC code LIMIT 100"},

    {"prompt":"Get the coding system, filler reference, and placer reference for the unique diagnostic procedures that are associated with orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference from the unique diagnostic procedures that are linked to orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference of the unique diagnostic procedures that are connected to orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference for the unique diagnostic procedures that are associated with orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference from the unique diagnostic procedures that are related to orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference of the unique diagnostic procedures that are associated with orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference for the unique diagnostic procedures that are assigned to orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference from the unique diagnostic procedures that are associated with orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Get the coding system, filler reference, and placer reference of the unique diagnostic procedures that are linked to orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},
    {"prompt":"Retrieve the coding system, filler reference, and placer reference for the unique diagnostic procedures that are associated with orders","completion":"S1{UNIQUE_SELECT}=>(@P DiagnosticProcedure:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Order:*);RETURN P.codingSystem AS codingSystem, D.fillerReference AS fillerReference, D.placerReference AS placerReference LIMIT 100"},

    {"prompt":"list the room, bed, description, message code, document status, recorded date, and year for the signals that have been assigned, with recorded dates in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year of the signals that are assigned and recorded in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year associated with the signals that have been assigned and recorded in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year for the signals that are linked and have recorded dates in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year from the signals that have been assigned, where the recorded date is in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year of the signals that are associated with point of care and recorded in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year assigned to the signals that have been assigned in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year for the signals that have been assigned and recorded in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year associated with the signals that have been assigned with recorded dates in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year of the signals that are assigned and have recorded dates in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"list the data controller, bed, room, recorded date, year, and month for the signals that have been assigned, with the year being 2022 and the month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Retrieve the data controller, bed, room, recorded date, year, and month of the signals that are assigned and have a recorded date in 2022 with a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Get the data controller, bed, room, recorded date, year, and month associated with the signals that have been assigned and recorded in 2022 with a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Retrieve the data controller, bed, room, recorded date, year, and month for the signals that are linked and have a recorded date in 2022 with a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Get the data controller, bed, room, recorded date, year, and month from the signals that have been assigned, where the recorded date is in 2022 with a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Retrieve the data controller, bed, room, recorded date, year, and month of the signals that are associated and recorded in 2022 with a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Get the data controller, bed, room, recorded date, year, and month assigned to the signals that have been assigned in 2022 with a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Retrieve the data controller, bed, room, recorded date, year, and month for the signals that have been assigned and recorded in 2022 with a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Get the data controller, bed, room, recorded date, year, and month associated with the signals that have been assigned with recorded dates in 2022 and a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},
    {"prompt":"Retrieve the data controller, bed, room, recorded date, year, and month of the signals that are assigned and have recorded dates in 2022 with a month greater than 2 or feb","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month > 2 LIMIT 100"},

    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year for the signals that have been assigned, with the recorded date in November and the year being 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year of the signals that are assigned and have a recorded date in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year associated with the signals that have been assigned and recorded in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year for the signals that are linked and have a recorded date in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year from the signals that have been assigned, where the recorded date is in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year of the signals that are associated and recorded in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year assigned to the signals that have been assigned in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year for the signals that have been assigned and recorded in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year associated with the signals that have been assigned with recorded dates in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year of the signals that are assigned and have recorded dates in November 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"list the room, bed, description, message code, document status, signal date and time, and year for the signals that have been assigned, with the year 2022 and non-empty document status","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year of the signals that are assigned, where the year is 2022 and the document status is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year associated with the signals that have been assigned, with the year 2022 and a non-null document status","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year for the signals that are linked, where the year is 2022 and the document status is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year from the signals that have been assigned, with the year 2022 and non-empty document status","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year of the signals that are associated, where the year is 2022 and the document status is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year assigned to the signals that have been assigned, with the year 2022 and non-null document status","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year for the signals that have been assigned, where the year is 2022 and the document status is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year associated with the signals that have been assigned, with signal dates in 2022 and a non-empty document status","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year of the signals that are assigned, where the year is 2022 and the document status is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Get the message type and room for the signals that have a signal date in 2022 and have been assigned to a point of care","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the message type and room of the signals that are assigned to a point of care, with a signal date in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType and room from the signals that have been assigned to a point of care and have a signal date in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType and room for the signals that have been assigned to a point of care, with the signal year as 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType and room associated with the signals that have been assigned to a point of care, with a signal date in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType and room of the signals that have been assigned to a point of care and have a signal date in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType and room from the signals that have been assigned to a point of care, with a signal date in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType and room for the signals that have been assigned to a point of care and have a signal date in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType and room associated with the signals that have been assigned to a point of care, with a signal date in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType and room of the signals that have been assigned to a point of care and have a signal date in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},

    {"prompt":"Get the message type, room, description, message code, signal date and time, year, and month for the signals assigned to a point of care with a signal date in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, message code, signalDateTime, year, and month for the signals that have been assigned to a point of care and have a signal date in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, signalDateTime, year, and month of the signals assigned to a point of care with a signal date in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, messageCode, signalDateTime, Year, and Month for the signals that have been assigned to a point of care and have a signal date in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, signalDateTime, Year, and Month associated with the signals that have been assigned to a point of care and have a signal date in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, messageCode, signalDateTime, Year, and Month for the signals that have been assigned to a point of care and have a signal date in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, signalDateTime, Year, and Month from the signals that have been assigned to a point of care with a signal date in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, messageCode, signalDateTime, Year, and Month for the signals that have been assigned to a point of care and have a signal date in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, signalDateTime, Year, and Month associated with the signals that have been assigned to a point of care and have a signal date in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, signalDateTime, Year, and Month associated with the signals that have been assigned to a point of care and have a signal date in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Get the messageType, room, description, messageCode, recordedDate, Year, and Month for the signals that have been assigned and have a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, messageCode, recordedDate, Year, and Month of the signals that have been assigned and have a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, recordedDate, Year, and Month associated with the signals that have been assigned and have a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, messageCode, recordedDate, Year, and Month for the signals that have been assigned and have a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, recordedDate, Year, and Month from the signals that have been assigned with a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, messageCode, recordedDate, Year, and Month for the signals that have been assigned and have a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, recordedDate, Year, and Month associated with the signals that have been assigned and have a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, messageCode, recordedDate, Year, and Month for the signals that have been assigned and have a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the messageType, room, description, messageCode, recordedDate, Year, and Month from the signals that have been assigned with a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the messageType, room, description, messageCode, recordedDate, Year, and Month for the signals that have been assigned and have a recorded date in November 2022","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"list the room, bed, description, message code, and document status for the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, and document status of the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status associated with the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, and document status for the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status from the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, and document status for the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status associated with the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, and document status for the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status from the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, and document status for the signals that have been assigned to a point of care, have a document status of Final results, and have a signal date in 2022","completion":"S=>(@P Signal:*{documentStatus = \"Final results\" AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},

    {"prompt":"list the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, have a non-null description, and are located in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type of the signals that have been assigned to a point of care, have a non-null description, and are in either room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type associated with the signals that have been assigned to a point of care, have a non-null description, and are located in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, have a non-null description, and are situated in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type from the signals that have been assigned to a point of care, have a non-null description, and are located in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, have a non-null description, and are found in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type associated with the signals that have been assigned to a point of care, have a non-null description, and are located in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, have a non-null description, and are positioned in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type from the signals that have been assigned to a point of care, have a non-null description, and are located in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, have a non-null description, and are situated in room R8 or R9","completion":"S=>(@P Signal:*{description !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, r1.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [R8,R9] SORT_DESC description LIMIT 100"},

    {"prompt":"list the recorded date, room, bed, description, message code, and document type for the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type of the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are located in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type associated with the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are situated in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are found in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type from the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are located in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are located in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type associated with the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are positioned in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are located in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type from the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are situated in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have a non-null data controller, were recorded in November 2022, have been assigned to a point of care, have a non-null document type, and are positioned in room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year for the signals that have been assigned to a point of care, have a non-null document status, and were recorded in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year of the signals that have been assigned to a point of care, have a non-null document status, and were recorded in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year associated with the signals that have been assigned to a point of care, have a non-null document status, and were recorded in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year for the signals that have been assigned to a point of care, have a non-null document status, and were recorded in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year from the signals that have been assigned to a point of care, have a non-null document status, and were recorded in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year for the signals that have been assigned to a point of care, have a non-null document status, and were recorded in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year associated with the signals that have been assigned to a point of care, have a non-null document status, and were recorded in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year for the signals that have been assigned to a point of care, have a non-null document status, and were recorded in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, signal date and time, and year from the signals that have been assigned to a point of care, have a non-null document status, and were recorded in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, signal date and time, and year for the signals that have been assigned to a point of care, have a non-null document status, and were recorded in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 AND documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Get the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, were recorded in November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type of the signals that have been assigned to a point of care, were recorded in November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type associated with the signals that have been assigned to a point of care, were recorded in November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, were recorded in the month of November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type from the signals that have been assigned to a point of care, were recorded in November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, were recorded in November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type associated with the signals that have been assigned to a point of care, were recorded in November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, were recorded in the month of November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type from the signals that have been assigned to a point of care, were recorded in November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room, bed, description, message code, and document type for the signals that have been assigned to a point of care, were recorded in the month of November, and have a non-null document type","completion":"S=>(@P Signal:*{DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType ~ NA SORT_DESC messageCode LIMIT 100"},

    {"prompt":"list the message code, bed, and room for the signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code, bed, and room of the signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, bed, and room associated with the signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code, bed, and room for the signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, bed, and room from the signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Get the unique data controller, bed, and room for the signals that have been assigned to a point of care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the unique data controller, bed, and room of the signals that have been assigned to a point of care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the unique data controller, bed, and room associated with the signals that have been assigned to a point of care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the unique data controller, bed, and room for the signals that have been assigned to a point of care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the unique data controller, bed, and room from the signals that have been assigned to a point of care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},

    {"prompt":"Get the room, bed, description, message code, and document status for the signals with a document status of Preliminary results that have been assigned to a point of care, excluding any records with a missing document status","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room and bed information, along with the description, message code, and document status, for the signals that have been assigned to a point of care and have a document status of Preliminary results. Exclude any records where the document status is missing","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room and bed details, along with the description, message code, and document status, for the signals that have been assigned to a point of care. Only include records with a document status of Preliminary results and exclude any records with a missing document status","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room and bed data, along with the description, message code, and document status, for the signals that have been assigned to a point of care. Only include records with a document status of Preliminary results and exclude any records where the document status is missing","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room and bed information, along with the description, message code, and document status, for the signals that have been assigned to a point of care. Only include records with a document status of Preliminary results and exclude any records with a missing document status","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room and bed details, along with the description, message code, and document status, for the signals that have been assigned to a point of care. Exclude any records with a missing document status and only include records with a document status of Preliminary results","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room and bed data, along with the description, message code, and document status, for the signals that have been assigned to a point of care. Only include records with a document status of Preliminary results and exclude any records where the document status is missing","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room and bed information, along with the description, message code, and document status, for the signals that have been assigned to a point of care. Exclude any records with a missing document status and only include records with a document status of Preliminary results","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room and bed details, along with the description, message code, and document status, for the signals that have been assigned to a point of care. Only include records with a document status of Preliminary results and exclude any records where the document status is missing","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room and bed data, along with the description, message code, and document status, for the signals that have been assigned to a point of care. Exclude any records with a missing document status and only include records with a document status of Preliminary results","completion":"S=>(@P Signal:*{documentStatus = \"Preliminary results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    
    {"prompt":"list the message code, room, signal date and time, year, and month for the signals that have been assigned to a point of care. Only include records with a signal date in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, room, signal date, year, and month for assigned signals in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the code, room, signal date, year, and month for signals assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the message code, room number, signal date, year, and month for signals that have been assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message code, room details, signal date, year, and month for assigned signals in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the code, room information, signal date, year, and month for signals assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, room number, signal date, and the corresponding year and month for signals assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the message code, room details, signal date, as well as the year and month for assigned signals in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the code, room information, signal date, year, and month for signals that have been assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code, room, signal date, and respective year and month for signals assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the message type and room for signals assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the message type and room information for assigned signals in 2022 at a specific point of care","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Fetch the message type and corresponding room for signals that have been assigned to a point of care in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the messageType and room details for signals assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType and room information for signals assigned to a point of care during the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType and room for assigned signals in 2022 at the designated point of care","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Fetch the messageType and room details for assigned signals in 2022 at a specific point of care","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the message type and room information for signals assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType and room for signals assigned to a point of care during the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the type of messages and corresponding room information for signals that have been assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},

    {"prompt":"Get the data controller, bed, and room information for signals that have been assigned to a specific point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the data controller, bed number, and room details for signals that are associated with a particular point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the data controller, bed information, and room location for signals that have been assigned to a specific point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Fetch the data controller, bed number, and room details corresponding to signals that are linked to a specific point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the information of the data controller, bed, and room for signals that have been assigned to a particular point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the data controller, bed location, and room details for signals that are associated with a specific point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the data controller, bed number, and room information for signals that have been assigned to a particular point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Fetch the data controller, bed details, and room location for signals that are linked to a specific point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the information of the data controller, bed, and room for signals that have been assigned to a specific point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the data controller, bed location, and room details corresponding to signals that are associated with a specific point of care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},

    {"prompt":"Get the message code and room details for signals that have been assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Return the message code and room information for signals that are associated with a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code and room data for signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message code and room details for signals that have been allocated to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code and room information for signals that are linked to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code and room details for signals that have been assigned to a particular point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Return the message code and room information for signals associated with a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code and room data for signals that have been allocated to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message code and room details for signals that are linked to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code and room information for signals that have been assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Get the room, bed, description, message code, document status, and signal date-time for signals assigned to a specific point of care in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room number, bed number, signal description, message code, document status, and signal date and time for signals that have been assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the room and bed information, along with the description, message code, document status, and signal date and time of signals that have been assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room and bed details, along with the signal description, message code, document status, and signal date-time for signals that were assigned to a point of care during the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room and bed identifiers, along with the description, message code, document status, and signal date and time for signals that have been assigned to a specific point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, signal description, message code, document status, and signal date and time for signals that were assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room and bed information, along with the description, message code, document status, and signal date-time for signals that have been assigned to a point of care during 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the room number, bed number, signal description, message code, document status, and signal date and time for signals that have been assigned to a specific point of care in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room and bed details, along with the description, message code, document status, and signal date and time of signals that have been assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room and bed identifiers, along with the signal description, message code, document status, and signal date-time for signals that were assigned to a specific point of care during the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the message type, bed number, and room number for signals assigned to a specific point of care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType, bed, and room information for signals that have been assigned to a point of care in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Fetch the signal's messageType, bed number, and room number for signals assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the messageType, bed, and room details for signals that were assigned to a point of care during the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType, bed number, and room number for signals that have been assigned to a specific point of care in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the signal's messageType, bed, and room information for signals that were assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Fetch the message type, bed number, and room number for signals assigned to a point of care during 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the messageType, bed, and room details for signals that have been assigned to a specific point of care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType, bed number, and room number for signals that have been assigned to a point of care in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the signal's messageType, bed, and room information for signals that were assigned to a specific point of care during the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},

    {"prompt":"Retrieve the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals assigned to a specific point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals assigned to a point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals that have been assigned to a specific point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals assigned to a point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals that have been assigned to a specific point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals assigned to a point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals that have been assigned to a specific point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals assigned to a point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals that have been assigned to a specific point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room number, bed number, description, signal date and time, year, message code, and document type for signals assigned to a point of care in 2022 with room R15, bed B5, message code OMG, and year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG AND Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the message type, room number, description, and message code for signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signal message type, room number, description, and message code associated with a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the messageType, room, description, and messageCode for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the type of message, room number, description, and code for signals assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message type, room, description, and message code for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signal's message type, room, description, and message code related to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the messageType, room number, description, and messageCode for signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the type of message, room number, description, and code associated with signals assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message type, room, description, and message code for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signal message type, room number, description, and message code for a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room, P.description AS description, P.messageCode AS messageCode SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the recorded date, room number, bed number, description, message code, and document type for signals assigned to a point of care where the room is R15, bed is B5, and message code is OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type for signals associated with a point of care having room R15, bed B5, and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the recorded date, room number, bed number, description, message code, and document type for signals that have been assigned to a specific point of care with room R15, bed B5, and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the recorded date, room, bed, description, message code, and document type for signals assigned to a point of care where the room is R15, bed is B5, and the message code is OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room number, bed number, description, message code, and document type for signals that have been assigned to a point of care with room R15, bed B5, and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type for signals associated with a specific point of care having room R15, bed B5, and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the recorded date, room number, bed number, description, message code, and document type for signals assigned to a point of care where the room is R15, bed is B5, and message code is OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the recorded date, room, bed, description, message code, and document type for signals that have been assigned to a specific point of care with room R15, bed B5, and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room number, bed number, description, message code, and document type for signals that have been assigned to a point of care with room R15, bed B5, and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded date, room, bed, description, message code, and document type for signals associated with a point of care where the room is R15, bed is B5, and the message code is OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = R15 AND bed = B5 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the message type and room for signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the message type and room associated with signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Fetch the messageType and room for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the messageType and room of signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType and room for signals that have been assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType and room associated with signals assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Fetch the message type and room for signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the message type and room of signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the message type and room for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},
    {"prompt":"Get the message type and room associated with signals assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.room AS room LIMIT 100"},

    {"prompt":"Retrieve the message code, bed, room, signal date and time for signals assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, bed, room, signal date, and time associated with signals assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the messageCode, bed, room, signalDateTime, Year, and Month for signals that have been assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message code, bed, room, signal date, and time of signals assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code, bed, room, signal date and time for signals that have been assigned to a point of care during the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, bed, room, signal date, and time associated with signals assigned to a point of care in the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the messageCode, bed, room, signalDateTime, Year, and Month for signals assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message code, bed, room, signal date, and time of signals assigned to a point of care during 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code, bed, room, signal date and time for signals that have been assigned to a point of care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, bed, room, signal date, and time associated with signals assigned to a point of care during the year 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Show the message code, bed, and room along with the signal date and time for signals assigned to a specific point of care in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code, bed, and room details, including the signal date and time, for signals that have been assigned to a particular point of care in the year 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, bed, and room information, along with the signal date and time, for signals assigned to a specific point of care during the year 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the message code, bed, and room values, along with the signal date and time, for signals that have been assigned to a designated point of care in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message code, bed, and room attributes, including the signal date and time, for signals assigned to a specific point of care in the year 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message code, bed, and room data, along with the signal date and time, for signals assigned to a particular point of care during 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the message code, bed, and room along with the signal date and time for signals assigned to a specified point of care in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message code, bed, and room details, including the signal date and time, for signals that have been assigned to a specific point of care in the year 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the message code, bed, and room information, along with the signal date and time, for signals assigned to a designated point of care during the year 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message code, bed, and room values, along with the signal date and time, for signals that have been assigned to a specific point of care in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the room, bed, description, recorded date, year, message code, and document type for signals assigned to a point of care, where the bed is B9 and the message code is OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, recorded date, year, message code, and document type for signals assigned to a specific point of care. Only include signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, recorded date, year, message code, and document type for signals that have been assigned to a point of care. Filter the results to include only signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, recorded date, year, message code, and document type for signals assigned to a particular point of care. Limit the results to signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, recorded date, year, message code, and document type for signals that have been assigned to a specific point of care. Include signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, recorded date, year, message code, and document type for signals assigned to a designated point of care. Filter the results to include signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, recorded date, year, message code, and document type for signals that have been assigned to a specific point of care. Only include signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, recorded date, year, message code, and document type for signals assigned to a particular point of care. Include only signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, recorded date, year, message code, and document type for signals assigned to a specified point of care. Limit the results to signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, recorded date, year, message code, and document type for signals that have been assigned to a specific point of care. Filter the results to include signals with bed B9 and message code OMG","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year, P.messageCode AS messageCode, P.documentType AS documentType WHERE bed = B9 AND messageCode = OMG SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the message type, bed, and room for signals assigned to a point of care, where the recorded year is 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType, bed, and room for signals assigned to a specific point of care. Only include signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the messageType, bed, and room for signals that have been assigned to a point of care. Filter the results to include only signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the messageType, bed, and room for signals assigned to a particular point of care. Limit the results to signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the messageType, bed, and room for signals that have been assigned to a specific point of care. Include signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType, bed, and room for signals assigned to a designated point of care. Filter the results to include signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType, bed, and room for signals that have been assigned to a specific point of care. Only include signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the messageType, bed, and room for signals assigned to a particular point of care. Include only signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the messageType, bed, and room for signals assigned to a specified point of care. Limit the results to signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the messageType, bed, and room for signals that have been assigned to a specific point of care. Filter the results to include signals recorded in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},

    {"prompt":"Retrieve the dataController and room for signals assigned to a point of care, where the recorded year is 2022 and the recorded month is between January and November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Get the dataController and room for signals assigned to a specific point of care. Only include signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Display the dataController and room for signals that have been assigned to a point of care. Filter the results to include only signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Show the dataController and room for signals assigned to a particular point of care. Limit the results to signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Obtain the dataController and room for signals that have been assigned to a specific point of care. Include signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Retrieve the dataController and room for signals assigned to a designated point of care. Filter the results to include signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Get the dataController and room for signals that have been assigned to a specific point of care. Only include signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Display the dataController and room for signals assigned to a particular point of care. Include only signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Show the dataController and room for signals assigned to a specified point of care. Limit the results to signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},
    {"prompt":"Obtain the dataController and room for signals that have been assigned to a specific point of care. Filter the results to include signals recorded in the year 2022 and within the months of January to November","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)>=1 AND DATE_MONTH($Date_Time_of_Signal+0)<=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room SORT_ASC room LIMIT 100"},

    {"prompt":"Retrieve the signalDateTime, room, bed, description, messageCode, and documentType for signals assigned to a point of care, where the dataController is not missing and the signalDateTime corresponds to the year 2022. Filter the results to include only signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signalDateTime, room, bed, description, messageCode, and documentType for signals that have been assigned to a point of care. Only include signals where the dataController is not missing and the signalDateTime belongs to the year 2022. Limit the results to signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the signalDateTime, room, bed, description, messageCode, and documentType for signals assigned to a designated point of care. Filter the results to include signals with a non-missing dataController and recorded in the year 2022. Include only signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the signalDateTime, room, bed, description, messageCode, and documentType for signals assigned to a specific point of care. Only include signals with a non-missing dataController and recorded in the year 2022. Filter the results to include signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the signalDateTime, room, bed, description, messageCode, and documentType for signals that have been assigned to a designated point of care. Include signals with a non-missing dataController and corresponding to the year 2022. Limit the results to signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the signalDateTime, room, bed, description, messageCode, and documentType for signals assigned to a specific point of care. Filter the results to include signals with a non-missing dataController and recorded in the year 2022. Include only signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signalDateTime, room, bed, description, messageCode, and documentType for signals that have been assigned to a designated point of care. Only include signals with a non-missing dataController and recorded in the year 2022. Limit the results to signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the signalDateTime, room, bed, description, messageCode, and documentType for signals assigned to a specific point of care. Include signals with a non-missing dataController and corresponding to the year 2022. Filter the results to include signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the signalDateTime, room, bed, description, messageCode, and documentType for signals assigned to a designated point of care. Only include signals with a non-missing dataController and recorded in the year 2022. Include only signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the signalDateTime, room, bed, description, messageCode, and documentType for signals that have been assigned to a specific point of care. Filter the results to include signals with a non-missing dataController and recorded in the year 2022. Limit the results to signals with a non-missing documentType and assigned to room R9","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the dataController and room information for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Get the dataController and room details for signals that have been assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Show the dataController and room information for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the dataController and room details for signals assigned to a designated point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Display the dataController and room information for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the dataController and room details for signals that have been assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Get the dataController and room information for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Show the dataController and room details for signals assigned to a designated point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the dataController and room information for signals that have been assigned to a point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Display the dataController and room details for signals that have been assigned to a specific point of care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care where the document type is not empty and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care with a valid document type and room R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care when the document type is available and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care where the document type is not null and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care with a non-empty document type and the room as R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care where the document type is not missing and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care with a document type present and the room designated as R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care when the document type is not blank and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care where the document type is not unspecified and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the signal date and time, room, bed, description, message code, and document type for signals assigned to Point of Care with a defined document type and the room specified as R9","completion":"S=>(@P Signal:*{dataController !~ NA AND DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the room, bed, description, message code, and document status for signals assigned to Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status for signals assigned to Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, message code, and document status of signals assigned to Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, and document status for assigned signals at Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, and document status associated with signals assigned to Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, and document status of signals that have been assigned to Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status for signals that are assigned to Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, message code, and document status for assigned signals at the Point of Care location","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, and document status for signals that have been assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, and document status for signals assigned to Point of Care in healthcare settings","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the data controller, bed, and room information for assigned signals at the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the data controller, bed, and room details for signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the data controller, bed, and room associated with signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the data controller, bed, and room information for signals that have been assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the data controller, bed, and room for signals assigned to the Point of Care location","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the data controller, bed, and room details for signals assigned to Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the data controller, bed, and room information for signals that are assigned to Point of Care in healthcare settings","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the data controller, bed, and room for assigned signals at the Point of Care facility","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the data controller, bed, and room details for signals assigned to the Point of Care location","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the data controller, bed, and room associated with assigned signals at the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room LIMIT 100"},

    {"prompt":"Retrieve the message codes and room numbers along with the recorded dates for signals assigned to the Point of Care, where the year is 2022 and the month is November","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message codes and room information for signals assigned to the Point of Care, specifically in November 2022, along with their recorded dates","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the message codes, room numbers, and recorded dates for signals assigned to the Point of Care in November 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message codes, room details, and recorded dates for signals assigned to the Point of Care, limited to November 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the message codes, room numbers, and recorded dates associated with signals assigned to the Point of Care during November 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the recorded dates, message codes, and room information for signals assigned to the Point of Care, within the month of November 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the recorded dates, message codes, and room details for signals assigned to the Point of Care during November 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the recorded dates, message codes, and room numbers for signals assigned to the Point of Care, specifically in November 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the recorded dates, message codes, and room information for signals assigned to the Point of Care, where the year is 2022 and the month is November","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the recorded dates, message codes, and room details for signals assigned to the Point of Care during November 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.room AS room ,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 AND Month = 11 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the message types, bed numbers, and room numbers for signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the types of messages, bed information, and room details for signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the message types, bed numbers, and room numbers associated with signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the types of messages, bed details, and room information for signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the message types, bed numbers, and room details for signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the types of messages, bed numbers, and room information for signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the message types, bed details, and room numbers for signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the message types, bed numbers, and room information related to signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the types of messages, bed numbers, and room details associated with signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the message types, bed numbers, and room numbers for signals assigned to the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},

    {"prompt":"Retrieve the room numbers, bed numbers, description, message codes, document statuses, signal date and time, and year for signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room details, bed information, description, message codes, document statuses, signal date and time, and year for signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room numbers, bed numbers, description, message codes, document statuses, signal date and time, and year associated with signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room details, bed numbers, description, message codes, document statuses, signal date and time, and year for signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room numbers, bed numbers, description, message codes, document statuses, signal date and time, and year for signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room details, bed numbers, description, message codes, document statuses, signal date and time, and year associated with signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room numbers, bed numbers, description, message codes, document statuses, signal date and time, and year for signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room details, bed numbers, description, message codes, document statuses, signal date and time, and year related to signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room numbers, bed numbers, description, message codes, document statuses, signal date and time, and year associated with signals assigned to the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    
    {"prompt":"Retrieve the message codes, bed numbers, room numbers, recorded dates, year, and month for signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message codes, bed numbers, room numbers, recorded dates, year, and month associated with signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the message codes, bed numbers, room numbers, recorded dates, year, and month for signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message codes, bed numbers, room numbers, recorded dates, year, and month related to signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the message codes, bed numbers, room numbers, recorded dates, year, and month for signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the message codes, bed numbers, room numbers, recorded dates, year, and month associated with signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the message codes, bed numbers, room numbers, recorded dates, year, and month for signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the message codes, bed numbers, room numbers, recorded dates, year, and month related to signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the message codes, bed numbers, room numbers, recorded dates, year, and month for signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the message codes, bed numbers, room numbers, recorded dates, year, and month associated with signals assigned to the Point of Care in 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageCode AS messageCode, D.bed AS bed, D.room AS room,P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year , MATH_EXP(\"DATE_MONTH($recordedDate+0)\") AS Month WHERE Year = 2022 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care where the document type is not empty","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care excluding empty document types","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care where the document type is not null","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care with non-empty document types","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care where the document type is not missing","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care excluding signals without a document type","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care where the document type is available","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care with a valid document type","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care excluding signals with no document type","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the signal date and time, room, bed, description, message code, and document type for assigned signals at the Point of Care where the document type is specified","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year for assigned signals at the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year associated with assigned signals at the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, message code, document status, recorded date, and year of assigned signals at the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, document status, recorded date, and year for signals that have been assigned at the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, document status, recorded date, and year for signals that have been assigned at the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and year linked to assigned signals at the Point of Care","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year for signals that have been assigned at the Point of Care facility","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, message code, document status, recorded date, and year associated with assigned signals at the Point of Care location","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, document status, recorded date, and year for assigned signals at the Point of Care setting","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, document status, recorded date, and year for signals that have been assigned at the Point of Care institution","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the room, bed, description, message code, and document status for signals with the final results document status that have been assigned at the Point of Care","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status associated with signals that have the final results document status and have been assigned at the Point of Care","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, message code, and document status of signals with the document status Final results that have been assigned at the Point of Care","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, and document status for signals that have been assigned at the Point of Care and have the document status set to Final results","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, and document status for signals with the document status Final results that have been assigned at the Point of Care","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, and document status linked to signals that have the final results document status and have been assigned at the Point of Care","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status for signals with the document status Final results that have been assigned at the Point of Care facility","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, message code, and document status associated with signals that have the final results document status and have been assigned at the Point of Care location","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, and document status for signals that have been assigned at the Point of Care and have the document status of Final results","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, and document status for signals with the document status set to Final results that have been assigned at the Point of Care institution","completion":"S=>(@P Signal:*{documentStatus = \"Final results\"})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the room, bed, description, message code, document status, recorded date, and the corresponding year for signals that have been assigned at the Point of Care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room number, bed information, description, message code, document status, recorded date, and the respective year for signals that have been assigned at the Point of Care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room and bed details, description, message code, document status, recorded date, and the corresponding year for signals that have been assigned at the Point of Care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room and bed information, description, message code, document status, recorded date, and year associated with signals that have been assigned at the Point of Care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, document status, recorded date, and the year for signals that have been assigned at the Point of Care location","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room number, bed details, description, message code, document status, recorded date, and year for signals that have been assigned at the Point of Care facility","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, document status, recorded date, and year linked to signals that have been assigned at the Point of Care","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room and bed information, description, message code, document status, recorded date, and year associated with signals that have been assigned at the Point of Care institution","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, document status, recorded date, and the corresponding year for signals that have been assigned at the Point of Care center","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room number, bed details, description, message code, document status, recorded date, and year for signals that have been assigned at the Point of Care setting","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus, P.recordedDate AS recordedDate, MATH_EXP(\"DATE_YEAR($recordedDate+0)\") AS Year SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the data controller and room for signals assigned at the Point of Care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Get the data controller and room information for signals that have been assigned at the Point of Care in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Show the data controller and room associated with signals assigned at the Point of Care during the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the data controller and room details for signals that have been assigned at the Point of Care in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Display the data controller and room for signals assigned at the Point of Care during the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the data controller and room information for signals assigned at the Point of Care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Get the data controller and room details for signals that have been assigned at the Point of Care during 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Show the data controller and room associated with signals assigned at the Point of Care in 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the data controller and room for signals that have been assigned at the Point of Care in the year 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},
    {"prompt":"Display the data controller and room information for signals assigned at the Point of Care during 2022","completion":"S=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.room AS room LIMIT 100"},

    {"prompt":"Retrieve the room, bed, description, message code, and document status for signals that have been assigned at the Point of Care, excluding those with no document status","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status associated with signals assigned at the Point of Care, excluding any signals with missing document status","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, message code, and document status for signals that have been assigned at the Point of Care, ensuring that document status is not empty","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, and document status for signals assigned at the Point of Care, filtering out signals without a valid document status","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, and document status of signals that have been assigned at the Point of Care, excluding any signals with no document status","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the room, bed, description, message code, and document status for signals assigned at the Point of Care, with the condition that document status is not empty","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the room, bed, description, message code, and document status information for signals that have been assigned at the Point of Care, excluding signals without a valid document status","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the room, bed, description, message code, and document status associated with signals assigned at the Point of Care, filtering out signals with no document status","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the room, bed, description, message code, and document status of signals that have been assigned at the Point of Care, excluding any signals with missing document status","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the room, bed, description, message code, and document status for signals assigned at the Point of Care, ensuring that document status is not empty","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentStatus AS documentStatus WHERE documentStatus !~ NA SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, room, bed, description, message code, and document type for signals that have been assigned at the Point of Care, excluding those with no data controller and with a specific room (R9)","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the date and time of the signal, room, bed, description, message code, and document type associated with signals assigned at the Point of Care, filtering out signals without a data controller and with room R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the signal date and time, room, bed, description, message code, and document type for signals that have been assigned at the Point of Care, ensuring that the data controller is not missing and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the signal date and time, room, bed, description, message code, and document type for signals assigned at the Point of Care, excluding any signals without a data controller and with room R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the signal date and time, room, bed, description, message code, and document type of signals that have been assigned at the Point of Care, excluding signals with no data controller and with room R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, room, bed, description, message code, and document type for signals assigned at the Point of Care, with the condition that the data controller is not missing and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the date and time of the signal, room, bed, description, message code, and document type information for signals that have been assigned at the Point of Care, filtering out signals with no data controller and with room R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the signal date and time, room, bed, description, message code, and document type associated with signals assigned at the Point of Care, excluding signals without a data controller and with room R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the signal date and time, room, bed, description, message code, and document type of signals that have been assigned at the Point of Care, excluding any signals with missing data controller and with room R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the signal date and time, room, bed, description, message code, and document type for signals assigned at the Point of Care, ensuring that the data controller is not missing and the room is R9","completion":"S=>(@P Signal:*{dataController !~ NA})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.signalDateTime AS signalDateTime, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE documentType !~ NA AND room = R9 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the data controller, bed, room, signal date and time, year, and month for signals that have been assigned at the Point of Care, specifically filtering for the year 2022 and the month of June","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Get the data controller, bed, room, signal date and time, year, and month associated with signals assigned at the Point of Care, limited to signals occurring in June 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Show the data controller, bed, room, signal date and time, year, and month for signals that have been assigned at the Point of Care, specifically filtering for the year 2022 and June as the month","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Obtain the data controller, bed, room, signal date and time, year, and month of signals that have been assigned at the Point of Care, restricting to signals occurring in June 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Display the data controller, bed, room, signal date and time, year, and month information for signals assigned at the Point of Care, filtering for the year 2022 and the month of June","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Retrieve the data controller, bed, room, signal date and time, year, and month for signals assigned at the Point of Care, with the condition that the year is 2022 and the month is June","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Get the data controller, bed, room, signal date and time, year, and month of signals that have been assigned at the Point of Care, specifically filtering for the year 2022 and the month of June","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Show the data controller, bed, room, signal date and time, year, and month associated with signals assigned at the Point of Care, limited to signals occurring in June 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Obtain the data controller, bed, room, signal date and time, year, and month for signals that have been assigned at the Point of Care, restricted to signals occurring in June 2022","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},
    {"prompt":"Display the data controller, bed, room, signal date and time, year, and month information for signals assigned at the Point of Care, with the requirement that the year is 2022 and the month is June","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.dataController AS dataController, D.bed AS bed, D.room AS room,P.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 LIMIT 100"},

    {"prompt":"Retrieve the name, recorded date, room, bed, and message code for signals that have been assigned at the Point of Care, specifically filtering for recorded dates in November 2022 and limited to rooms R8 and R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the name, recorded date, room, bed, and message code associated with signals assigned at the Point of Care, specifically filtering for November 2022 recorded dates and rooms R8 or R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the name, recorded date, room, bed, and message code for signals that have been assigned at the Point of Care, with a recorded date in November 2022 and restricted to rooms R8 and R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the name, recorded date, room, bed, and message code of signals that have been assigned at the Point of Care, filtering for recorded dates in November 2022 and rooms R8 or R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the name, recorded date, room, bed, and message code information for signals assigned at the Point of Care, specifically filtering for November 2022 recorded dates and rooms R8 or R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the name, recorded date, room, bed, and message code for signals assigned at the Point of Care, with the condition that the recorded date is in November 2022 and the room is either R8 or R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the name, recorded date, room, bed, and message code associated with signals assigned at the Point of Care, limited to recorded dates in November 2022 and rooms R8 or R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the name, recorded date, room, bed, and message code for signals that have been assigned at the Point of Care, specifically filtering for recorded dates in November 2022 and including only rooms R8 and R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the name, recorded date, room, bed, and message code of signals that have been assigned at the Point of Care, restricted to recorded dates in November 2022 and rooms R8 or R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the name, recorded date, room, bed, and message code information for signals assigned at the Point of Care, with the requirement that the recorded date is in November 2022 and the room is either R8 or R9","completion":"S=>(@P Signal:*{DATE_YEAR($recordedDate+0) = 2022 AND DATE_MONTH($recordedDate+0)=11})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.name AS S P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode, WHERE room = [R8,R9] SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the message type, bed, and room for signals that have been assigned at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the messageType, bed, and room associated with signals that have been assigned at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the messageType, bed, and room for signals assigned at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the messageType, bed, and room of signals that have been assigned at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the messageType, bed, and room information for signals assigned at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType, bed, and room for signals assigned at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the message type, bed, and room associated with assigned signals at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the message type, bed, and room for assigned signals at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the message type, bed, and room of signals assigned at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the message type, bed, and room information for assigned signals at the Point of Care","completion":"S{UNIQUE_SELECT}=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},

    {"prompt":"Retrieve the messageType, bed, and room for signals assigned at the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the message type, bed, and room associated with signals assigned at the Point of Care in the year 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the messageType, bed, and room for signals assigned at the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the messageType, bed, and room of signals assigned at the Point of Care during 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the messageType, bed, and room information for signals assigned at the Point of Care in the year 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Retrieve the messageType, bed, and room for signals assigned at the Point of Care during 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Get the message type, bed, and room associated with signals assigned at the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Show the message type, bed, and room for signals assigned at the Point of Care during 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Obtain the message type, bed, and room of signals assigned at the Point of Care in 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},
    {"prompt":"Display the message type, bed, and room information for signals assigned at the Point of Care during 2022","completion":"S{UNIQUE_SELECT}=>(@P Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.messageType AS messageType, D.bed AS bed, D.room AS room LIMIT 100"},

    {"prompt":"list the recordedDate, room, bed, and messageCode for signals assigned at the Point of Care in rooms R15, R8, and R9","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode WHERE room = [R15,R8,R9] SORT_DESC room LIMIT 100"},
    {"prompt":"Get the recordedDate, room, bed, and messageCode associated with signals assigned at the Point of Care in rooms R15, R8, and R9","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode WHERE room = [R15,R8,R9] SORT_DESC room LIMIT 100"},
    {"prompt":"Show the recordedDate, room, bed, and messageCode for signals assigned at the Point of Care in rooms R15, R8, and R9","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode WHERE room = [R15,R8,R9] SORT_DESC room LIMIT 100"},
    {"prompt":"Obtain the recordedDate, room, bed, and messageCode of signals assigned at the Point of Care in rooms R15, R8, and R9","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode WHERE room = [R15,R8,R9] SORT_DESC room LIMIT 100"},
    {"prompt":"Display the recordedDate, room, bed, and messageCode information for signals assigned at the Point of Care in rooms R15, R8, and R9","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode WHERE room = [R15,R8,R9] SORT_DESC room LIMIT 100"},
    {"prompt":"Retrieve the recordedDate, room, bed, and messageCode for signals assigned at the Point of Care in rooms R15, R8, and R9","completion":"S=>(@P Signal:*)-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.messageCode AS messageCode WHERE room = [R15,R8,R9] SORT_DESC room LIMIT 100"},
    
    {"prompt":"Retrieve the preferredTerm, prefix, and name for practitioners who were assistant result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Get the preferredTerm, prefix, and name associated with practitioners who served as assistant result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Show the preferredTerm, prefix, and name of practitioners who acted as assistant result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the preferredTerm, prefix, and name for practitioners who were assigned as assistant result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Display the preferredTerm, prefix, and name information for practitioners who were involved as assistant result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the preferredTerm, prefix, and name for practitioners who participated as assistant result interpreters in laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Get the preferredTerm, prefix, and name associated with practitioners who played the role of assistant result interpreters in laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Show the preferredTerm, prefix, and name of practitioners who served as assistant result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the preferredTerm, prefix, and name for practitioners who were designated as assistant result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Display the preferredTerm, prefix, and name information for practitioners who were assistant result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    
    {"prompt":"Retrieve the codingSystem, preferredTerm, familyName, and name for practitioners who were principal result interpreters for diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the codingSystem, preferredTerm, familyName, and name associated with practitioners who served as principal result interpreters for diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the codingSystem, preferredTerm, familyName, and name of practitioners who acted as principal result interpreters for diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the codingSystem, preferredTerm, familyName, and name for practitioners who were assigned as principal result interpreters for diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the codingSystem, preferredTerm, familyName, and name information for practitioners who were involved as principal result interpreters for diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the codingSystem, preferredTerm, familyName, and name for practitioners who participated as principal result interpreters in diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the codingSystem, preferredTerm, familyName, and name associated with practitioners who played the role of principal result interpreters in diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the codingSystem, preferredTerm, familyName, and name of practitioners who served as principal result interpreters for diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the codingSystem, preferredTerm, familyName, and name for practitioners who were designated as principal result interpreters for diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the codingSystem, preferredTerm, familyName, and name information for practitioners who were principal result interpreters for diagnostic procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the codingSystem, preferredTerm, familyName, and name for practitioners who were assistant result interpreters for diagnostic procedures, excluding those with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Get the codingSystem, preferredTerm, familyName, and name associated with practitioners who served as assistant result interpreters for diagnostic procedures, excluding individuals with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Show the codingSystem, preferredTerm, familyName, and name of practitioners who acted as assistant result interpreters for diagnostic procedures, excluding those with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Obtain the codingSystem, preferredTerm, familyName, and name for practitioners who were assigned as assistant result interpreters for diagnostic procedures, excluding individuals with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Display the codingSystem, preferredTerm, familyName, and name information for practitioners who were involved as assistant result interpreters for diagnostic procedures, excluding those with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Retrieve the codingSystem, preferredTerm, familyName, and name for practitioners who participated as assistant result interpreters in diagnostic procedures, excluding individuals with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Get the codingSystem, preferredTerm, familyName, and name associated with practitioners who played the role of assistant result interpreters in diagnostic procedures, excluding those with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Show the codingSystem, preferredTerm, familyName, and name of practitioners who served as assistant result interpreters for diagnostic procedures, excluding individuals with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Obtain the codingSystem, preferredTerm, familyName, and name for practitioners who were designated as assistant result interpreters for diagnostic procedures, excluding those with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Display the codingSystem, preferredTerm, familyName, and name information for practitioners who were assistant result interpreters for diagnostic procedures, excluding individuals with the family name LOUATO","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for practitioners who served as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name associated with practitioners who acted as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners who were assigned as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for practitioners who played the role of assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name information for practitioners who were assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name for practitioners who participated as assistant result interpreters in diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name associated with practitioners who were designated as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners who were involved as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for practitioners who acted as assistant result interpreters in diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name information for practitioners who served as assistant result interpreters in diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for practitioners who served as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name associated with practitioners who acted as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners who were assigned as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for practitioners who played the role of principal result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name information for practitioners who were principal result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name for practitioners who participated as principal result interpreters in laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name associated with practitioners who were designated as principal Retrieresult interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners who were involved as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for practitioners who acted as principal result interpreters in laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name information for practitioners who served as principal result interpreters in laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},

    {"prompt":"Get the message code, ethnicity, gender, family name, patient ID, message type, and patient name for female patients with the name 2616521466997176866 who are associated with signals that have a valid description","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, patient ID, message type, and patient name for patients whose gender is female and whose name is 2616521466997176866 in relation to signals that contain meaningful descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, patient ID, message type, and patient name for female patients identified as 2616521466997176866 who are associated with signals that have informative descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, patient ID, message type, and patient name for patients with a gender of female and a name of 2616521466997176866 in relation to signals that possess valid descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the message code, ethnicity, gender, family name, patient ID, message type, and patient name for female patients named 2616521466997176866 who are associated with signals that contain relevant information","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, patient ID, message type, and patient name for patients of the female gender with the name 2616521466997176866 who are associated with signals that provide specific descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, patient ID, message type, and patient name for female patients whose name is 2616521466997176866 and who are linked to signals that have meaningful descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, patient ID, message type, and patient name for patients identified as female with the name 2616521466997176866 who are associated with signals that contain valid descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, patient ID, message type, and patient name for female patients whose name is 2616521466997176866 and who are connected to signals that possess meaningful descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = \"2616521466997176866\" SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the code, first name, and name of practitioners who were the principal result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name of practitioners who served as the main interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners who acted as the primary interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners who were responsible for interpreting laboratory procedure results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name of practitioners who held the role of principal result interpreter for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, first name, and name of practitioners who were assigned as the main interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name of practitioners who were designated as the primary interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners who served as the lead result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners who were responsible for the principal interpretation of laboratory procedure results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name of practitioners who were designated as the primary result interpreters for laboratory procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name of practitioners who were the principal result interpreters for diagnostic procedures, excluding those with the name CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name of practitioners who served as the primary interpreters for diagnostic procedures, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners who acted as the main interpreters for diagnostic procedures, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of practitioners who were responsible for interpreting diagnostic procedure results, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name of practitioners who held the role of principal result interpreter for diagnostic procedures, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name of practitioners who were assigned as the main interpreters for diagnostic procedures, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name of practitioners who were designated as the primary interpreters for diagnostic procedures, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners who served as the lead result interpreters for diagnostic procedures, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of practitioners who were responsible for the principal interpretation of diagnostic procedure results, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name of practitioners who were designated as the primary result interpreters for diagnostic procedures, excluding CBCLABS","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE name != CBCLABS LIMIT 100"},

    {"prompt":"Retrieve the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients associated with signals that have a description and occurred in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients linked to signals with available descriptions and recorded in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients who are associated with signals containing valid descriptions and have a signal date in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients whose signals, with non-null descriptions, were recorded in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients connected to signals that have descriptions and occurred in the year 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients who have signals with available descriptions and were recorded in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients associated with signals that possess descriptions and have a signal date in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients with signals that include descriptions and were recorded in the year 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients whose associated signals contain non-empty descriptions and have a signal date in 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, NH ID, message type, name, signal date and time, year, and month for female patients linked to signals that satisfy the condition of having descriptions and occurring in the year 2022","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and procedure name for practitioners who served as assistant result interpreters for diagnostic procedures, excluding those with the family name LOUATO","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name of diagnostic procedures where practitioners acted as assistant result interpreters, except for those with the family name LOUATO","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and procedure name associated with practitioners who served as assistant result interpreters for diagnostic procedures, excluding those with the family name LOUATO","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of diagnostic procedures where practitioners, excluding those with the family name LOUATO acted as assistant result interpreters","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name of diagnostic procedures for practitioners who were assistant result interpreters, excluding those with the family name LOUATO","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name of diagnostic procedures where practitioners were assistant result interpreters, with the exclusion of those with the family name LOUATO","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and procedure name for practitioners who acted as assistant result interpreters for diagnostic procedures, excluding individuals with the family name LOUATO","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of diagnostic procedures associated with practitioners who served as assistant result interpreters, while excluding those with the family name LOUATO","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of diagnostic procedures where practitioners, other than those with the family name LOUATO were assistant result interpreters","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name of diagnostic procedures for practitioners who were assistant result interpreters, with the exception of those with the family name LOUATO","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},

    {"prompt":"Retrieve the signal ID, NH ID issuer, data controller from signals associated with patients where the signal date is in the year 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Get the signal ID, NH ID issuer, and data controller for signals related to patients with the signal date in 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Show the signal ID, NH ID issuer, and data controller of signals associated with patients having the signal date in 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Obtain the signal ID, NH ID issuer, and data controller from signals that are linked to patients with a signal date in 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Display the signal ID, NH ID issuer, and data controller for signals associated with patients where the signal date falls in 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Retrieve the signal ID, NH ID issuer, and data controller of signals that are associated with patients having the signal date in 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Get the signal ID, NH ID issuer, and data controller from signals linked to patients with the signal date in 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Show the signal ID, NH ID issuer, and data controller of signals associated with patients whose signal date is in 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Obtain the signal ID, NH ID issuer, and data controller for signals associated with patients with the signal date being in 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},
    {"prompt":"Display the signal ID, NH ID issuer, and data controller from signals that are associated with patients where the signal date is in the year 2022. Sort the NH ID issuer in descending order","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.dataController AS dataController SORT_DESC idIssuer_NH LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description from signals associated with female patients where the description is not empty","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description for signals linked to female patients with non-empty descriptions","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description of signals associated with female patients where the description is not null","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description from signals that are associated with female patients having non-null descriptions","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description for signals associated with female patients where the description is not NA","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description of signals that are linked to female patients with non-NA descriptions","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description from signals linked to female patients with descriptions that are not empty","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description of signals associated with female patients where the description is not NA","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description for signals associated with female patients having non-null descriptions","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, PI ID, message type, patient name, and signal description from signals that are associated with female patients where the description is not empty","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month from signals associated with female patients in the year 2022","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month for signals linked to female patients in 2022 where the description is not empty","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month of signals associated with female patients in 2022 where the description is not null","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month from signals that are associated with female patients in the year 2022 and have non-null descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month for signals associated with female patients in 2022 where the description is not NA","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month of signals linked to female patients in the year 2022 with non-NA descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month from signals linked to female patients in 2022 with non-empty descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month of signals associated with female patients in 2022 where the description is not NA","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month for signals associated with female patients in the year 2022 and have non-null descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, NH ID, message type, patient name, signal date and time, year, and month from signals that are associated with female patients in 2022 and have non-empty descriptions","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE gender = Female AND Year = 2022 SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the code, first name, and name from laboratory procedures where the practitioner served as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name associated with laboratory procedures where the practitioner acted as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of laboratory procedures with the practitioner as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name from laboratory procedures where the practitioner was involved as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name related to laboratory procedures where the practitioner served as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, first name, and name of laboratory procedures in which the practitioner acted as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name associated with laboratory procedures where the practitioner was an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name for laboratory procedures where the practitioner played the role of an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name from laboratory procedures where the practitioner was designated as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name of laboratory procedures where the practitioner was assigned as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the message code, ethnicity, gender, family name, ID, message type, and name from signals associated with female patients with specific IDs","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, ID, message type, and name of signals associated with female patients having specific IDs","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, ID, message type, and name for signals associated with female patients with particular IDs","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, ID, message type, and name from signals associated with female patients whose IDs match certain values","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, ID, message type, and name related to signals associated with female patients identified by specific IDs","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the message code, ethnicity, gender, family name, ID, message type, and name of signals associated with female patients whose IDs are [4213065983120541618, 4514060120895988062]","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, ID, message type, and name associated with signals associated with female patients whose IDs are [4213065983120541618, 4514060120895988062]","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, ID, message type, and name for signals associated with female patients identified by the specific IDs [4213065983120541618, 4514060120895988062]","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, ID, message type, and name from signals associated with female patients whose IDs match the values [4213065983120541618, 4514060120895988062]","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, ID, message type, and name of signals associated with female patients with IDs [4213065983120541618, 4514060120895988062]","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name = ['4213065983120541618','4514060120895988062'] SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the signal ID, ID issuer for patients, message code, and count of patient names associated with signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signal ID, ID issuer for patients, message code, and count of patient names from associated signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the signal ID, patient ID issuer, message code, and count of patient names associated with the signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the signal ID, ID issuer for patients, message code, and count of patient names related to signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the signal ID, patient ID issuer, message code, and count of patient names in signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the signal ID, ID issuer for patients, message code, and the total count of patient names associated with the signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signal ID, patient ID issuer, message code, and count of patient names for the associated signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the signal ID, ID issuer for patients, message code, and the count of patient names within the signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the signal ID, patient ID issuer, message code, and count of patient names from the signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the signal ID, ID issuer for patients, message code, and count of patient names within the associated signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the gender, family name, patient ID, message code, and count of names associated with signals for female patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the gender, family name, patient ID, message code, and count of names from signals associated with female patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the gender, family name, patient ID, message code, and count of names for female patients in the signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the gender, family name, patient ID, message code, and count of names related to female patients in the signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the gender, family name, patient ID, message code, and count of names associated with signals for female patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, family name, patient ID, message code, and the total count of names for female patients within the signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the gender, family name, patient ID, message code, and count of names from the signals associated with female patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the gender, family name, patient ID, message code, and count of names within the signals for female patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the gender, family name, patient ID, message code, and count of names from the signals for female patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the gender, family name, patient ID, message code, and count of names for female patients within the associated signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE gender = Female SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names associated with signals that have a non-empty description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names from signals that contain a valid description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names for signals that have a meaningful description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names associated with signals that include relevant information in the description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names for signals with a valid description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names from signals that have a non-null description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names associated with signals that contain relevant information","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names for signals that include descriptive details","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names from signals that provide useful information in the description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names for signals with a meaningful description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the signal ID, NH ID issuer, data controller, and count of associated names for signals associated with patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Get the signal ID, ID issuer for NH, data controller, and the number of names associated with signals associated with patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Show the signal ID, ID issuer (NH), data controller, and count of names for signals linked to patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Obtain the signal ID, NH ID issuer, data controller, and the count of names associated with signals associated with patient records","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Display the signal ID, NH ID issuer, data controller, and the number of names associated with patient-related signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Retrieve the signal ID, ID issuer (NH), data controller, and the count of names associated with signals linked to patient records","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Get the signal ID, NH ID issuer, data controller, and the number of associated names for signals associated with patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Show the signal ID, ID issuer for NH, data controller, and the count of names for signals linked to patients","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Obtain the signal ID, NH ID issuer, data controller, and the count of associated names for signals associated with patient records","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Display the signal ID, ID issuer (NH), data controller, and the number of names associated with patient-related signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController,COUNT(P.name) AS cnt SORT_DESC idIssuer LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of associated names for signals associated with patients, where the signal date and time is not null","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and the number of names associated with signals linked to patients, ensuring the signal date and time is not missing","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names for signals associated with patients, where the signal date and time is present","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and the count of names associated with patient-related signals, excluding cases where the signal date and time is empty","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and the number of associated names for signals associated with patient records, with the condition that the signal date and time is not null","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and the count of associated names for signals linked to patients, where the signal date and time is provided","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and the number of names associated with signals associated with patients, where the signal date and time is available","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count of names for patient-related signals, excluding cases where the signal date and time is missing","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and the count of associated names for signals associated with patient records, provided that the signal date and time is not empty","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and the number of names associated with patient-related signals, where the signal date and time is present","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner's family name is LOUATO and they were the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name associated with diagnostic procedures, specifically those where the practitioner's family name is LOUATO and they served as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner's family name is LOUATO and they acted as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name related to diagnostic procedures, specifically for cases where the practitioner's family name is LOUATO and they were the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for diagnostic procedures, with a focus on instances where the practitioner's family name is LOUATO and they served as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name associated with diagnostic procedures, where the practitioner's family name is LOUATO and they were the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for diagnostic procedures, particularly for cases where the practitioner's family name is LOUATO and they acted as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name related to diagnostic procedures, specifically when the practitioner's family name is LOUATO and they were the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for diagnostic procedures, focusing on instances where the practitioner's family name is LOUATO and they served as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name associated with diagnostic procedures, where the practitioner's family name is LOUATO and they acted as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},

    {"prompt":"Retrieve the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals associated with patients, specifically for cases where the PI issuer ID is PSM, the year is 2022, and the month is greater than 1","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Get the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals linked to patients, particularly when the PI issuer ID is PSM, the year is 2022, and the month is beyond January","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Show the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals associated with patients, where the PI issuer ID is PSM, the year is 2022, and the month is later than January","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Obtain the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals connected to patients, specifically in cases where the PI issuer ID is PSM, the year is 2022, and the month is after January","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Display the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals associated with patients, with a focus on instances where the PI issuer ID is PSM, the year is 2022, and the month is greater than January","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Retrieve the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals linked to patients, where the PI issuer ID is PSM, the year is 2022, and the month is later than 1","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Get the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals associated with patients, particularly when the PI issuer ID is PSM, the year is 2022, and the month is higher than January","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Show the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month related to signals associated with patients, specifically when the PI issuer ID is PSM, the year is 2022, and the month is after January","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Obtain the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals connected to patients, focusing on instances where the PI issuer ID is PSM, the year is 2022, and the month is beyond January","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},
    {"prompt":"Display the signal ID, PI issuer ID, message code, count of patient names, signal date and time, year, and month for signals associated with patients, where the PI issuer ID is PSM, the year is 2022, and the month is greater than 1","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_PI AS idIssuer_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE idIssuer_PI = PSM AND Year = 2022 AND Month >1 SORT_DESC Month LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, practitioner's family name, and diagnostic procedure name for cases where the family name is LOUATO among practitioners who were the principal result interpreters for diagnostic procedures","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name of diagnostic procedures for instances where the practitioner's family name is LOUATO and they served as the principal result interpreters","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of diagnostic procedures associated with practitioners whose family name is LOUATO and who acted as the principal result interpreters","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of diagnostic procedures for practitioners whose family name is LOUATO and who fulfilled the role of principal result interpreters","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name of diagnostic procedures for practitioners with the family name LOUATO who were designated as the principal result interpreters","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name of diagnostic procedures for practitioners who were the primary interpreters of results and whose family name is LOUATO","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name of diagnostic procedures for practitioners identified by the family name LOUATO and serving as the main result interpreters","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of diagnostic procedures for practitioners whose family name is LOUATO and who played the role of principal result interpreters","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of diagnostic procedures for practitioners whose family name is LOUATO and who were assigned as the main result interpreters","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name of diagnostic procedures for practitioners with the family name LOUATO who were the primary result interpreters","completion":"S{UNIQUE}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients associated with signals that have a non-empty description","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients who are linked to signals with a description that is not null","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients associated with signals that have a description other than NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients who are connected to signals with a non-null description","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients associated with signals that have a description that is not NA","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients who have an association with signals that include a valid description","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients linked to signals that have a non-null description","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients associated with signals that have a description that is not empty","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients who have a connection to signals with a description that is not null","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, patient ID, message type, name, and description for female patients who are associated with signals that have a non-empty description","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI D.messageType AS messageType, P.name AS name, D.description AS description WHERE gender = Female SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the code, first name, and name of practitioners who have served as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name of practitioners who have worked as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners involved as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners who have acted as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name of practitioners who have been assistants in interpreting results for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, first name, and name of practitioners who have performed the role of assistant result interpreter for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name of practitioners who have been assigned as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners who have served as assistants in interpreting results for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners who have assisted in interpreting results for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name of practitioners who have been result interpreter assistants for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name of practitioners who have served as assistant result interpreters for laboratory procedures, excluding those with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name of practitioners who have worked as assistant result interpreters for laboratory procedures, excluding individuals with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners involved as assistant result interpreters for laboratory procedures, excluding those with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of practitioners who have acted as assistant result interpreters for laboratory procedures, excluding individuals with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name of practitioners who have been assistants in interpreting results for laboratory procedures, excluding those with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name of practitioners who have performed the role of assistant result interpreter for laboratory procedures, excluding individuals with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name of practitioners who have been assigned as assistant result interpreters for laboratory procedures, excluding those with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners who have served as assistants in interpreting results for laboratory procedures, excluding individuals with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of practitioners who have assisted in interpreting results for laboratory procedures, excluding those with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name of practitioners who have been result interpreter assistants for laboratory procedures, excluding individuals with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},

    {"prompt":"Retrieve the signal ID, issuing ID, and data controller associated with patients and their signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Get the signal ID, issuer ID, and data controller of patients associated with signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Show the signal ID, issuer ID, and data controller linked to patients and their signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Obtain the signal ID, issuing ID, and data controller of patients associated with signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Display the signal ID, issuer ID, and data controller associated with patients and their signal data","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Retrieve the signal ID, issuing ID, and data controller of patients in relation to signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Get the signal ID, issuer ID, and data controller associated with patients and their signal records","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Show the signal ID, issuer ID, and data controller associated with patients and their signal information","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Obtain the signal ID, issuing ID, and data controller of patients in relation to signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Display the signal ID, issuer ID, and data controller linked to patients and their signal data management","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},

    {"prompt":"Retrieve the signal ID, ID type, message code, and count of patients associated with signals, sorted in descending order based on the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Get the signal ID, identification type, message code, and count of patients linked to signals, sorted in descending order by the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Show the signal ID, ID type, message code, and count of patients associated with signals, sorted in descending order according to the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Obtain the signal ID, type of identification, message code, and count of patients associated with signals, sorted in descending order based on the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Display the signal ID, ID type, message code, and count of patients in relation to signals, sorted in descending order by the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Retrieve the signal ID, ID type, message code, and count of patients associated with signal data, sorted in descending order according to the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Get the signal ID, type of ID, message code, and count of patients associated with signals, sorted in descending order based on the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Show the signal ID, ID type, message code, and count of patients linked to signals, sorted in descending order by the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Obtain the signal ID, identification type, message code, and count of patients associated with signals, sorted in descending order according to the ID type","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Display the signal ID, ID type, message code, and count of patients associated with signals, sorted in descending order based on the type of identification","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, practitioner's family name, and laboratory procedure name where the practitioner was the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name of the practitioner, and name of the laboratory procedure where the practitioner acted as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name of the practitioner, and name of the laboratory procedure for cases where the practitioner served as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, practitioner's family name, and name of the laboratory procedure associated with cases where the practitioner held the role of principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name of the practitioner, and name of the laboratory procedure attributed to cases where the practitioner was the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, practitioner's last name, and name of the laboratory procedure in situations where the practitioner served as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name of the practitioner, and name of the laboratory procedure related to instances where the practitioner acted as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name of the practitioner, and name of the laboratory procedure associated with the practitioner's role as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, practitioner's family name, and name of the laboratory procedure for cases where the practitioner was designated as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name of the practitioner, and name of the laboratory procedure in situations where the practitioner held the role of principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the gender, family name, NH ID, message code, and count of names for patients associated with signals in the year 2022, where the NH ID is not null and the gender is female","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the gender, family name, NH ID, message code, and count of names for female patients associated with signals in 2022, excluding cases where the NH ID is missing","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the gender, family name, NH ID, message code, and count of names for female patients associated with signals in the year 2022, provided that the NH ID is available","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the gender, family name, NH ID, message code, and count of names for female patients associated with signals in 2022, excluding instances where the NH ID is undefined","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the gender, family name, NH ID, message code, and count of names for female patients associated with signals in the year 2022, ensuring that the NH ID is present","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, family name, NH ID, message code, and count of names for female patients linked to signals in 2022, excluding cases with missing NH IDs","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the gender, family name, NH ID, message code, and count of names for patients of female gender associated with signals in 2022, where the NH ID is not empty","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the gender, family name, NH ID, message code, and count of names for female patients associated with signals in the year 2022, provided that the NH ID is not null","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the gender, family name, NH ID, message code, and count of names for female patients associated with signals in 2022, excluding cases where the NH ID is undefined","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the gender, family name, NH ID, message code, and count of names for female patients associated with signals in the year 2022, ensuring that the NH ID is available","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA AND gender = Female SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients associated with signals in June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients linked to signals specifically in June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Show the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients associated with signals that occurred in June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients whose signals were recorded in June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Display the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients associated with signals during the month of June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Retrieve the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients whose signals were recorded in June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients associated with signals that occurred in June of the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Show the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients linked to signals specifically in June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients whose signals were recorded in June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},
    {"prompt":"Display the signal ID, NH ID issuer, message code, count of names, signal date and time, year, and month for patients associated with signals during June 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt, D.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE Year = 2022 AND Month = 6 SORT_DESC signalId LIMIT 100"},

    {"prompt":"Retrieve the preferred term, prefix, and name of practitioners who were assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Get the preferred term, prefix, and name of practitioners who served as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Show the preferred term, prefix, and name of practitioners who acted as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the preferred term, prefix, and name of practitioners who were assigned as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Display the preferred term, prefix, and name of practitioners who fulfilled the role of assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the preferred term, prefix, and name of practitioners involved as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Get the preferred term, prefix, and name of practitioners who were designated as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Show the preferred term, prefix, and name of practitioners who played the role of assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the preferred term, prefix, and name of practitioners who were responsible for assisting in result interpretation for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Display the preferred term, prefix, and name of practitioners who were appointed as assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the signal ID, family name, NH ID, message code, and count of patients associated with signals where the NH ID is not null","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, family name, NH ID, message code, and count of patients who have an association with signals and a non-null NH ID","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Show the signal ID, family name, NH ID, message code, and count of patients linked to signals where the NH ID is present","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, family name, NH ID, message code, and count of patients associated with signals that have a valid NH ID","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Display the signal ID, family name, NH ID, message code, and count of patients who are connected to signals and have a non-empty NH ID","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Retrieve the signal ID, family name, NH ID, message code, and count of patients whose association with signals includes a valid NH ID","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, family name, NH ID, message code, and count of patients associated with signals and having a NH ID that is not empty","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Show the signal ID, family name, NH ID, message code, and count of patients linked to signals with a non-null NH ID","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, family name, NH ID, message code, and count of patients who are associated with signals and have a valid NH ID","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},
    {"prompt":"Display the signal ID, family name, NH ID, message code, and count of patients whose association with signals includes a non-null NH ID","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_NH AS id_NH, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_NH !~ NA SORT_DESC signalId LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients who are associated with signals, excluding those with a signal date in 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients connected to signals, with a non-null signal date and not in the year 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients associated with signals where the signal date is valid and not in 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients whose association with signals includes a valid signal date that is not in 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients linked to signals, excluding those with a signal date in 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients who have an association with signals, excluding those with a signal date in the year 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients connected to signals with a non-null signal date and not in 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients associated with signals where the signal date is valid and not equal to 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients whose association with signals includes a non-null signal date that is not in 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, NH ID, message type, name, description, and HL7 message version for patients linked to signals with a valid signal date, excluding those in the year 2022","completion":"S=>(@P Patient:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},

    {"prompt":"Retrieve the preferred term, prefix, and name for laboratory procedures where practitioners served as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Get the preferred term, prefix, and name for laboratory procedures with practitioners acting as the main result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Show the preferred term, prefix, and name for laboratory procedures where practitioners were the primary result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the preferred term, prefix, and name for laboratory procedures where practitioners held the role of principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Display the preferred term, prefix, and name for laboratory procedures in which practitioners were the main interpreters of results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the preferred term, prefix, and name for laboratory procedures where practitioners acted as the primary interpreters of results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Get the preferred term, prefix, and name for laboratory procedures where practitioners were designated as the principal result interpreters","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Show the preferred term, prefix, and name for laboratory procedures with practitioners as the primary interpreters of results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the preferred term, prefix, and name for laboratory procedures where practitioners served as the principal interpreters of results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Display the preferred term, prefix, and name for laboratory procedures in which practitioners acted as the main result interpreters","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the diagnostic procedure code, first name, and name of practitioners who served as assistant result interpreters","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name of practitioners who acted as assistant interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners who were assistant result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners who served as assistants in interpreting diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the diagnostic procedure code, first name, and name of practitioners who worked as assistant interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, first name, and name of practitioners who played the role of assistant result interpreters in diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name of practitioners who were assistants in interpreting diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the diagnostic procedure code, first name, and name of practitioners who served as assistant interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners who acted as assistant result interpreters in diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name of practitioners who assisted in interpreting diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the signal ID, ID type, message code, and count of patients associated with signals in the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Get the signal ID, ID type, message code, and count of patients linked to signals from the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Show the signal ID, ID type, message code, and count of patients associated with signals in 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Obtain the signal ID, ID type, message code, and count of patients who are associated with signals from the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Display the signal ID, ID type, message code, and count of patients related to signals in the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Retrieve the signal ID, ID type, message code, and count of patients associated with signals that occurred in 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Get the signal ID, ID type, message code, and count of patients linked to signals during the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Show the signal ID, ID type, message code, and count of patients associated with signals in the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Obtain the signal ID, ID type, message code, and count of patients who are associated with signals in 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},
    {"prompt":"Display the signal ID, ID type, message code, and count of patients related to signals occurring in 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{DATE_YEAR($signalDateTime+0) = 2022});RETURN P.signalId AS signalId, P.idType AS idType, D.messageCode AS messageCode, COUNT(P.name) AS cnt SORT_DESC idType LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for practitioners who served as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name of practitioners who acted as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners who were the principal result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of practitioners involved as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for practitioners assigned as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name of practitioners who fulfilled the role of principal result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for practitioners responsible as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name of practitioners designated as principal result interpreters for laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name of practitioners who served as principal result interpreters in laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for practitioners who acted as principal result interpreters in laboratory procedures","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the code, first name, and name for practitioners who served as principal result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name of practitioners who acted as principal result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners who were the principal result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners involved as principal result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name for practitioners assigned as principal result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, first name, and name of practitioners who fulfilled the role of principal result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name for practitioners responsible as principal result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners designated as principal result interpreters for diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners who served as principal result interpreters in diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name for practitioners who acted as principal result interpreters in diagnostic procedures","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the code, first name, and name for practitioners who served as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name of practitioners who acted as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners who were the assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners involved as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name for practitioners assigned as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, first name, and name of practitioners who fulfilled the role of assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, first name, and name for practitioners responsible as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, first name, and name of practitioners designated as assistant result interpreters for laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, first name, and name of practitioners who served as assistant result interpreters in laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, first name, and name for practitioners who acted as assistant result interpreters in laboratory procedures","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.code AS code, P.firstName AS firstName, P.name AS name SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the signal ID, family name, patient ID, message code, and count for signals associated with patients whose patient ID is 9667273397","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, family name, patient ID, message code, and count for patients associated with signals where the patient ID is 9667273397","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Show the signal ID, family name, patient ID, message code, and count for patients linked to signals with the patient ID 9667273397","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, family name, patient ID, message code, and count for signals associated with patients having the patient ID 9667273397","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Display the signal ID, family name, patient ID, message code, and count for patients whose patient ID is 9667273397 and are associated with signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Retrieve the signal ID, family name, patient ID, message code, and count for signals associated with patients identified by the patient ID 9667273397","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Get the signal ID, family name, patient ID, message code, and count for patients whose patient ID is 9667273397 and are associated with signals","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Show the signal ID, family name, patient ID, message code, and count for patients associated with signals where the patient ID matches 9667273397","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Obtain the signal ID, family name, patient ID, message code, and count for signals associated with patients whose patient ID matches 9667273397","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},
    {"prompt":"Display the signal ID, family name, patient ID, message code, and count for patients linked to signals with the patient ID 9667273397","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.familyName AS familyName, P.id_PI AS id_PI, D.messageCode AS messageCode, COUNT(P.name) AS cnt WHERE id_PI = \"9667273397\" SORT_DESC signalId LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for laboratory procedures where the family name is LOUATO and the practitioner was the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for laboratory procedures where the practitioner with the family name LOUATO served as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for laboratory procedures where the family name matches LOUATO and the practitioner was responsible as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for laboratory procedures where the principal result interpreter's family name is LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for laboratory procedures where the family name of the principal result interpreter is LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name for laboratory procedures where the practitioner with the family name LOUATO acted as the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for laboratory procedures where the family name is LOUATO and the practitioner held the role of the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for laboratory procedures where the family name corresponds to LOUATO and the practitioner was the principal result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for laboratory procedures where the principal result interpreter's family name is LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for laboratory procedures where the family name of the principal result interpreter is LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName = LOUATO LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for laboratory procedures where the practitioner served as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for laboratory procedures where the practitioner acted as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for laboratory procedures where the practitioner was an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for laboratory procedures where the practitioner worked as an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for laboratory procedures where the practitioner's role was an assistant result interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name for laboratory procedures where the practitioner served as a result interpreter assistant","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for laboratory procedures where the practitioner functioned as an assistant interpreter for results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for laboratory procedures where the practitioner was assigned as an assistant interpreter for results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for laboratory procedures where the practitioner acted as a secondary interpreter","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for laboratory procedures where the practitioner's role was an assistant in interpreting results","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D LaboratoryProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals associated with patients in 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals associated with patients in the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals related to patients in 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals associated with patients during 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals linked to patients in the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals associated with patients where the signal date is in 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals associated with patients with a signal date in 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals tied to patients during the year 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals associated with patients where the signal year is 2022","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, ID type, message type, name, description, HL7 message version, and count for signals associated with patients in 2022, excluding any signals without a description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA AND DATE_YEAR($signalDateTime+0) = 2022});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.idType AS idType, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion, COUNT(P.name) AS cnt WHERE signalDateTime !~ NA SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals associated with patients, excluding signals with no description and missing signal date","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals linked to patients, where the signal date is present and descriptions are available","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals associated with patients, filtering out signals without descriptions and missing signal dates","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals tied to patients, excluding signals without descriptions and with no signal date provided","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals associated with patients, where the signal date is available and descriptions are provided","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Retrieve the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals associated with patients, excluding signals with missing signal date and no description","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Get the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals linked to patients, where the signal date is not null and descriptions are present","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Show the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals associated with patients, filtering out signals with no description and signal date missing","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Obtain the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals tied to patients, excluding signals lacking descriptions and with no signal date provided","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},
    {"prompt":"Display the signal date and time, ethnicity, gender, family name, patient ID, message type, name, description, HL7 message version for signals associated with patients, where the signal date is present and descriptions are available, and excluding signals without signal date information","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.signalDateTime AS signalDateTime, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_PI AS id_PI, D.messageType AS messageType, P.name AS name, D.description AS description, D.hl7MessageVersion AS hl7MessageVersion WHERE signalDateTime !~ NA LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for diagnostic procedures where the assistant result interpreter practitioner is involved, excluding those with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for diagnostic procedures where the assisting result interpreter practitioner is assigned, filtering out cases where the family name is not LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for diagnostic procedures where the assistant result interpreter practitioner is associated, excluding instances with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for diagnostic procedures where the result interpreter practitioner assistant is involved, excluding those with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner acted as an assistant result interpreter, excluding cases where the family name is LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner served as an assistant result interpreter, filtering out instances with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner acted as an assistant result interpreter, excluding those with the family name LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for diagnostic procedures where the assistant result interpreter practitioner is assigned, filtering out cases where the family name is not equal to LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for diagnostic procedures where the assistant result interpreter practitioner is involved, excluding instances where the family name is LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for diagnostic procedures where the assisting result interpreter practitioner is associated, excluding cases where the family name is LOUATO","completion":"S=>(@P Practitioner:*)-[@r1 WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name WHERE familyName != LOUATO LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner was the principal result interpreter","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner served as the primary result interpreter","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner acted as the main result interpreter","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner was responsible for interpreting the results","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner held the role of principal result interpreter","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner was the primary interpreter of results","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner was designated as the principal result interpreter","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner was assigned as the primary result interpreter","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner was the main interpreter of results","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for diagnostic procedures where the practitioner acted as the main interpreter for the results","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the message code, ethnicity, gender, family name, NH ID, message type, and name for signals associated with female patients, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, NH ID, message type, and name for signals linked to female patients, excluding a particular name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, NH ID, message type, and name for signals associated with females, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, NH ID, message type, and name for signals that are related to female patients, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, NH ID, message type, and name for signals associated with females, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Retrieve the message code, ethnicity, gender, family name, NH ID, message type, and name for signals that are connected to female patients, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Get the message code, ethnicity, gender, family name, NH ID, message type, and name for signals associated with female individuals, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Show the message code, ethnicity, gender, family name, NH ID, message type, and name for signals linked to female subjects, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Obtain the message code, ethnicity, gender, family name, NH ID, message type, and name for signals that are associated with females, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},
    {"prompt":"Display the message code, ethnicity, gender, family name, NH ID, message type, and name for signals related to female patients, excluding a specific name","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*{description !~ NA});RETURN D.messageCode AS messageCode, P.ethnicity AS ethnicity, P.gender AS gender, P.familyName AS familyName, P.id_NH AS id_NH, D.messageType AS messageType, P.name AS name WHERE gender = Female AND name != \"6282113217279526447\" SORT_DESC gender LIMIT 100"},

    {"prompt":"Retrieve the coding system, preferred term, family name, and name for diagnostic procedures where practitioners served as the principal result interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for diagnostic procedures with practitioners acting as the main result interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for diagnostic procedures where practitioners were the primary interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for diagnostic procedures that were interpreted by practitioners as the principal interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for diagnostic procedures where practitioners held the role of the principal result interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the coding system, preferred term, family name, and name for diagnostic procedures that had practitioners as the main interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Get the coding system, preferred term, family name, and name for diagnostic procedures where practitioners were the principal interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Show the coding system, preferred term, family name, and name for diagnostic procedures that were interpreted by practitioners in the principal result interpreter role ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the coding system, preferred term, family name, and name for diagnostic procedures with practitioners serving as the principal result interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},
    {"prompt":"Display the coding system, preferred term, family name, and name for diagnostic procedures where practitioners acted as the main interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.codingSystem AS codingSystem, D.preferredTerm AS preferredTerm, P.familyName AS familyName, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the preferred term, prefix, and name for diagnostic procedures where practitioners served as the primary result interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Get the preferred term, prefix, and name for diagnostic procedures with practitioners acting as the main interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Show the preferred term, prefix, and name for diagnostic procedures where practitioners were the principal interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the preferred term, prefix, and name for diagnostic procedures that were interpreted by practitioners as the principal result interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Display the preferred term, prefix, and name for diagnostic procedures where practitioners held the role of the principal result interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Retrieve the preferred term, prefix, and name for diagnostic procedures that had practitioners as the main interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Get the preferred term, prefix, and name for diagnostic procedures where practitioners were the primary interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Show the preferred term, prefix, and name for diagnostic procedures that were interpreted by practitioners in the principal result interpreter role ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Obtain the preferred term, prefix, and name for diagnostic procedures with practitioners serving as the principal result interpreters ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},
    {"prompt":"Display the preferred term, prefix, and name for diagnostic procedures where practitioners acted as the main interpreters of the results ","completion":"S=>(@P Practitioner:*)-[@r1 WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@D DiagnosticProcedure:*);RETURN D.preferredTerm AS preferredTerm, P.prefix AS prefix, D.name AS name LIMIT 100"},

    {"prompt":"Retrieve the code, preferred term, coding system, data controller, and message type for active problems associated with a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, data controller, and message type for active problem entries linked to a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, preferred term, coding system, data controller, and message type for active problems related to a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, coding system, data controller, and message type for active problem records associated with a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, preferred term, coding system, data controller, and message type for active problems connected to a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, data controller, and message type for active problem entries that are associated with a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, data controller, and message type for active problems that are linked to a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, preferred term, coding system, data controller, and message type for active problem records that are related to a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, coding system, data controller, and message type for active problem entries linked with a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, preferred term, coding system, data controller, and message type for active problems that are associated with a signal ","completion":"S{UNIQUE_SELECT}=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},

    {"prompt":"Get the code, preferred term, coding system, data controller, and message type for active problems associated with a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, data controller, and message type for active issues linked to a signal","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, preferred term, coding system, data controller, and message type for active conditions related to a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, coding system, data controller, and message type for active concerns associated with a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, preferred term, coding system, data controller, and message type for active disorders connected to a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, data controller, and message type for active ailments that are linked to a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, data controller, and message type for active diagnoses that are associated with a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, preferred term, coding system, data controller, and message type for active medical problems related to a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, coding system, data controller, and message type for active health issues linked with a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, preferred term, coding system, data controller, and message type for active illnesses associated with a signal ","completion":"s=>(@S Signal)-[@r1 *]->(@A ActiveProblem:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, S.dataController AS dataController, S.messageType AS messageType SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the signal ID, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with a signal, where the document type is Clinical Letter and the preferred term is Appendectomy ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Get the signal ID, preferred term, document type, message type, signal name, and procedure name for procedures related to therapy or prevention that are associated with a signal, specifically for clinical letters and appendectomies ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Show the signal ID, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures connected to a signal. Only include entries with a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Obtain the signal ID, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures linked to a signal. Limit the results to entries with a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Retrieve the signal ID, preferred term, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and a signal. Only include results where the document type is Clinical Letter and the preferred term is Appendectomy ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Get the signal ID, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are connected to a signal. Filter the results to include only entries with a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Show the signal ID, preferred term, document type, message type, signal name, and procedure name for procedures related to therapy or prevention in association with a signal. This applies specifically to clinical letters and appendectomies ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Obtain the signal ID, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures linked with a signal. The results should include only entries with a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Retrieve the signal ID, preferred term, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and a signal. Specifically, include entries with a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Get the signal ID, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are connected to a signal. Ensure that the document type is Clinical Letter and the preferred term is Appendectomy ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},

    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with a signal. Only include entries with a document type of Clinical Letter and a message type of T02. Sort the results in descending order based on the procedure code and limit the output to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, and procedure name for procedures related to therapy or prevention that are associated with a signal. Specifically, include only clinical letters with a message type of T02. Arrange the results in descending order based on the procedure code and limit the output to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Show the signal ID, procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures connected to a signal. Limit the results to entries with a document type of Clinical Letter and a message type of T02. Sort the output in descending order based on the procedure code and display up to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the signal ID, procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures linked to a signal. Include only clinical letters with a message type of T02. Arrange the results in descending order based on the procedure code and limit the output to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and a signal. Only include results where the document type is Clinical Letter and the message type is T02. Sort the output in descending order based on the procedure code and limit it to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are connected to a signal. Filter the results to include only entries with a document type of Clinical Letter and a message type of T02. Arrange the output in descending order based on the procedure code and show up to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Show the signal ID, procedure code, document type, message type, signal name, and procedure name for procedures related to therapy or prevention in association with a signal. This applies specifically to clinical letters with a message type of T02. Sort the results in descending order based on the procedure code and limit the output to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the signal ID, procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures linked with a signal. The results should include only entries with a document type of Clinical Letter and a message type of T02. Sort the output in descending order based on the procedure code and restrict it to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and a signal. Specifically, include entries with a document type of Clinical Letter and a message type of T02. Sort the output in descending order based on the procedure code and limit it to 100 entries","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are connected to a signal. Ensure that the document type is Clinical Letter and the message type is T02. Sort the results in descending order based on the procedure code and display up to 100 entries ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND messageType = T02 SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for therapeutic or preventive procedures associated with a signal. Only include entries with a document type of Clinical Letter or Chemotherapy and a year of 2022. Sort the results in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for procedures related to therapy or prevention that are associated with a signal. Specifically, include only entries with a document type of Clinical Letter or Chemotherapy and a year of 2022. Arrange the results in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for therapeutic or preventive procedures connected to a signal. Limit the results to entries with a document type of Clinical Letter or Chemotherapy and a year of 2022. Sort the output in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Obtain the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for therapeutic or preventive procedures linked to a signal. Include only clinical letters or chemotherapy records from the year 2022. Arrange the results in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for procedures associated with therapy or prevention and a signal. Only include results where the document type is Clinical Letter or Chemotherapy and the year is 2022. Sort the output in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for therapeutic or preventive procedures that are connected to a signal. Filter the results to include only entries with a document type of Clinical Letter or Chemotherapy and a year of 2022. Arrange the output in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for procedures related to therapy or prevention in association with a signal. This applies specifically to clinical letters or chemotherapy records from the year 2022. Sort the results in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Obtain the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for therapeutic or preventive procedures linked with a signal. The results should include only entries with a document type of Clinical Letter or Chemotherapy and a year of 2022. Sort the output in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for procedures associated with therapy or prevention and a signal. Specifically, include entries with a document type of Clinical Letter or Chemotherapy and a year of 2022. Sort the output in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, count of signal names, signal date and time, year, and month for therapeutic or preventive procedures that are connected to a signal. Ensure that the document type is Clinical Letter or Chemotherapy and the year is 2022. Sort the results in ascending order based on the signal name ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},

    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for therapeutic or preventive procedures associated with a signal from the year 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for procedures related to therapy or prevention that are connected to a signal in 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the preferred term, data controller, message code, signal name, and procedure name for therapeutic or preventive procedures associated with a signal in 2022","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the preferred term, data controller, message code, signal name, and procedure name for procedures linked to therapy or prevention and a signal in 2022","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for therapeutic or preventive procedures that are associated with a signal in the year 2022","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for procedures associated with therapy or prevention and a signal in 2022","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the preferred term, data controller, message code, signal name, and procedure name for therapeutic or preventive procedures connected to a signal in 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the preferred term, data controller, message code, signal name, and procedure name for procedures linked with therapy or prevention and a signal from the year 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for therapeutic or preventive procedures that are connected to a signal in 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for procedures associated with therapy or prevention and a signal recorded in 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for therapeutic or preventive procedures associated with signals of document types Clinical Letter or Chemotherapy in the year 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for procedures related to therapy or prevention that are connected to signals of document types Clinical Letter or Chemotherapy in 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for therapeutic or preventive procedures associated with signals of document types Clinical Letter or Chemotherapy in 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Obtain the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for procedures linked to therapy or prevention and signals of document types Clinical Letter or Chemotherapy recorded in 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for therapeutic or preventive procedures that are associated with signals of document types Clinical Letter or Chemotherapy in the year 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for procedures associated with therapy or prevention and signals of document types Clinical Letter or Chemotherapy in 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for therapeutic or preventive procedures connected to signals of document types Clinical Letter or Chemotherapy in 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Obtain the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for procedures linked with therapy or prevention and signals of document types Clinical Letter or Chemotherapy from the year 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for therapeutic or preventive procedures that are connected to signals of document types Clinical Letter or Chemotherapy in 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month for procedures associated with therapy or prevention and signals of document types Clinical Letter or Chemotherapy recorded in 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 SORT_DESC Year LIMIT 100"},

    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for procedures related to therapy or prevention that are connected to signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Obtain the data controller, preferred term, document type, message type, signal name, and procedure name for procedures linked to therapy or prevention and signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are associated with signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures connected to signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Obtain the data controller, preferred term, document type, message type, signal name, and procedure name for procedures linked with therapy or prevention and signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are connected to signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and signals of document types Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},

    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with signals of document types Clinical Letter or Chemotherapy considering the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for procedures related to therapy or prevention that are connected to signals of document types Clinical Letter or Chemotherapy taking into account the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with signals of document types Clinical Letter or Chemotherapy in consideration of the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Obtain the data controller, preferred term, document type, message type, signal name, and procedure name for procedures linked to therapy or prevention and signals of document types Clinical Letter or Chemotherapy with respect to the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are associated with signals of document types Clinical Letter or Chemotherapy taking into account the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and signals of document types Clinical Letter or Chemotherapy considering the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures connected to signals of document types Clinical Letter or Chemotherapy considering the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Obtain the data controller, preferred term, document type, message type, signal name, and procedure name for procedures linked with therapy or prevention and signals of document types Clinical Letter or Chemotherapy taking into account the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are connected to signals of document types Clinical Letter or Chemotherapy considering the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and signals of document types Clinical Letter or Chemotherapy in consideration of the unique context ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},

    {"prompt":"Retrieve the procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, document type, message type, signal name, and procedure name for procedures linked to therapy or prevention that are associated with signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Show the procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, document type, message type, signal name, and procedure name for procedures that are connected to therapy or prevention and signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures linked to signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Show the procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures that are connected to signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, document type, message type, signal name, and procedure name for procedures linked to therapy or prevention and signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the procedure code, document type, message type, signal name, and procedure name for therapeutic or preventive procedures associated with signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, document type, message type, signal name, and procedure name for procedures associated with therapy or prevention and signals ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},

    {"prompt":"Count and display the number of signals associated with therapeutic or preventive procedures, along with the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Only consider signals with a document type of Clinical Letter or Chemotherapy and a year of 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the count of signals related to therapeutic or preventive procedures. Include the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Filter the results based on document types Clinical Letter or Chemotherapy and a year of 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the total count of signals associated with therapeutic or preventive procedures. Show the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Consider only signals with a document type of Clinical Letter or Chemotherapy and a year equal to 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the count of signals linked to therapeutic or preventive procedures. Display the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Filter the results based on document types Clinical Letter or Chemotherapy and a year of 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Count the number of signals associated with therapeutic or preventive procedures. Show the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Consider only signals with a document type of Clinical Letter or Chemotherapy and a year equal to 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the total count of signals related to therapeutic or preventive procedures. Include the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Filter the results based on document types Clinical Letter or Chemotherapy and a year of 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the count of signals associated with therapeutic or preventive procedures. Display the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Only consider signals with a document type of Clinical Letter or Chemotherapy and a year of 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the number of signals linked to therapeutic or preventive procedures. Show the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Filter the results based on document types Clinical Letter or Chemotherapy and a year equal to 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Count the signals associated with therapeutic or preventive procedures. Include the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Consider only signals with a document type of Clinical Letter or Chemotherapy and a year of 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the total count of signals related to therapeutic or preventive procedures. Display the data controller, preferred term, document type, message type, signal name, procedure name, signal date and time, year, and month. Filter the results based on document types Clinical Letter or Chemotherapy and a year of 2022 ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},

    {"prompt":"Display the data controller, preferred term, document type, message type, signal name, procedure name, and the count of signals associated with therapeutic or preventive procedures. Consider only signals with a document type of Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, and the total number of signals linked to therapeutic or preventive procedures. Filter the results based on document types Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, and the count of signals associated with therapeutic or preventive procedures. Only include signals with a document type of Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, procedure name, and the total count of signals associated with therapeutic or preventive procedures. Filter the results by document types Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the data controller, preferred term, document type, message type, signal name, procedure name, and the count of signals linked to therapeutic or preventive procedures. Consider only signals with a document type of Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, and the total number of signals associated with therapeutic or preventive procedures. Filter the results by document types Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, and the count of signals associated with therapeutic or preventive procedures. Only include signals with a document type of Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, procedure name, and the total count of signals linked to therapeutic or preventive procedures. Filter the results by document types Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the data controller, preferred term, document type, message type, signal name, procedure name, and the count of signals associated with therapeutic or preventive procedures. Consider only signals with a document type of Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, and the total number of signals linked to therapeutic or preventive procedures. Filter the results by document types Clinical Letter or Chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},

    {"prompt":"Retrieve the code, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures that occurred in the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures in the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, document type, message type, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures and have a date in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, document type, message type, signal name, and procedure name for signals related to therapeutic or preventive procedures that took place in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures that have a date in the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures occurring in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, document type, message type, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures and have a date in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, document type, message type, signal name, and procedure name for signals related to therapeutic or preventive procedures that took place in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures that occurred in the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures in the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the signal ID, preferred term, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures, excluding those that occurred in the year 2022, where the document type is Clinical Letter and the preferred term is Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Get the signal ID, preferred term, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures, excluding those from 2022, with a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Display the signal ID, preferred term, document type, message type, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures, excluding those in 2022, and have a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Show the signal ID, preferred term, document type, message type, signal name, and procedure name for signals related to therapeutic or preventive procedures, excluding those occurring in 2022, where the document type is Clinical Letter and the preferred term is Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Retrieve the signal ID, preferred term, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures, excluding those from the year 2022, that have a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Get the signal ID, preferred term, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures, excluding those in 2022, with a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Display the signal ID, preferred term, document type, message type, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures, excluding those occurring in 2022, and have a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Show the signal ID, preferred term, document type, message type, signal name, and procedure name for signals related to therapeutic or preventive procedures, excluding those from 2022, where the document type is Clinical Letter and the preferred term is Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Retrieve the signal ID, preferred term, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures, excluding those that occurred in the year 2022, where the document type is Clinical Letter and the preferred term is Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},
    {"prompt":"Get the signal ID, preferred term, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures, excluding those from 2022, with a document type of Clinical Letter and a preferred term of Appendectomy ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = \"Clinical Letter\" AND preferredTerm = Appendectomy LIMIT 100"},

    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures in the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals linked to therapeutic or preventive procedures that occurred in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the preferred term, data controller, message code, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the preferred term, data controller, message code, signal name, and procedure name for signals related to therapeutic or preventive procedures that occurred in the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures specifically in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals linked to therapeutic or preventive procedures during the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the preferred term, data controller, message code, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures and occurred in 2022","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the preferred term, data controller, message code, signal name, and procedure name for signals related to therapeutic or preventive procedures during the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures in the year 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals linked to therapeutic or preventive procedures occurring in 2022 ","completion":"s=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures, specifically in clinical letters or chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures mentioned in clinical letters or chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the data controller, preferred term, document type, message type, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures documented in clinical letters or chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, and procedure name for signals related to therapeutic or preventive procedures mentioned in clinical letters or chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures specifically documented in clinical letters or chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures recorded in clinical letters or chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the data controller, preferred term, document type, message type, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures mentioned in clinical letters or chemotherapy","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, and procedure name for signals related to therapeutic or preventive procedures documented in clinical letters or chemotherapy","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, and procedure name for signals associated with therapeutic or preventive procedures found in clinical letters or chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, and procedure name for signals linked to therapeutic or preventive procedures observed in clinical letters or chemotherapy ","completion":"s=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2 WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] SORT_ASC name1 LIMIT 100"},

    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals linked to therapeutic or preventive procedures occurring in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the preferred term, data controller, message code, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures taking place in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the preferred term, data controller, message code, signal name, and procedure name for signals related to therapeutic or preventive procedures observed in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures specifically recorded in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals linked to therapeutic or preventive procedures documented in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the preferred term, data controller, message code, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures mentioned in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the preferred term, data controller, message code, signal name, and procedure name for signals related to therapeutic or preventive procedures detected in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures found in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals linked to therapeutic or preventive procedures observed in 2022 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals associated with therapeutic or preventive procedures in 2022 and having a document type of either Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals linked to therapeutic or preventive procedures in 2022 and falling under the document types of Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals that are associated with therapeutic or preventive procedures occurring in 2022 and having a document type of either Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals related to therapeutic or preventive procedures observed in 2022 and falling into the document categories of Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals associated with therapeutic or preventive procedures specifically recorded in 2022 and having a document type of either Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals linked to therapeutic or preventive procedures documented in 2022 and falling under the document types of Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals that are associated with therapeutic or preventive procedures mentioned in 2022 and having a document type of either Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals related to therapeutic or preventive procedures detected in 2022 and falling into the document categories of Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals associated with therapeutic or preventive procedures found in 2022 and having a document type of either Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the data controller, preferred term, document type, message type, signal name, procedure name, count, signal date and time, year, and month for signals linked to therapeutic or preventive procedures observed in 2022 and falling under the document types of Clinical Letter or Chemotherapy ","completion":"s{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.dataController AS dataController, O.preferredTerm AS preferredTerm, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2,COUNT(S.name) AS cnt,S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022SORT_ASC name1 LIMIT 100"},

    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals linked to therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the preferred term, data controller, message code, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the preferred term, data controller, message code, signal name, and procedure name for signals related to therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals specifically associated with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals that are linked to therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the preferred term, data controller, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the preferred term, data controller, message code, signal name, and procedure name for signals related to therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the preferred term, data controller, message code, signal name, and procedure name for signals found in association with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the preferred term, data controller, message code, signal name, and procedure name for signals observed in connection with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.preferredTerm AS preferredTerm, S.dataController AS dataController, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals associated with clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals linked to clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals that are associated with clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals related to clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals specifically associated with clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals that are linked to clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals associated with clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals related to clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals found in association with clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, procedure name, year, and month for signals observed in connection with clinical letters or chemotherapy in 2022 and with message type T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},

    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals associated with clinical letters or chemotherapy in 2022 and with a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals linked to clinical letters or chemotherapy in 2022 and with a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals that are associated with clinical letters or chemotherapy in 2022 and have a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals related to clinical letters or chemotherapy in 2022 and with a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals specifically associated with clinical letters or chemotherapy in 2022 and having a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals that are linked to clinical letters or chemotherapy in 2022 and with a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Display the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals associated with clinical letters or chemotherapy in 2022 and having a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Show the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals related to clinical letters or chemotherapy in 2022 and with a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Retrieve the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals found in association with clinical letters or chemotherapy in 2022 and having a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},
    {"prompt":"Get the signal ID, procedure code, document type, message type, signal name, procedure name, signal date, year, and month for signals observed in connection with clinical letters or chemotherapy in 2022 and with a message type of T02 ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN S.signalId AS signalId, O.code AS code, S.documentType AS documentType, S.messageType AS messageType, S.name AS name1, O.name AS name2, S.signalDateTime AS signalDateTime, MATH_EXP(\"DATE_YEAR($signalDateTime+0)\") AS Year , MATH_EXP(\"DATE_MONTH($signalDateTime+0)\") AS Month WHERE documentType = [\"Clinical Letter\",\"Chemotherapy\"] AND Year = 2022 AND messageType = T02 SORT_ASC name1 LIMIT 100"},

    {"prompt":"Retrieve the coding system, document type, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the coding system, document type, message code, signal name, and procedure name for signals linked to therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the coding system, document type, message code, signal name, and procedure name for signals that are associated with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the coding system, document type, message code, signal name, and procedure name for signals related to therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the coding system, document type, message code, signal name, and procedure name for signals specifically associated with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the coding system, document type, message code, signal name, and procedure name for signals that are linked to therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Display the coding system, document type, message code, signal name, and procedure name for signals associated with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Show the coding system, document type, message code, signal name, and procedure name for signals related to therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the coding system, document type, message code, signal name, and procedure name for signals found in association with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the coding system, document type, message code, signal name, and procedure name for signals observed in connection with therapeutic or preventive procedures ","completion":"s=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O TherapeuticOrPreventiveProcedure:*);RETURN O.codingSystem AS codingSystem, S.documentType AS documentType, S.messageCode AS messageCode, S.name AS name1, O.name AS name2 SORT_DESC messageCode LIMIT 100"},

    {"prompt":"Retrieve the code and count of active problems, sorting them in descending order based on the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and count of active issues, arranging them in descending order of the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code and count of existing problems, with the count sorted in descending order ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code and count of active concerns, sorted in descending order based on the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and count of ongoing problems, arranging them in descending order according to the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and count of current issues, sorting them in descending order based on the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code and count of active problems, with the count arranged in descending order ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code and count of existing issues, sorted in descending order based on the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code and count of ongoing problems, sorting them in descending order according to the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code and count of active concerns, arranging them in descending order based on the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the names and count of healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the names and count of health-related tasks ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Display the names and count of healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Show the names and count of medical tasks ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the names and count of health-related activities ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the names and count of healthcare procedures ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Display the names and count of medical activities ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Show the names and count of health-related tasks ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the names and count of healthcare procedures ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the names and count of medical activities ","completion":"s{UNIQUE_SELECT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},

    {"prompt":"Fetch the names and count of health care activities ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the names and tally of health care tasks ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the names and count of medical activities ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Obtain the names and number of health care procedures ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the names and count of health-related tasks ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Fetch the names and tally of medical activities ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the names and count of health care procedures ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Obtain the names and number of health-related activities ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the names and count of medical tasks ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Fetch the names and tally of health-related procedures ","completion":"s{UNIQUE}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},

    {"prompt":"Provide all the information related to the signal associated with patient ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the details associated with the signal linked to patient with ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Fetch all the data pertaining to the signal associated with patient having ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Give me all the information regarding the signal that is connected to the patient identified by the ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the relevant data for the signal associated with patient ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Provide me with the complete details of the signal associated with the patient having ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Fetch all the information for the signal connected to the patient with ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Give me a comprehensive overview of the signal associated with patient ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the relevant details for the signal that is associated with the patient identified by the ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},
    {"prompt":"Provide a complete report of the signal linked to the patient with ID 4213065983120541618 ","completion":"S2{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:4213065983120541618);RETURN * LIMIT 100"},

    {"prompt":"Count the number of signals associated with each patient's healthcare activity ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the count of signals linked to different healthcare activities of patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Calculate the total count of signals associated with various healthcare activities of patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Determine the number of signals associated with each patient's healthcare activity ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Count how many signals are connected to different healthcare activities of patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Provide the count of signals associated with each patient's healthcare activity ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Calculate the total number of signals linked to various healthcare activities of patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Determine the count of signals associated with different healthcare activities of patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the number of signals connected to each patient's healthcare activity ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Count the total number of signals associated with the healthcare activities of patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},

    {"prompt":"Retrieve the preferred term of active problems and count the occurrences ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term for active problems and calculate the count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of active problems and their respective preferred terms ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the count of active problems and their preferred terms ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term for each active problem and count them ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the occurrence of each preferred term for active problems ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of active problems along with their preferred terms ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of preferred terms in active problems ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the count of active problems and their corresponding preferred terms. ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of active problems and their preferred terms ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Get the message codes from signals and count the occurrences ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the message codes of signals and calculate the count ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the number of occurrences for each message code in signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Determine the count of signals for each message code ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the count of signals and their respective message codes ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Calculate the occurrence of each message code in signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the number of signals and their corresponding message codes ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Determine the count of signals and their message codes ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of signals and their message codes ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the occurrences of message codes in signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},    

    {"prompt":"Get the ID type, severity, gender, sexual orientation, and count for patients who have allergies recorded in a year other than 2021 and are associated with a sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID type, severity, gender, sexual orientation, and count for patients with allergies not recorded in 2021 and associated with a sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Count the number of patients with allergies recorded in a year other than 2021, along with their ID type, severity, gender, and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Determine the count of patients with allergies not recorded in 2021, along with their ID type, severity, gender, and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the count of patients, their ID types, severity of allergies, genders, and sexual orientations, where allergies were not recorded in 2021 and are associated with a specific orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Calculate the count of patients, their ID types, severity, genders, and sexual orientations for allergies recorded in a year other than 2021 and associated with a specific orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Count the occurrences of patients with allergies not recorded in 2021, along with their ID types, severity, genders, and sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients, their ID types, severity of allergies, genders, and sexual orientations, where allergies were recorded in a year other than 2021 and associated with a specific orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Determine the count of patients, their ID types, severity, genders, and sexual orientations for allergies not recorded in 2021 and associated with a specific orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Count the number of patients, their ID types, severity of allergies, genders, and sexual orientations, where allergies were not recorded in 2021 and are associated with a specific orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the class and count of signals associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the class and count of signals that are related to healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the number of signals associated with different healthcare activities and their corresponding classes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Determine the count of signals linked to various healthcare activities based on their classes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the count and class of signals that are associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the number of signals and their respective classes that are connected to healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of signals and their classes associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Determine the count and class of signals that have associations with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the number of signals and their classes that are related to healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the count of signals and their classes associated with different healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the message code, distinct description, date, and calculate the number of days for signals controlled by psm_dev_v1_0 where the number of days is greater than zero ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Get the message code, unique description, date, and calculate the days remaining for signals managed by psm_dev_v1_0 with a positive number of days ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Retrieve the message code, distinct description, signal date, and calculate the days elapsed for signals controlled under psm_dev_v1_0 where the days are more than zero ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Get the message code, unique description, signal date, and calculate the remaining days for signals managed by psm_dev_v1_0 where the days are greater than zero ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Retrieve the message code, distinct description, date, and determine the number of days since the signal's date for signals controlled by psm_dev_v1_0 where the days are positive ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Get the message code, unique description, date, and calculate the days passed since the signal's date for signals managed by psm_dev_v1_0 with a positive number of days ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Retrieve the message code, distinct description, signal date, and calculate the days remaining since the signal's date for signals controlled under psm_dev_v1_0 where the days are greater than zero ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Get the message code, unique description, signal date, and determine the remaining days since the signal's date for signals managed by psm_dev_v1_0 with a positive number of days ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Retrieve the message code, distinct description, date, and calculate the days elapsed for signals controlled by psm_dev_v1_0 where the days are more than zero ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Get the message code, unique description, date, and calculate the days passed for signals managed by psm_dev_v1_0 with a positive number of days ","completion":"S=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.messageCode AS messageCode, DISTINCT(S.description) AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},

    {"prompt":"Retrieve the description and count the number of occurrences for signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the signal description and count how many times it appears ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the signal description and calculate the count of occurrences ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the description of signals and count how many instances there are ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the signal description and determine the total count of occurrences ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the description of signals and calculate the count of instances ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the signal description and count how many times it is present ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the description of signals and determine the count of occurrences ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the signal description and count the number of times it appears ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the description of signals and calculate the total count ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"Calculate the total number of unique signals and unique patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Determine the count of distinct signals and patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Calculate the total number of signals and patients without repetition ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Count the unique signals and patients without duplication ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Determine the count of distinct signals and individuals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Calculate the total number of signals and unique patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Count the unique occurrences of signals and patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Determine the count of distinct signals and the number of patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Calculate the total number of signals and count the unique patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Count the unique signals and determine the number of distinct patients ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},

    {"prompt":"Retrieve the unique patient information for the patient with the ID 2428329118, first name LIONEL, and last name INTERIANO, who has given consent for the consent record ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Obtain the patient's ID, first name, last name, and the status of location hiding from the consent record ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the unique patient details, including the ID, first name, last name, and whether location hiding is enabled ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Get the patient's identification number, first name, last name, and the status of location hiding from the consent record ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the unique patient information for the specified ID, first name, and last name, along with the location hiding status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Obtain the patient's ID, first name, last name, and the location hiding preference as indicated in the consent record ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the unique patient record for the specified patient ID, first name, and last name, including the location hiding information ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Get the patient's identification number, first name, last name, and the location hiding preference from the consent record ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the unique patient details, including the ID, first name, last name, and the setting for location hiding ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Obtain the patient's ID, first name, last name, and the status of location hiding based on the consent record ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {id_PI = \"2428329118\" ANDfirstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id_PI, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},

    {"prompt":"Retrieve the SCR consent to store status, message code, and message type for signals recorded in years other than 2021, associated with patients who have given consent ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the SCR consent to store preference, message code, and message type for signals recorded in years different from 2021, linked to consenting patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to store status, message code, and message type for signals that were recorded in years other than 2021, and are associated with patients who have given their consent ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the SCR consent to store preference, message code, and message type for signals recorded in years other than 2021, and associated with consenting patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to store status, message code, and message type for signals that were recorded in years other than 2021, and are linked to patients who have provided their consent ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the SCR consent to store preference, along with the message code and message type, for signals recorded in years other than 2021, and associated with patients who have given their consent ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to store status, message code, and message type for signals recorded in years other than 2021, and associated with patients who have provided their consent ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the SCR consent to store preference, message code, and message type for signals recorded in years other than 2021, and linked to consenting patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to store status, message code, and message type for signals that were recorded in years different from 2021, and are associated with patients who have given their consent ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the SCR consent to store preference, message code, and message type for signals recorded in years other than 2021, and associated with consenting patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the count of male patients who have an unknown consent status in the DCR, their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the count of male patients with an unspecified consent status in the DCR, along with their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the number of male patients who have an unknown consent status in the DCR, and gather their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the count of male patients with an undetermined consent status in the DCR, their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the total count of male patients with an unknown consent status in the DCR, and obtain their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the count of male patients who have an undisclosed consent status in the DCR, along with their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the count of male patients with an unknown consent status in the DCR, their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the number of male patients who have an unknown consent status in the DCR, and gather their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the total count of male patients with an unknown consent status in the DCR, and obtain their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Obtain the count of male patients who have an unknown consent status in the DCR, along with their gender, location hiding preference, and sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},

    {"prompt":"Retrieve the patient's ID NH, ID issuer, ID PI, date of birth, and calculate their age based on the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patient's ID NH, ID issuer, ID PI, date of birth, and determine their age using the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's ID NH, ID issuer, ID PI, date of birth, and calculate their age by considering the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the patient's ID NH, ID issuer, ID PI, date of birth, and calculate their age based on the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's ID NH, ID issuer, ID PI, date of birth, and calculate their age using the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patient's ID NH, ID issuer, ID PI, date of birth, and determine their age by considering the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's ID NH, ID issuer, ID PI, date of birth, and calculate their age based on the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the patient's ID NH, ID issuer, ID PI, date of birth, and calculate their age using the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's ID NH, ID issuer, ID PI, date of birth, and calculate their age by considering the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patient's ID NH, ID issuer, ID PI, date of birth, and determine their age based on the current date ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the patient class and count of signals associated with outpatient healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals related to outpatient healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities for outpatients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals linked to outpatient healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities for outpatients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals related to outpatient healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with outpatient care activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the patient class and count of signals linked to healthcare activities for outpatients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with outpatient healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and count of signals related to healthcare activities for outpatients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},

    {"prompt":"Retrieve the city and count of patients living in the given address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and count of patients residing in the specified address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and count of patients who live in the provided address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the city and count of patients based on their residence in the given address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and count of patients residing at the mentioned address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and count of patients living in the specified address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and count of patients who have their residence in the given address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the city and count of patients based on their living address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and count of patients residing at the provided address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and count of patients who live in the mentioned address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the signals associated with the given patient. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals that are linked to the specified patient. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals associated with the provided patient. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Obtain the signals linked to the given patient. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals that have an association with the mentioned patient. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals associated with the patient mentioned. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals linked to the mentioned patient","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Obtain the signals that are associated with the given patient ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals linked to the provided patient ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals associated with the patient mentioned ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},

    {"prompt":"Return the codes, patient class, and count of signals associated with healthcare activities where the patient class is not unavailable. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the activity codes, patient class, and count of signals associated with healthcare activities excluding cases where the patient class is not specified. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the codes, patient class, and count of signals associated with healthcare activities, excluding instances where the patient class information is missing. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the codes, patient class, and count of signals related to healthcare activities, excluding cases where the patient class is unknown. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the activity codes, patient class, and count of signals associated with healthcare activities, filtering out instances where the patient class is not provided. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the codes, patient class, and count of signals associated with healthcare activities, excluding cases where the patient class is not recorded. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the activity codes, patient class, and count of signals related to healthcare activities, excluding cases where the patient class is unspecified. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the codes, patient class, and count of signals associated with healthcare activities, excluding instances where the patient class is not available. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the activity codes, patient class, and count of signals associated with healthcare activities, filtering out cases where the patient class is missing. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the codes, patient class, and count of signals associated with healthcare activities, excluding instances where the patient class is not specified. ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the gender, location hiding, consent status, orientation, and count of patients associated with their consent to share their sexual orientation information, excluding grouping by consent status, where the consent status is unknown and the gender is male ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender, location hiding, consent status, orientation, and count of patients who have consented to share their sexual orientation, excluding the grouping based on consent status, when the consent status is unknown and the gender is male. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Return the gender, location hiding, consent status, orientation, and count of patients who have consented to share their sexual orientation, excluding the grouping by consent status, in cases where the consent status is unknown and the gender is male. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding, consent status, orientation, and count of patients associated with their consent to share their sexual orientation, excluding the grouping by consent status, when the consent status is unknown and the gender is male. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender, location hiding, consent status, orientation, and count of patients who have consented to share their sexual orientation information, excluding grouping by consent status, where the consent status is unknown and the gender is male. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Return the gender, location hiding, consent status, orientation, and count of patients associated with their consent to share their sexual orientation, excluding the grouping based on consent status, in cases where the consent status is unknown and the gender is male. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding, consent status, orientation, and count of patients who have consented to share their sexual orientation, excluding the grouping by consent status, when the consent status is unknown and the gender is male. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender, location hiding, consent status, orientation, and count of patients associated with their consent to share their sexual orientation, excluding the grouping by consent status, where the consent status is unknown and the gender is male. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Return the gender, location hiding, consent status, orientation, and count of male patients who have consented to share their sexual orientation, excluding the grouping by consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding, consent status, orientation, and count of patients associated with their consent to share their sexual orientation, excluding the grouping by consent status, in cases where the consent status is unknown and the gender is male. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},

    {"prompt":"Retrieve the recorded date, month, and total number of signals where the data controller is psm_dev_v1_0 and the recorded date is in the year 2022, excluding grouping by the recorded date","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the date and month of the recorded signals, along with the total count of signals, when the data controller is psm_dev_v1_0 and the recorded date is in 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Return the recorded date and month of the signals, along with the total count of signals, where the data controller is psm_dev_v1_0 and the recorded date is in 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded date, month, and total number of signals associated with the data controller psm_dev_v1_0 and recorded in 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the date and month of the recorded signals, along with the total count of signals, when the data controller is psm_dev_v1_0 and the recorded date is in the year 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Return the recorded date and month of the signals, along with the total count of signals, where the data controller is psm_dev_v1_0 and the recorded date is in 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded date, month, and total number of signals where the data controller is psm_dev_v1_0 and the recorded date is in 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the date and month of the recorded signals, along with the total count of signals, associated with the data controller psm_dev_v1_0 and recorded in 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Return the recorded date and month of the signals, along with the total count of signals, when the data controller is psm_dev_v1_0 and the recorded date is in 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded date, month, and total number of signals associated with the data controller psm_dev_v1_0 and recorded in 2022, excluding grouping by the recorded date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},

    {"prompt":"Retrieve the order control and count of signals associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the order control and count of signals linked to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the order control and count of signals that are associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the order control and count of signals that are linked to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the order control and count of signals in relation to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the order control and count of signals associated with specific orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the order control and count of signals that are associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the order control and count of signals linked to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the order control and count of signals in relation to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the order control and count of signals associated with orders","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Get the gender, location hiding, and consent status of patients who have unknown consent status and are male ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding, and consent status of male patients with unknown consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Return the gender, location hiding, and consent status of patients who are male and have an unknown consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the count of male patients with unknown consent status and their corresponding gender, location hiding, and consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the gender, location hiding, and consent status of male patients with an unknown consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Return the count of male patients with unknown consent status and their associated gender, location hiding, and consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the gender, location hiding, and consent status of patients who have an unknown consent status and are categorized as male ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the count of male patients with unknown consent status along with their gender, location hiding, and consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Return the gender, location hiding, and consent status of male patients who have an unknown consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the count of patients who are male, have an unknown consent status, and their corresponding gender, location hiding, and consent status ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},

    {"prompt":"Retrieve the preferred term and count of hospital services ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and count of services provided by hospitals ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the count and preferred term of hospital services ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count and preferred term associated with hospital services ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and the number of occurrences for hospital services ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the count and preferred name of services provided by hospitals ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and count of services offered by hospitals ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and preferred term for hospital services ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the number of occurrences and preferred term for hospital services ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count and preferred term associated with hospital service records ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the status and count of signals associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and status of signals linked to orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the count and status of signals related to orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the number of occurrences and status of signals associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and current status of signals connected to orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the status and count of signals that are associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count and status of signals that are linked to orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status and number of instances of signals associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the count and status of signals that have an association with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the status and count of signals that are associated with order records ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Get the count of patients and their corresponding allergy codes ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the allergy codes and count of patients who have allergies ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the count and allergy codes of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the number of patients and their associated allergy codes ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count and specific allergy codes for patients ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the allergy codes and count of patients who are allergic ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the count of patients and their corresponding allergy codes ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the number of patients and the codes for their allergies ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the allergy codes and count of patients with recorded allergies ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the count and codes of allergies for patients ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the count of patients for each ethnicity. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the number of patients and their corresponding ethnicities. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the count and ethnicities of patients. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of patients based on their ethnicities. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ethnicities and count of patients. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of patients for each ethnicity category. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the number of patients and their respective ethnicities. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of patients belonging to different ethnicities. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ethnicities and count of patients in each category. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count and ethnicities of patients recorded. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"list the count of allergies for each code. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the number of allergies and their corresponding codes. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the count and codes of allergies. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of allergies based on their codes. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the codes and count of allergies. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of allergies for each code category. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the number of allergies and their respective codes. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of allergies belonging to different codes. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the codes and count of allergies in each category. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count and codes of recorded allergies. ","completion":"s{UNIQUE_SELECT}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Return the patient ID, first name, last name, date of birth, signal ID, description, and date associated with each signal ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient ID, first name, last name, date of birth, signal ID, description, and date from the signal-patient association ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient ID, first name, last name, date of birth, signal ID, description, and date information for each signal ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the ID, name, date of birth, signal ID, description, and date associated with each signal-patient pair ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient information (ID, name, date of birth) and the associated signal details (ID, description, date) ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient ID, name, date of birth, signal ID, description, and date for each signal-patient association. ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Return the patient ID, name, date of birth, signal ID, description, and date linked to each signal ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the patient ID, name, date of birth, signal ID, description, and date information for each signal-patient connection. ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient ID, name, date of birth, signal ID, description, and date associated with each signal-patient relationship. ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient ID, name, date of birth, signal ID, description, and date linked to each signal occurrence. ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},

    {"prompt":"Return the name and count of home phone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the names and count of home phone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the name and count associated with home phone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the count and names of home phone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and names linked to home phone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the count and names of phone numbers for home. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count and names of home telephone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the number of occurrences and names for home phone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and names of residential phone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the count and names associated with home-based phone numbers. ","completion":"s{UNIQUE}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the count of patients with unknown allergy severity, excluding duplicates based on severity, where severity is labeled as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the number of patients with unspecified allergy severity, excluding repetitions based on severity, when severity is classified as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the count of patients whose allergy severity is unknown, excluding duplicates according to severity, where severity is specified as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the total number of patients with unspecified allergy severity, excluding repetitions based on severity, when severity is marked as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the count of patients whose allergy severity is labeled as unknown, excluding duplicates based on severity, where severity is indicated as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the number of patients with unspecified severity for their allergies, excluding repetitions based on severity, when severity is recorded as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the count of patients with unknown allergy severity, excluding duplicates based on severity, where severity is listed as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the total count of patients whose allergy severity is unspecified, excluding repetitions based on severity, when severity is denoted as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the count of patients whose allergy severity is unknown, excluding duplicates based on severity, where severity is mentioned as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the number of patients with unspecified allergy severity, excluding repetitions based on severity, when severity is defined as Unknown and not equal to CLI ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND severity != CLI SORT_DESC Count LIMIT 100"},

    {"prompt":"Return the count of active problems for each patient, along with their names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the total number of active problems for each patient, along with their respective names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the count of occurrences of active problems for each patient, and display their names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Obtain the number of active problems for each patient, and list their names accordingly ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Return the count of active issues per patient, along with their names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the total number of active problems associated with each patient, and display their names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the count of active problems attributed to each patient, along with their respective names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Obtain the number of occurrences of active problems for each patient, and list their names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Return the count of active conditions for each patient, along with their names. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the total number of active problems for each patient, and indicate their names. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},

    {"prompt":"Retrieve the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth for each active problem associated with patients ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth information for each active problem linked to patients ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Return the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth details for each active problem that patients have ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth values for each active problem attributed to patients ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth for each active problem recorded for patients ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Return the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth information related to each active problem concerning patients ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth details associated with each active problem linked to patients ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth values for each active problem that patients are experiencing ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Return the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth for each active problem diagnosed in patients ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth information associated with each active problem observed in patients ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC code LIMIT 100"},

    {"prompt":"Retrieve the coding system and count for each disease or syndrome ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and total count for each disease or syndrome ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and count of occurrences for each disease or syndrome ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and number of instances for each disease or syndrome ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and count of occurrences for each specific disease or syndrome ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and total count for each disease or syndrome ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and number of cases for each disease or syndrome ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and count of instances for each disease or syndrome ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and total count of disease or syndrome occurrences. ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and number of occurrences for each disease or syndrome. ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the message code, message type, patient class, and count of signals for healthcare activities associated with signals recorded in the first half of 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and total count of signals related to healthcare activities recorded between January and June 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the message code, message type, patient class, and count of signals associated with healthcare activities recorded during the first six months of 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and number of signals for healthcare activities linked to signals recorded in the early part of 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and count of signals for healthcare activities associated with signals recorded in the first half of 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the message code, message type, patient class, and total count of signals for healthcare activities linked to signals recorded between January and June 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and number of signals for healthcare activities associated with signals recorded in the beginning of 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and count of signals for healthcare activities related to signals recorded in the first half of 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the message code, message type, patient class, and count of signals for healthcare activities associated with signals recorded in the early part of 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and number of signals for healthcare activities linked to signals recorded in the first six months of 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the patient's node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days until the orders expire for patients with PSM as the issuer of their personal identifier ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the patient's node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and count of remaining days until the orders expire for patients whose personal identifier issuer is PSM ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Return the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days until the orders expire for patients with PSM as the issuer of their personal identifier ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients whose personal identifier issuer is PSM ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the patient's node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and count of remaining days until the orders expire for patients with PSM as the issuer of their personal identifier ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Return the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days until the orders expire for patients whose personal identifier issuer is PSM ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients with PSM as the issuer of their personal identifier ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the patient's node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and count of remaining days until the orders expire for patients whose personal identifier issuer is PSM ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Return the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days until the orders expire for patients with PSM as the issuer of their personal identifier ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for patients whose personal identifier issuer is PSM ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_PI = \"PSM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_PI AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},

    {"prompt":"Get the name and count of active problems for patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the names and total count of active problems for patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Return the names and count of active problems recorded for patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the count of active problems and their corresponding names for patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the count and names of active problems associated with patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Return the total count and names of active problems for patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the count and names of active problems recorded for patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the count of active problems and their respective names for patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Return the total count and names of active problems associated with patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the names and count of active problems documented for patients. ","completion":"s{UNIQUE_SELECT}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},

    {"prompt":"Retrieve the bed and count associated with signals assigned to points of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the number of signals and their corresponding bed assignments in point of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Return the count of signals and their respective bed assignments in point of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the bed and total count of signals assigned to points of care. ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the count and bed information of signals associated with points of care. ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Return the total count and bed assignments of signals in point of care. ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the count and bed details of signals that have been assigned to points of care. ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the bed and count of signals that have been assigned to points of care. ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Return the count and bed information of signals assigned to points of care. ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the bed assignments and total count of signals in point of care. ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},

    {"prompt":"Return the total count of signals with their message type and message code, excluding duplicate message codes for OMG and ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the count of signals based on their message type and message code, excluding duplicate message codes for OMG or ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the total count of signals along with their respective message types and message codes, excluding duplicate message codes for OMG and ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Return the count of signals categorized by their message type and message code, excluding duplicate message codes for OMG and ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the total count of signals and their message types and codes, excluding duplicate message codes for OMG or ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the count of signals along with their message types and codes, excluding duplicate message codes for OMG and ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Return the total count of signals, their message types, and message codes while excluding duplicate message codes for OMG and ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the count of signals with their corresponding message types and codes, excluding duplicate message codes for OMG or ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the total count of signals, their message types, and message codes, excluding duplicate message codes for OMG and ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Return the count of signals, their message types, and codes, excluding duplicate message codes for OMG and ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},

    {"prompt":"Retrieve all the information for the patient with the last name PURYEAR, first name ASA, date of birth 20070916, and gender Male ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the complete record for the male patient named ASA PURYEAR with a date of birth on September 16, 2007. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Return all the details of the patient identified as ASA PURYEAR with a birthdate of September 16, 2007, and male gender. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the entire information for the male patient named ASA PURYEAR who was born on September 16, 2007. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get all the data related to the patient with the first name ASA, last name PURYEAR, date of birth on September 16, 2007, and identified as male ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Return the complete record of the male patient with the name ASA PURYEAR, born on September 16, 2007 ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve all the available details for the patient named ASA PURYEAR who is a male and was born on September 16, 2007. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the entire information for the male patient named ASA PURYEAR with a birthdate of September 16, 2007. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Return all the data related to the patient with the first name ASA, last name PURYEAR, date of birth on September 16, 2007, and identified as male ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the complete record of the patient named ASA PURYEAR with a birthdate on September 16, 2007, and male gender. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},

    {"prompt":"Provide the allergy code and the count for each unique allergy in the patient records ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the unique allergy codes and their corresponding counts from the patient allergy data ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the code and count of each distinct allergy recorded in the patient allergies ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the allergy codes and their respective counts from the patient allergy records ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the unique allergy codes and the count of occurrences for each code in the patient data ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide the code and count for each different allergy recorded in the patient allergy information ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the allergy codes and their counts from the patient allergy records ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the code and count of each unique allergy found in the patient allergies ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the distinct allergy codes and their corresponding counts in the patient allergy data ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide the allergy code and the count of occurrences for each unique allergy recorded in the patient records ","completion":"s{UNIQUE}=>(@P Allergies:*); RETURN P.code AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the sexual orientation and the count of patients associated with each orientation ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the orientation and the corresponding patient count for each distinct sexual orientation in the patient data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the sexual orientation and the count of patients affiliated with each orientation ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide the orientation and the number of patients linked to each specific sexual orientation ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the distinct sexual orientations and the count of patients associated with each orientation ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the orientation and the count of patients associated with each unique sexual orientation in the patient records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the orientation and the number of patients associated with each particular sexual orientation ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation and the count of patients linked to each specific orientation in the patient data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide the orientation and the count of patients associated with each distinct sexual orientation in the patient records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the orientation and the corresponding patient count for each unique sexual orientation in the patient information ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the filler reference and count the number of orders based on the placer reference in the order data ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference and calculate the count of orders associated with each placer reference ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Return the filler reference and the total count of orders based on the placer reference ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Provide the filler reference and count the number of orders for each distinct placer reference in the order records ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference and determine the count of orders associated with each specific placer reference ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference and count the number of orders based on each unique placer reference in the order data ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Return the filler reference and the count of orders for each distinct placer reference in the order information ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference and calculate the total count of orders associated with each specific placer reference in the order records ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Provide the filler reference and count the number of orders for each unique placer reference in the order data ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference and determine the count of orders based on each distinct placer reference in the order information ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},

    {"prompt":"Retrieve the filler field 1 value from diagnostic procedure data and count the number of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the filler field 1 information from diagnostic procedures and calculate the count of signals linked to each unique value ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the filler field 1 value from diagnostic procedures and determine the total count of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the filler field 1 value from diagnostic procedures and determine the total count of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the filler field 1 value from diagnostic procedures and determine the count of signals associated with each specific value ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the filler field 1 information from diagnostic procedures and count the number of signals based on each unique filler field 1 value ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the filler field 1 value from diagnostic procedure records and calculate the count of signals for each distinct filler field 1 value ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the filler field 1 value from diagnostic procedures and determine the total count of signals associated with each specific value ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the filler field 1 value from diagnostic procedure data and count the number of signals for each unique value ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the filler field 1 information from diagnostic procedures and calculate the count of signals linked to each distinct value ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the allergy codes associated with patients and count the number of patients for each code. ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the allergy codes linked to patients and calculate the count of patients for each unique code. ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the allergy codes from patient records and determine the total count of patients associated with each code. ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Provide the allergy codes from patient data and count the number of patients for each unique code ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the allergy codes associated with patients and calculate the count of patients for each specific code ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the allergy codes linked to patients and count the number of patients based on each unique code ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the allergy codes from patient records and determine the count of patients for each distinct code ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the allergy codes associated with patients and determine the total count of patients for each specific code ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Provide the allergy codes from patient data and count the number of patients for each distinct code ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the allergy codes linked to patients and calculate the count of patients associated with each unique code ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the signal types for signals with the message code ADT and count the total number of such signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the message types of signals that have the message code ADT and calculate the total count of such signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Return the types of messages for signals with the code ADT and determine the overall count of these signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Provide the message types for signals that correspond to the code ADT and count the total number of these signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the signal types for signals that have the code ADT as their message code and calculate the total count of these signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the message types associated with signals that have the code ADT and determine the count of such signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Return the types of messages for signals with the code ADT and count the total number of signals falling into this category ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the signal types for signals that are labeled with the message code ADT and calculate the overall count of these signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Provide the message types for signals with the code ADT and count the total number of signals falling into this category ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the types of messages for signals with the message code ADT and determine the total count of these signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},

    {"prompt":"Retrieve the severity levels of allergies for patients and count the total number of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity ratings of patient allergies and calculate the overall count of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the severity levels of allergies reported by patients and determine the count of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide the severity of allergies for patients and count the total number of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity levels of patient allergies and calculate the count of patients affected ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity ratings of allergies reported by patients and determine the total count of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity ratings of allergies reported by patients and determine the total count of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity of allergies for patients and calculate the count of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide the severity levels of allergies reported by patients and count the total number of patients with allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity ratings of patient allergies and determine the count of patients affected by allergies ","completion":"s{UNIQUE_SELECT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the classification of patients based on their associated healthcare activities and count the total number of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the patient class based on the healthcare activities associated with signals and calculate the overall count of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the classification of patients based on their associated healthcare activities and determine the count of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Provide the patient class for signals based on their associated healthcare activities and count the total number of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the classification of patients based on their associated healthcare activities and calculate the count of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the patient class based on the healthcare activities associated with signals and determine the total count of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the classification of patients based on their associated healthcare activities and count the number of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the patient class for signals based on their associated healthcare activities and calculate the count of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Provide the classification of patients based on their associated healthcare activities and count the total number of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the patient class based on the healthcare activities associated with signals and determine the count of signals ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the first name, family name, gender, and date of birth of patients. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first names, family names, genders, and dates of birth. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Return the first name, family name, gender, and date of birth of the patients. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Provide the first name, family name, gender, and date of birth for each patient. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, family name, gender, and date of birth information for patients. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first names, family names, genders, and dates of birth as output. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Return the first name, family name, gender, and date of birth attributes for each patient. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Provide the first name, family name, gender, and date of birth of the patients. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, family name, gender, and date of birth for all patients. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first names, family names, genders, and dates of birth from the database. ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the location hiding status and count for consent records. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the location hiding information and count for consent entries. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the location hiding status and the number of consent records. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the location hiding attribute and the count of consent records. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the hiding location indicator and the total count of consent entries. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the location hiding status and count for each consent record. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the location hiding flag and the number of consent records. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the location hiding information and the count of consent records. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the hiding location attribute and the total count of consents. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the location hiding status and count for all consent records. ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the room information and count for assigned signals in point of care. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room details and count of assigned signals in point of care. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the room number and the total count of assigned signals. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide the room identifier and the count of assigned signals. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the assigned room and the number of signals associated with it. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room information and count for signals that have been assigned. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the room allocation and the count of assigned signals. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Provide the room designation and the number of assigned signals. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room attribute and the total count of assigned signals. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room information and count for all assigned signals. ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the gender, city, and count of patients with allergies associated with their sexual orientation, excluding duplicate counts based on city. Only include patients with known gender ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Get the count of patients based on their gender and city, excluding duplicate counts for each city. Only include patients with identifiable gender and allergies associated with their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Return the number of patients grouped by their gender and city, excluding duplicate counts for each city. Only include patients with known gender and allergies associated with their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Provide the count of patients based on their gender and city, excluding duplicate counts for each city. Only include patients with identifiable gender and allergies associated with their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Retrieve the count of patients with known gender, grouped by their gender and city. Exclude duplicate counts for each city and consider allergies associated with sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Get the total count of patients based on their gender and city, excluding duplicate counts for each city. Only include patients with identifiable gender and allergies associated with their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Return the count of patients with allergies associated with sexual orientation, grouped by their gender and city. Exclude duplicate counts for each city and consider patients with known gender ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Provide the count of patients grouped by their gender and city, excluding duplicate counts for each city. Only include patients with identifiable gender and allergies associated with their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Retrieve the gender and city information along with the count of patients. Exclude duplicate counts for each city and consider allergies associated with sexual orientation. Only include patients with known gender ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Get the count of patients based on their gender and city, excluding duplicate counts for each city. Only include patients with identifiable gender and allergies associated with their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},

    {"prompt":"Retrieve the consent status for data sharing, consent status for sensitive data sharing, gender, and count of patients. Only include patients with a count greater than 1 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the patients' consent status for sharing data, consent status for sharing sensitive data, gender, and the count of patients. Consider only patients with a count higher than 1 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Return the consent status for sharing data, consent status for sharing sensitive data, gender, and count of patients. Only include patients with a count greater than 1. ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Provide the consent status for sharing data, consent status for sharing sensitive data, gender, and count of patients. Exclude patients with a count less than or equal to 1 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Retrieve the consent status for sharing data, consent status for sharing sensitive data, gender, and count of patients. Only consider patients with a count exceeding 1 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the patients' consent status for sharing data, consent status for sharing sensitive data, gender, and the count of patients. Exclude patients with a count less than 2 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Return the consent status for sharing data, consent status for sharing sensitive data, gender, and count of patients. Consider only patients with a count greater than 1 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Provide the consent status for sharing data, consent status for sharing sensitive data, gender, and count of patients. Exclude patients with a count equal to or less than 1 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Retrieve the consent status for data sharing, consent status for sensitive data sharing, gender, and count of patients. Exclude patients with a count of 1 or less ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the patients' consent status for data sharing, consent status for sensitive data sharing, gender, and the count of patients. Only consider patients with a count higher than 1 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},

    {"prompt":"Retrieve the coding system for diseases or syndromes and the count of occurrences.","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system used for diseases or syndromes and count how many instances there are ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and the count for diseases or syndromes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the coding system and count of diseases or syndromes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and the number of occurrences for diseases or syndromes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system for diseases or syndromes and count how many are there ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system used for diseases or syndromes and the count of instances ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the coding system and count for diseases or syndromes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system for diseases or syndromes and count the occurrences ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and count of diseases or syndromes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the names and count of home phone numbers associated with patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the names and count of patients' home phone numbers ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Return the names and count of home phone numbers linked to patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Provide the names and count of patients' home phone numbers ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the names and count of home phone numbers that are associated with patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the names and count of patients' home phone numbers ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Return the names and count of home phone numbers belonging to patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Provide the names and count of patients' home phone numbers ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the names and count of home phone numbers associated with patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the names and count of patients' home phone numbers ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},

    {"prompt":"Retrieve the status and count of signals associated with orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status and count of signals that are linked to orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the status and count of signals associated with orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the status and count of signals linked to orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the status and count of signals that are associated with orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status and count of signals associated with orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the status and count of signals linked to orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the status and count of signals associated with orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the status and count of signals that are linked to orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status and count of signals associated with orders ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the ID and count of hospital services. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID and count of hospital services. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the ID and count of hospital services. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the ID and count of hospital services. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the ID and count of services offered by hospitals. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID and count of services provided by hospitals. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the ID and count of hospital services. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the ID and count of services available at hospitals. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the ID and count of hospital services. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID and count of services rendered by hospitals. ","completion":"s{UNIQUE}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the patient class and count for outpatient healthcare activities associated with signals ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the count of outpatient healthcare activities associated with signals, grouped by patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Return the number of outpatient healthcare activities associated with signals, categorized by patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Provide the count of signals associated with outpatient healthcare activities, based on patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the count of healthcare activities for outpatient patients related to signals ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the number of signals associated with outpatient healthcare activities, classified by patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Report the count of healthcare activities linked to signals for outpatient patients, grouped by patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Display the number of signals associated with outpatient healthcare activities, categorized by patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the count of healthcare activities associated with signals for outpatient patients, based on patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Present the number of signals linked to outpatient healthcare activities, classified by patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},

    {"prompt":"Retrieve the count of patients with unknown severity allergies, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the number of patients who have allergies with an unknown severity, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the count of patients with allergies of unknown severity, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Provide the number of patients who have allergies with severity labeled as unknown, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients with allergies of unknown severity, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the number of patients who have allergies with severity marked as unknown, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Report the count of patients with allergies of unknown severity, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Display the number of patients who have allergies with severity recorded as unknown, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the count of patients with allergies of unknown severity, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Present the number of patients who have allergies with severity categorized as unknown, excluding those with the CLI issuer ID ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the count of patients with disease or syndrome entries, along with their respective codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the number of patients who have recorded diseases or syndromes, and display their corresponding codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the count of patients with diseases or syndromes, and provide their associated codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the number of patients with recorded diseases or syndromes, and include their corresponding codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the count of patients who have documented diseases or syndromes, along with their respective codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the number of patients with diseases or syndromes listed, and display their associated codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Report the count of patients with recorded diseases or syndromes, along with their respective codes","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the number of patients who have documented diseases or syndromes, and include their corresponding codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the count of patients with diseases or syndromes, and their respective codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the number of patients who have recorded diseases or syndromes, along with their corresponding codes ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the preferred terms of active problems and count the occurrences. ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms of active issues and provide the count ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the preferred terms of ongoing problems and include the total count ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms of current problems and display the total count ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms of active conditions and count them ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms of ongoing health issues and provide the count ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Report the preferred terms of current problems and include the total count ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the preferred terms of active ailments and count their occurrences ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the preferred terms of ongoing medical problems and their count ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms of active disorders and include the total count ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the home phone numbers associated with patients and count them. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the names of patients along with the count of their home phone numbers. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Return the names of patients and the total count of their home phone numbers. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Obtain the count of home phone numbers associated with patients and display their names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the names of patients and count how many home phone numbers they have. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Provide the count of home phone numbers and the corresponding patient names. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Display the names of patients along with the total count of their home phone numbers","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Get the count of home phone numbers associated with patients and report their names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Include the names of patients and count the occurrences of their home phone numbers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},
    {"prompt":"Retrieve the names of patients and count the total number of their home phone numbers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 10"},

    {"prompt":"Find all patients who have allergies and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve patients who have allergies and are linked to a specific sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the patients who have allergies and their association with sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Identify patients with allergies and their connection to sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain a list of patients with allergies and their corresponding sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve patients who are allergic and have an associated sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Find patients with allergies and their connection to sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get a list of patients who have allergies and are associated with sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Identify patients who have allergies and are linked to sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve patients who have allergies and their relationship with sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},

    {"prompt":"Retrieve the names and count of healthcare activities. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the count and names of health-related activities. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Identify the count and names of healthcare activities. ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Obtain the count and names of activities related to healthcare ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the count and names of health activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Find the number of healthcare activities and their corresponding names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the count and names of activities in the healthcare domain ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Identify the names and count of healthcare-related activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Obtain the count and names of activities associated with healthcare ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the names and count of activities related to healthcare ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P HealthCareActivity:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},

    {"prompt":"Calculate the count of signals associated with healthcare activities and classify them based on the patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Determine the number of healthcare activities linked to signals and group them by patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Count the signals related to healthcare activities and categorize them according to the patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Calculate the total count of signals associated with healthcare activities, categorized by patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Count the occurrences of signals associated with healthcare activities and classify them based on the patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Calculate the number of healthcare activities linked to signals and classify them according to the patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Determine the count of signals associated with healthcare activities and categorize them based on the patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Count the signals related to healthcare activities and group them according to the patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Calculate the total count of signals associated with healthcare activities, grouped by patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Determine the number of healthcare activities linked to signals and classify them based on the patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},

    {"prompt":"Retrieve the count of signals associated with diagnostic procedures and retrieve the filler field 2 of the diagnostic procedures ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the number of signals linked to diagnostic procedures and obtain the value of filler field 2 for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of signals associated with diagnostic procedures and retrieve the corresponding filler field 2 ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of signals that are associated with diagnostic procedures and obtain the filler field 2 for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the number of signals associated with diagnostic procedures and retrieve the filler field 2 value for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the signals that are linked to diagnostic procedures and retrieve the filler field 2 value for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of signals associated with diagnostic procedures and retrieve the corresponding filler field 2 ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the number of signals linked to diagnostic procedures and obtain the filler field 2 value for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of signals associated with diagnostic procedures and retrieve the filler field 2 for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of signals that are associated with diagnostic procedures and obtain the filler field 2 for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the ID, issuer, and date of birth of patients who are older than 20 years, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID, issuer, and date of birth of patients whose age is greater than 20, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the NH ID, issuer, and PI ID of patients whose age exceeds 20 years, and calculate their age. ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, issuer, and PI ID of patients whose age is above 20, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, issuer, and date of birth of patients who are over 20 years old, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID, issuer, and date of birth of patients whose age exceeds 20, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the NH ID, issuer, and PI ID of patients whose age is greater than 20 years, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NH ID, issuer, and PI ID of patients whose age exceeds 20, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, issuer, and date of birth of patients who are older than 20 years, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID, issuer, and date of birth of patients whose age is above 20, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days for patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the number of remaining days for patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days left for patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days for patients' appointments ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the number of days remaining for patients' orders ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days based on the current date ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days until the orders expire ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days until the next appointment ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days until patients' orders are fulfilled ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days for patients' orders to be completed ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},

    {"prompt":"Get the description, patient class, and count of associated healthcare activities for signals with non-null descriptions ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the signal descriptions, patient classes, and count of healthcare activities associated with signals that have valid descriptions ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the descriptions, patient classes, and count of healthcare activities related to signals that have meaningful descriptions ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the signal descriptions, patient classes, and count of healthcare activities associated with signals excluding those with missing descriptions ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the descriptions, patient classes, and count of healthcare activities for signals that have valid descriptions available ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the signal descriptions, patient classes, and count of healthcare activities for signals that contain meaningful information ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the descriptions, patient classes, and count of healthcare activities associated with signals that have non-empty descriptions ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the signal descriptions, patient classes, and count of healthcare activities for signals excluding those with NA descriptions ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the descriptions, patient classes, and count of healthcare activities for signals that have descriptive information ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the signal descriptions, patient classes, and count of healthcare activities for signals that contain relevant information ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*{description !~NA})-[@r1 IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*); RETURN S.description, r1.class, COUNT(O.name) AS Count SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the message codes and count of signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the message codes and count of unique signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the message codes and the total count of signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the count of signals for each message code ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the message codes and the number of signals associated with them ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the count of signals for each unique message code ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the message codes and the total count of signal occurrences ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the message codes and the count of signals present ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the message codes and the overall count of signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the count of signals for each distinct message code ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"Retrieve the patients' addresses and their associated sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the addresses and sexual orientations of all patients ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients' living addresses and their corresponding sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the addresses where patients reside along with their sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the addresses of patients and their associated sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the living addresses of patients and their respective sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the addresses of patients and the sexual orientations associated with them ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the addresses where patients live and their corresponding sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the living addresses of patients and their associated sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the addresses of patients along with their respective sexual orientations ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},

    {"prompt":"Retrieve the placer references of orders and count their occurrences ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the order placer references and count how many times each reference appears ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer references of orders and calculate the count of each reference ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the order placer references and determine the count of each reference ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer references of orders along with the total count of each reference ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the order placer references and count the number of occurrences for each reference ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer references of orders and calculate the count for each reference ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the order placer references and determine the total count for each reference ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer references of orders and count how many times each reference is present ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the order placer references and calculate the count for each reference ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},

    {"prompt":"Retrieve the severity of allergies associated with patients and count the occurrences, sorted in ascending order based on the count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity of patient allergies and calculate the count for each severity, sorting the results in ascending order by count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity levels of allergies experienced by patients and count how many times each severity appears, with the results sorted in ascending order based on count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity ratings of allergies related to patients and determine the count for each severity, sorting the results in ascending order according to the count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity of allergies associated with patients and count the occurrences, arranging them in ascending order based on the count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity levels of patient allergies and calculate the count for each severity, sorting the results in ascending order by count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity ratings of allergies reported by patients and count the occurrences for each severity, arranging them in ascending order based on count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity of patient allergies and determine the count for each severity, with the results sorted in ascending order based on the count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity of allergies associated with patients and count how many times each severity appears, sorting the results in ascending order according to count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity levels of allergies reported by patients and calculate the count for each severity, sorting the results in ascending order based on count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the first name, family name, gender, date of birth, and formatted date of birth for all patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first names, last names, genders, dates of birth, and formatted dates of birth ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, gender, date of birth, and formatted date of birth for each patient ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first names, last names, genders, dates of birth, and formatted dates of birth of all patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, family name, gender, date of birth, and formatted date of birth information for patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first names, last names, genders, dates of birth, and formatted dates of birth for all the patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, family name, gender, date of birth, and formatted date of birth for each patient in the dataset ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first names, last names, genders, dates of birth, and formatted dates of birth ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, gender, date of birth, and formatted date of birth for all patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first names, last names, genders, dates of birth, and formatted dates of birth of the patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the filler field 2 and the count of associated signals for diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the filler field 2 value and the total count of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the second filler field and the number of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the value of filler field 2 and count the number of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the filler field 2 information and count the occurrences of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the filler field 2 value and count the signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the second filler field and count the number of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the value of filler field 2 and calculate the count of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the filler field 2 data and count the occurrences of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the filler field 2 value and determine the count of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the coding system and count of laboratory procedures ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system value and the total count of laboratory procedures ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the laboratory procedure's coding system and count the occurrences ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the value of the coding system and count the laboratory procedures ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system information and count the number of laboratory procedures ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system value and calculate the count of laboratory procedures ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the laboratory procedure's coding system and count the occurrences ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system value and determine the count of laboratory procedures ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system data and count the occurrences of laboratory procedures ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system value and count the laboratory procedures ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the class and count of healthcare activities associated with signals","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the class and count of healthcare activities linked to signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the class of healthcare activities and calculate the count based on associated signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the healthcare activity class and count the occurrences related to signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the class of healthcare activities and determine the count based on signal associations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the class of healthcare activities and count the number of signals associated ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the class of healthcare activities and calculate the count based on signal associations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the healthcare activity class and count the occurrences associated with signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the class and count of healthcare activities linked to signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the class of healthcare activities and determine the count based on associated signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the filler field 1 and count of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the value of filler field 1 and count the occurrences of signals linked to diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the first filler field and calculate the count of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the filler field 1 and count the number of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the value of filler field 1 and determine the count based on diagnostic procedure associations ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the first filler field and count the occurrences of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the filler field 1 and calculate the count of signals linked to diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the value of filler field 1 and count the occurrences of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the first filler field and determine the count based on diagnostic procedure associations ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the filler field 1 and count the number of signals associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve all information related to the signal associated with Patient ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Get all the details of the signal linked to the patient with ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Return all the data associated with the signal that is connected to the patient having ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete information of the signal connected to the patient with ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Get all the attributes and values of the signal associated with the patient having ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Return all the details of the signal that is associated with the patient identified by ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the entire data of the signal connected to the patient with ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Get all the information related to the signal that is associated with the patient ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Return all the attributes and values of the signal associated with the patient whose ID is 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the data associated with the signal that is linked to the patient identified by ID 6252041994897922579 ","completion":"S1{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 10"},

    {"prompt":"Get the code and count of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the active problem codes and their respective counts ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the code and count of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and the number of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the active problem codes and count them ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the active problem codes and their count ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and count of problems marked as active ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the code and count of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the active problem codes and their count ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and the total count of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth for active problems associated with a patient ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth of active problems linked to a patient ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Return the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth for active problems connected to a patient ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth of active problems assigned to a patient ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth for active problems associated with a patient record ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth of active problems linked to a patient record ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Return the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth for active problems connected to a patient record ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth of active problems assigned to a patient record ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth for active problems associated with a patient's medical history ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Return the code, preferred term, coding system, list priority, establishment date, resolution date, classification, ranking, patient awareness, family awareness, sensitivity, gender, and date of birth of active problems linked to a patient's medical history ","completion":"s{UNIQUE}=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, r1.listpriority AS listpriority, r1.dateEstablished AS dateEstablished, r1.dateResolution AS dateResolution, r1.classification AS classification, r1.ranking AS ranking, r1.patientAware AS patientAware, r1.familyAware AS familyAware, r1.sensitivity AS sensitivity, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},

    {"prompt":"Get the city and count of addresses, sorted in descending order based on the count ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and the total count of addresses, sorted in descending order by the count ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the city and count of the addresses, with the count sorted in descending order ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and the number of occurrences of addresses, sorted by the count in descending order ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and count of address entries, sorted in descending order of the count ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the city and the count of addresses, sorted in descending order based on the count ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and the total count of addresses, with the count sorted in descending order ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and count of addresses, sorting the count in descending order ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the city and the count of addresses, sorted in descending order of occurrence ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and count of addresses, with the count sorted in descending order ","completion":"s{UNIQUE_SELECT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the patient type and the count of signals associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the patient type and the total count of signals associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the patient type and count of signals linked to healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the patient type and the number of occurrences of signals associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the patient type and count of signals that are associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the patient type and the count of signals related to healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the patient type and count of signals connected to healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the patient type and the total count of signals associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the patient type and the count of signals that are associated with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the patient type and count of signals that have an association with healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the patient's name, ID, date of birth, and the details of the signal associated with the specified patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient's name, ID, date of birth, and the information about the signal linked to the given patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Return the patient's name, ID, date of birth, and the description of the signal associated with the provided patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient's name, ID, date of birth, and the details of the signal that is associated with the specified patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient's name, ID, date of birth, and the description of the signal connected to the given patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Return the patient's name, ID, date of birth, and the information regarding the signal that is associated with the provided patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient's name, ID, date of birth, and the details of the signal associated with the specified patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient's name, ID, date of birth, and the description of the signal linked to the given patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Return the patient's name, ID, date of birth, and the information about the signal associated with the provided patient ID and issuer ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient's name, ID, date of birth, and the details of the signal that is associated with the specified patient ID and issuer","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},

    {"prompt":"Get the data controller and the count of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the data controller and the total number of signals linked to it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the data controller and the count of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the data controller and the number of signals connected to it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the data controller and the total count of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the data controller and the count of signals linked to it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the data controller and the number of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the data controller and the count of signals linked to it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the data controller and the total number of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the data controller and the count of signals connected to it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Get the ID, first name, family name, location hiding status, and NHS number of the patient with the specified details ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Retrieve the ID, first name, family name, location hiding preference, and NHS number of the patient who consents to the specified consent and is associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Return the ID, first name, family name, location hiding status, and NHS number of the patient who has given consent and is linked to a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Get the ID, first name, family name, location hiding preference, and NHS number of the patient who consents to a specific consent and is associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Retrieve the ID, first name, family name, location hiding status, and NHS number of the patient who has provided consent and is connected to a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Return the ID, first name, family name, location hiding preference, and NHS number of the patient who consents to the indicated consent and is associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Get the ID, first name, family name, location hiding status, and NHS number of the patient who consents to a particular consent and is linked to a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Retrieve the ID, first name, family name, location hiding preference, and NHS number of the patient who has given consent and is associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Return the ID, first name, family name, location hiding status, and NHS number of the patient who consents to the specified consent and is linked to a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},
    {"prompt":"Get the ID, first name, family name, location hiding preference, and NHS number of the patient who consents to a specific consent and is associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"2703861486\" AND idIssuer_NH = \"IBM\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_PI AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding, P.id_NH AS id_NH LIMIT 100"},

    {"prompt":"Retrieve the coding system and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and number of occurrences for laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and total count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and the count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and the number of occurrences for laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and the total count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and the number of occurrences for laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the count of unique patients' addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the number of distinct addresses associated with patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of unique patient addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the total number of different addresses where patients live ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the number of unique addresses linked to patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of distinct patient addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the total count of unique patient addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the number of different addresses patients reside in ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the count of unique patient address entries ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the number of distinct addresses where patients reside ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Return the patient's ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's node ID, first name, family name, NHS number, date of birth, calculated formatted date of birth, orders date, and remaining days ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for the patient ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Return the patient's unique identifier, first name, last name, NHS number, date of birth, formatted date of birth, orders date, and remaining days ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the unique ID, first name, last name, NHS number, date of birth, formatted date of birth, orders date, and remaining days for the patient ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the patient's unique identifier, first name, last name, NHS number, date of birth, formatted date of birth, orders date, and remaining days ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Return the patient's node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and the remaining days ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's unique ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and the number of remaining days for the patient ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Return the patient's ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and the remaining days until the deadline ","completion":"s{UNIQUE}=>(@P Patient:* {idIssuer_NH =IBM});RETURN P.name AS NodeID, P.firstName AS First Name,P.familyName AS Family Name, P.id_PI AS NHS Number, P.dateOfBirth AS DateOFBirth, MATH_EXP(DATE_FMT($DateOFBirth, %m/%d/%Y)) AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(ROUND(DATE(120 - ((CURTIME-$ordersDate)/86400000000)))) AS Remaining Days SORT_ASC DateOFBirth LIMIT 100"},

    {"prompt":"Count the number of unique patients who have a registered address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the total count of patients with associated addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the count of distinct patients residing at specific addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of unique patients living in various addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the total number of patients who have recorded addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the unique patients that have a listed residential address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the count of distinct patients with corresponding addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the number of patients who are registered at specific addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of unique patients who have provided their address information ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of patients residing at different addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the placer reference and count the number of orders associated with it ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the order placer reference and determine the count of orders linked to it ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Count the total number of orders based on their unique placer references ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer reference of orders and calculate the count of orders ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Determine the number of orders for each unique placer reference ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Count the occurrences of unique placer references and retrieve the associated orders ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Calculate the total count of orders, grouped by their placer references ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the placer reference of each order and count the total number of orders ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer reference and count the occurrences to calculate the order count ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Count the unique placer references and calculate the corresponding order count ","completion":"s{UNIQUE}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},

    {"prompt":"Retrieve the names and count of home phone numbers associated with patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Get the names and count the occurrences of home phone numbers for patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Count the number of patients and retrieve their associated home phone numbers ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Get the names and calculate the count of home phone numbers linked to patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Determine the count of home phone numbers and retrieve the corresponding patient names ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Count the occurrences of home phone numbers for patients and retrieve their names ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Retrieve the names of patients and count the total number of associated home phone numbers ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Get the names and count the occurrences of home phone numbers, which are associated with patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Calculate the count of home phone numbers for each patient and retrieve their names ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},
    {"prompt":"Retrieve the names of patients and count the occurrences of their associated home phone numbers ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S PhoneNumberHome:*);RETURN S.name AS name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 50"},

    {"prompt":"Retrieve the count of male patients with unknown consent status for sharing their location and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Count the number of male patients who have not provided consent for sharing their location and have an unknown consent status for their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the count of male patients who have not specified their consent status for sharing their location and have an unknown consent status for their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Calculate the number of male patients with unknown consent status for sharing their location and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the count of male patients who have not granted consent to share their location and have an unknown consent status for their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Count the male patients who have not given consent to share their location and have an unknown consent status for their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the count of male patients with unknown consent status for sharing their location and undisclosed consent status for their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Calculate the number of male patients who have not provided consent for sharing their location and have an unknown consent status for their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the count of male patients who have not granted consent to share their location and have an unknown consent status for their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Count the male patients with unknown consent status for sharing their location and undisclosed consent status for their sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},

    {"prompt":"Retrieve the count of home phone numbers along with their names ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of home phone numbers and display their respective names ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of phone numbers for home and show the corresponding names ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the number of home phone numbers and provide the associated names ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of names associated with home phone numbers ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of individuals with home phone numbers and display their names ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of home phone numbers along with the names of the individuals ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the number of names related to home phone numbers ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of individuals whose home phone numbers are recorded and display their names ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of home phone numbers and list the names of the individuals ","completion":"s{UNIQUE_SELECT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the count of assigned point of care beds along with their bed numbers ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Count the number of assigned point of care beds and display their respective bed numbers ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the count of beds in the assigned point of care and show the corresponding bed numbers ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Calculate the number of assigned point of care beds and provide the associated bed numbers ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the count of bed numbers associated with assigned point of care ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Count the number of beds in the assigned point of care and display their bed numbers ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the count of assigned point of care beds along with the bed numbers ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Calculate the number of bed numbers related to assigned point of care ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the count of assigned point of care beds and display their bed numbers ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Count the number of assigned point of care beds and list the bed numbers ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},

    {"prompt":"Provide the count of patients along with their corresponding ID issuers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the number of patients and display their respective ID issuers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of patients and their associated ID issuers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the number of patients and show the corresponding ID issuers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of patients and their ID issuers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the number of patients and list their ID issuers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of patients along with their ID issuer information ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the number of patients and display their ID issuers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide the count of patients and their ID issuer details ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the number of patients and present their ID issuers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve all information associated with the patient having ID 6252041994897922579 in relation to the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Get all the details related to the patient with ID 6252041994897922579 in relation to the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Provide all the data connected to the patient identified by 6252041994897922579 in the context of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Show all the relevant information about the patient with ID 6252041994897922579 in relation to the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Display all the data associated with the patient having the identifier 6252041994897922579 in the context of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Present all the details linked to the patient identified as 6252041994897922579 in relation to the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the information pertaining to the patient with ID 6252041994897922579 regarding the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Obtain all the relevant data concerning the patient whose ID is 6252041994897922579 and its association with signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Show all the data connected to the patient whose ID is 6252041994897922579 in the context of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},
    {"prompt":"Provide all the details associated with the patient having ID 6252041994897922579 and its relationship with signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579);RETURN * LIMIT 100"},

    {"prompt":"Retrieve the identifier and count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID and number of occurrences for hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the ID and count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the identification and count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the ID and frequency of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Present the identifier and count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the ID and number of instances for hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the identification and count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the ID and occurrence count for hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the identifier and count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the data controller, signal ID, and name associated with the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, and name of the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Provide the data controller, signal ID, and name linked to the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Show the data controller, signal ID, and name associated with the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Display the data controller, signal ID, and name of the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Present the data controller, signal ID, and name related to the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal ID, and name that are associated with the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Obtain the data controller, signal ID, and name belonging to the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Show the data controller, signal ID, and name linked to the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Provide the data controller, signal ID, and name associated with the signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},

    {"prompt":"Retrieve the data controller, signal ID, and name associated with the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, and name of the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Provide the data controller, signal ID, and name linked to the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Show the data controller, signal ID, and name associated with the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Display the data controller, signal ID, and name of the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Present the data controller, signal ID, and name related to the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal ID, and name that are associated with the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Obtain the data controller, signal ID, and name belonging to the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Show the data controller, signal ID, and name linked to the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Provide the data controller, signal ID, and name associated with the signal ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*);RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},

    {"prompt":"Retrieve the patient ID and the count of related records per patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the patient ID and count of records associated with each patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Provide the patient ID and count of related records per patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Show the patient ID and the number of associated records for each patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Display the patient ID and the count of records associated with each patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Present the patient ID and the number of related records per patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the patient ID and count of records that are associated with each patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Obtain the patient ID and the count of related records for each patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Show the patient ID and count of records linked to each patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Provide the patient ID and the count of records associated with each patient ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_PI AS id_PI, COUNT(*) AS rel_per_patient LIMIT 100"},

    {"prompt":"Retrieve the description and count of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the signal description and the total count ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide the signal description and the count of occurrences ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the description and total count of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Display the signal description and the number of occurrences ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Present the description and count of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the signal description and the count of entries ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the description and total count of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Show the signal description and the count of instances ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Provide the description and count of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"Retrieve the code and count of sexual orientations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the orientation code and the total count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide the orientation code and the count of occurrences ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the code and total count of sexual orientations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Display the orientation code and the number of occurrences ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Present the code and count of sexual orientations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the orientation code and the count of entries ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the code and total count of sexual orientations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the orientation code and the count of instances ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide the code and count of sexual orientations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the code and count of active problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the problem code and the total count ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the code and total count of active problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the problem code and the number of occurrences ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the code and count of active problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the problem code and the count of entries ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the code and total count of active problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the problem code and the count of instances ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Present the code and count of active problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the problem code and the count of occurrences ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.code AS code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities in the year 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the patient class and the total count of signals associated with healthcare activities in 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Show the patient class and count of signals related to healthcare activities in the year 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Display the patient class and the number of signals associated with healthcare activities in 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Provide the patient class and count of signals associated with healthcare activities in the year 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and the count of signals associated with healthcare activities in 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the patient class and total count of signals associated with healthcare activities in the year 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Show the patient class and the count of signals linked to healthcare activities in 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Present the patient class and count of signals associated with healthcare activities in 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the patient class and the count of signals that are associated with healthcare activities in the year 2022 ","completion":"s{UNIQUE}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the ethnicity and count of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the ethnicity and total count of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the ethnicity and number of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Display the ethnicity and count of individuals ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide the ethnicity and total number of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ethnicity and count of individuals ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the ethnicity and total count of people ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the ethnicity and the number of individuals ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Present the ethnicity and count of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the ethnicity and count of individuals ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the coding system and count of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and total count of lab procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the coding system and number of laboratory tests ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the coding system and count of lab procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the coding system and total number of laboratory tests ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and count of lab procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system and total count of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the coding system and the number of lab tests ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Present the coding system and count of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and count of lab tests ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the coding system and count of active problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and total count of ongoing issues ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the coding system and number of active medical conditions ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the coding system and count of current problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the coding system and total number of active health issues ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and count of ongoing ailments ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system and total count of active problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the coding system and the number of ongoing medical concerns ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Present the coding system and count of active conditions ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and count of ongoing health problems ","completion":"q{UNIQUE_SELECT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the first name, last name, gender, date of birth, and formatted date of birth for each patient ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first names, last names, genders, dates of birth, and formatted dates of birth ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Show the first names, last names, genders, dates of birth, and formatted dates of birth for all patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Provide the first name, last name, gender, date of birth, and formatted date of birth for each individual ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first names, last names, genders, dates of birth, and formatted dates of birth of the patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, last name, gender, date of birth, and formatted date of birth for every patient ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Show the first name, last name, gender, date of birth, and formatted date of birth associated with each patient ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Provide the patients' first names, last names, genders, dates of birth, and formatted dates of birth ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, gender, date of birth, and formatted date of birth for each person in the patient database ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, last name, gender, date of birth, and formatted date of birth recorded for all patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS dateOfBirthh SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the ID issuer, severity, and count of patients who have allergies and an unknown severity but exclude those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID issuer, severity, and count of patients with allergies and an unknown severity, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Show the ID issuer, severity, and count of patients who have allergies with an unknown severity, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Provide the ID issuer, severity, and count of patients with allergies where the severity is unknown, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID issuer, severity, and count of patients who have allergies and an unidentified severity, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID issuer, severity, and count of patients with allergies and an unspecified severity, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Show the ID issuer, severity, and count of patients who have allergies and an undetermined severity, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Provide the ID issuer, severity, and count of patients with allergies where the severity is unknown, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID issuer, severity, and count of patients who have allergies and an unspecified severity, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID issuer, severity, and count of patients with allergies and an unknown severity, excluding those with the ID issuer CLI","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer, r1.severity AS severity, COUNT(P.name) AS Count EXCLUDE_GROUPBY(severity) WHERE severity = \"Unknown\" AND idIssuer != CLI SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve all the information for a male patient named Asa Puryear with a date of birth on September 16, 2007, sorted in ascending order by the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the details of a male patient named Asa Puryear, born on September 16, 2007, and sort them in ascending order based on the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Show the complete record of a male patient named Asa Puryear, born on September 16, 2007, sorted in ascending order by the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Provide all the information of a male patient with the name Asa Puryear, born on September 16, 2007, sorted in ascending order according to the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the complete data of a male patient named Asa Puryear, with a date of birth on September 16, 2007, and sort it in ascending order based on the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get all the details of a male patient with the name Asa Puryear, born on September 16, 2007, and sort them in ascending order using the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Show the record of a male patient named Asa Puryear, born on September 16, 2007, sorted in ascending order based on the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Provide the complete information for a male patient named Asa Puryear, born on September 16, 2007, and sort it in ascending order by the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve all the data related to a male patient named Asa Puryear, born on September 16, 2007, and sort it in ascending order based on the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the complete record of a male patient with the name Asa Puryear, born on September 16, 2007, and sort it in ascending order according to the primary key ","completion":"s{UNIQUE}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},

    {"prompt":"Retrieve the unique hospital service identifier and count the number of occurrences of its name ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID and count of the hospital service, ensuring uniqueness in the context ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the hospital service ID and count the occurrences of its name ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the unique ID of a hospital service and count the number of times its name appears ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the identifier and count the occurrences of the name for a specific hospital service ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID and count of a hospital service, ensuring it is unique in the given context ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the unique ID of a hospital service along with the count of its name occurrences ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the identifier and count the instances of a hospital service name, considering uniqueness in the context ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the hospital service ID and count the number of times its name appears, ensuring uniqueness ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the unique identifier of a hospital service and count the occurrences of its name ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.id AS id, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the city, consent sharing status, and count of patients living in addresses within Brentwood ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the count of patients residing in Brentwood, along with their city and consent sharing status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the number of patients in Brentwood, excluding duplicate cities, and include their city, consent sharing status, and count ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the count of patients living in Brentwood, excluding duplicate cities, and include their city, consent sharing status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients in Brentwood, considering unique cities, and include their city, consent sharing status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients residing in Brentwood, excluding duplicate cities, and include their city, consent sharing status, and count ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients in Brentwood, excluding duplicate cities, and include their city, consent sharing status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients living in Brentwood, excluding duplicate cities, and include their city, consent sharing status and count ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients residing in Brentwood, excluding duplicate cities, and include their city, consent sharing status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the count of patients in Brentwood, considering unique cities, and include their city, consent sharing status and count ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the patients associated with signals ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals associated with patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the patients connected to signals ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals connected to patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the patients related to signals ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals related to patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the patients linked to signals ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals linked to patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the patients associated with recorded signals ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals recorded for patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},

    {"prompt":"Retrieve the healthcare activities associated with signals and their corresponding codes and patient classes, excluding those with a missing patient class, and count the number of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the codes and patient classes of the healthcare activities associated with signals, along with the count of signals, excluding those with a null patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the codes and patient classes of the healthcare activities associated with signals, excluding those with an undefined patient class, and count the total number of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the healthcare activity codes and patient classes for the signals, excluding those with an unspecified patient class, and calculate the count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the codes and patient classes of the healthcare activities connected to the signals, excluding those with a non-applicable patient class, and count the number of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the codes and patient classes of the healthcare activities associated with the signals, excluding those with an invalid patient class, and count the total signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the codes and patient classes of the healthcare activities linked to the signals, excluding those with a missing patient class, and calculate the count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the healthcare activity codes and patient classes associated with the signals, excluding those with a null patient class, and count the total number of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the codes and patient classes of the healthcare activities associated with the signals, excluding those with a patient class of NA, and count the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the codes and patient classes of the healthcare activities associated with the signals, excluding those with an unspecified patient class, and calculate the count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the name, ID number, first name, last name, date of birth, signal ID, description, and signal date for patients associated with signals, where the patients have an ID issuer of IBM ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient name, ID number, first name, last name, date of birth, signal ID, description, and signal date for signals associated with patients who have an NH ID issued by IBM ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient name, ID number, first name, last name, date of birth, signal ID, description, and signal date for patients connected to signals, where the patients have an NH ID issuer of IBM ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient's name, ID number, first name, last name, date of birth, signal ID, description, and signal date for signals associated with patients having an ID issuer of IBM ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient's name, ID number, first name, last name, date of birth, signal ID, description, and signal date for patients associated with signals, where the patients have an IBM ID issuer ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient name, ID number, first name, last name, date of birth, signal ID, description, and signal date for signals associated with patients having an NH ID issued by IBM ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient name, ID number, first name, last name, date of birth, signal ID, description, and signal date for patients connected to signals, where the patients have an IBM ID issuer ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient's name, ID number, first name, last name, date of birth, signal ID, description, and signal date for signals associated with patients having an NH ID issuer of IBM ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient's name, ID number, first name, last name, date of birth, signal ID, description, and signal date for patients associated with signals, where the patients have an IBM ID issuer and an NH ID ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient name, ID number, first name, last name, date of birth, signal ID, description, and signal date for signals associated with patients having an ID issuer of IBM and an NH ID ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},

    {"prompt":"Retrieve the orientation code and count of individuals in the SexualOrientation category ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the orientation code and count of people in the SexualOrientation group ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the code and count of individuals' orientation in the SexualOrientation section ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the orientation code and count of people's orientations in the SexualOrientation category ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the code and count of orientation values in the SexualOrientation group ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the orientation code and count of individuals' orientations in the SexualOrientation section ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the code and count of orientation codes in the SexualOrientation category ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the orientation code and count of people's orientation codes in the SexualOrientation group ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the code and count of individuals' orientation codes in the SexualOrientation section ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the orientation code and count of people's orientation codes in the SexualOrientation category ","completion":"s{UNIQUE}=>(@P SexualOrientation:*); RETURN P.orientation AS Code, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the signals associated with diagnostic procedures and return the count of signals and their corresponding fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the diagnostic procedures linked to signals and return the count of signals and their respective fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedures related to signals and return the count of signals along with their fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of signals associated with diagnostic procedures and their corresponding fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the signals that are associated with diagnostic procedures and return the count of signals along with their fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of signals associated with diagnostic procedures and their respective fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedures that are linked to signals and return the count of signals and their fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the diagnostic procedures associated with signals and return the count of signals and their respective fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of signals associated with diagnostic procedures and their fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the signals that are linked to diagnostic procedures and return the count of signals and their corresponding fillerField2 values ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField2 AS fillerField2, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the signals associated with healthcare activities that occurred between January and June of 2022 and return the count of signals, along with their messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the healthcare activities linked to signals that took place in the first half of 2022 and return the count of signals. Also include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the healthcare activities associated with signals from the first half of 2022 and return the count of signals. Include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the count of signals associated with healthcare activities that happened between January and June of 2022. Include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the signals that are associated with healthcare activities in the first six months of 2022. Return the count of signals and include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the count of signals associated with healthcare activities that occurred in the first half of 2022. Include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the healthcare activities linked to signals that took place between January and June of 2022. Return the count of signals and include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the healthcare activities associated with signals from the first half of 2022. Return the count of signals and include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of signals associated with healthcare activities that happened in the first six months of 2022. Include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the signals that are linked to healthcare activities in the first half of 2022. Return the count of signals and include the messageCode, messageType, and patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the signals associated with healthcare activities and return the count of signals, along with their activity code and patient class, excluding any signals where the patient class is not available ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the healthcare activities linked to signals and return the count of signals. Also include the activity code and patient class, excluding any signals where the patient class is not provided ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the healthcare activities associated with signals and return the count of signals. Include the activity code and patient class, but exclude any signals where the patient class is unspecified ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the count of signals associated with healthcare activities. Include the activity code and patient class, excluding any signals with missing patient class information ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the signals that are associated with healthcare activities and return the count of signals. Include the activity code and patient class, filtering out any signals without a patient class specified ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the count of signals associated with healthcare activities, along with their activity code and patient class. Exclude any signals where the patient class is not available ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the healthcare activities linked to signals and return the count of signals. Include the activity code and patient class, excluding any signals where the patient class is unknown ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the healthcare activities associated with signals and return the count of signals. Also include the activity code and patient class, filtering out any signals with unspecified patient class ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the count of signals associated with healthcare activities. Include the activity code and patient class, excluding any signals without patient class information ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the signals that are associated with healthcare activities and return the count of signals. Include the activity code and patient class, but exclude any signals with missing patient class details ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN a.code AS code, r.class AS \"Patient Class\", COUNT(S.name) AS Count WHERE \"Patient Class\" != NA SORT_DESC Count LIMIT 100"},

    {"prompt":"Retrieve the consents and return the count of consents, along with their consent-to-share status ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the consents and count how many consents are available for sharing, along with their consent-to-share status ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consents and provide the count of consents, along with the information about whether consent can be shared or not ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of consents and their consent-to-share status ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consents and return the count of consents, along with their consent-to-share status ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the consents and count how many consents have been given for sharing, including their consent-to-share status ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consents and provide the count of consents, along with the status of consent-to-share ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of consents and their consent-to-share status ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consents and return the count of consents, along with their consent-to-share status ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the consents and count how many consents allow sharing, along with their consent-to-share status ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the patient information and signal details associated with the patient whose NHS ID is 1189032782. Return the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the details of the patient with the NHS ID 1189032782 and retrieve the associated signal information. Return the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the information of the patient identified by the NHS ID 1189032782 and return the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient details for the NHS ID 1189032782 and retrieve the signal information associated with the patient. Return the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the details of the patient with the NHS ID 1189032782 and fetch the signal information linked to the patient. Return the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient information for the NHS ID 1189032782 and retrieve the related signal details. Return the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient details for the NHS ID 1189032782 and return the associated signal information. Include the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the information of the patient with the NHS ID 1189032782 and fetch the signal details associated with the patient. Return the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the details of the patient identified by the NHS ID 1189032782 and fetch the signal information linked to the patient. Return the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the patient information for the NHS ID 1189032782 and retrieve the signal details associated with the patient. Include the patient's ID, NHS ID, first name, family name, date of birth, signal ID, description, and signal date ","completion":"S{UNQUE_SELECT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH= \"1189032782\"});RETURN P.name AS PID, P.id_NH AS id_NH, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},

    {"prompt":"Retrieve the patient information for the patient with the NHS ID 2703861486 and the first name LIONEL and last name INTERIANO. Then, retrieve the associated consent details and the corresponding sexual orientation information. Return the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Get the details of the patient whose NHS ID is 2703861486 and first name is LIONEL and last name is INTERIANO. Then, retrieve the consent information related to the patient and the associated sexual orientation details. Return the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the patient's information for the NHS ID 2703861486 with the first name LIONEL and the last name INTERIANO. Next, fetch the consent details associated with the patient and the corresponding sexual orientation information. Provide the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Get the patient details for the NHS ID 2703861486 and the first name LIONEL and last name INTERIANO. Then, retrieve the consent information linked to the patient and the related sexual orientation details. Return the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the information of the patient with the NHS ID 2703861486, first name LIONEL, and last name INTERIANO. Retrieve the consent details associated with the patient and the corresponding sexual orientation information. Provide the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Get the patient information for the NHS ID 2703861486 with the first name LIONEL and last name INTERIANO. Retrieve the consent details associated with the patient and the related sexual orientation information. Return the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the details of the patient whose NHS ID is 2703861486 and first name is LIONEL and last name is INTERIANO. Then, fetch the consent information associated with the patient and the corresponding sexual orientation details. Return the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Get the details of the patient with the NHS ID 2703861486 and the first name LIONEL and last name INTERIANO. Retrieve the consent information related to the patient and the associated sexual orientation details. Return the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Retrieve the patient's details for the NHS ID 2703861486 with the first name LIONEL and the last name INTERIANO. Fetch the consent information associated with the patient and the corresponding sexual orientation details. Provide the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},
    {"prompt":"Get the patient information for the NHS ID 2703861486 and the first name LIONEL and last name INTERIANO. Retrieve the consent details associated with the patient and the related sexual orientation information. Include the patient's NHS ID, first name, last name, and the location hiding status of the consent ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {id_NH = \"2703861486\" AND firstName = \"LIONEL\" AND familyName = \"INTERIANO\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.id_NH AS id, P.firstName AS firstName, P.familyName AS familyName, C.locationHiding AS locationHiding LIMIT 100"},

    {"prompt":"Retrieve the preferred term and the count of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and the number of occurrences for laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the preferred term and the count of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term and the total count of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and the count for laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and the total occurrence count for laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the preferred term and the count of procedures conducted in the laboratory ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term and the number of occurrences for laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and the count of tests performed in the laboratory ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and the total count of laboratory procedures conducted ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the signal ID, description, and event date for signals with the data controller psm_dev_v1_0 where the description is not empty ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Get the unique identifier, description, and date of occurrence for signals managed by the data controller psm_dev_v1_0 excluding those with no description ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Fetch the signal ID, description, and event date of signals associated with the data controller psm_dev_v1_0 while excluding signals without a description ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Obtain the signal ID, description, and date of the event for signals controlled by psm_dev_v1_0 where the description is present ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, and event date for signals managed by the data controller psm_dev_v1_0 excluding those with no description ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Get the unique identifier, description, and date of occurrence for signals with the data controller psm_dev_v1_0 where the description field is not empty ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Fetch the signal ID, description, and event date of signals associated with the data controller psm_dev_v1_0 while excluding signals with an empty description ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Obtain the signal ID, description, and date of the event for signals controlled by psm_dev_v1_0 where the description is not null ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, and event date for signals managed by the data controller psm_dev_v1_0 excluding those without a description ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Get the unique identifier, description, and date of occurrence for signals associated with the data controller psm_dev_v1_0 where the description field is present ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},

    {"prompt":"Retrieve the first name, family name, gender, date of birth, and age of patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first name, family name, gender, date of birth, and calculate their age ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Fetch the first name, last name, gender, date of birth, and age of patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the patients' first name, last name, gender, date of birth, and calculate their age ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, family name, gender, date of birth, and age of the patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first name, last name, gender, date of birth, and their age in years ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Fetch the first name, last name, gender, date of birth, and age of patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the patients' first name, last name, gender, date of birth, and calculate their age ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, family name, gender, date of birth, and age of the patients ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first name, family name, gender, date of birth, and calculate their age ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the NHS number, date of birth, formatted date of birth, and age of patients associated with IBM and their corresponding address and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NHS number, date of birth, formatted date of birth, and age of patients who live at a specific address and have a particular sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Fetch the NHS number, date of birth, formatted date of birth, and age of patients associated with IBM, along with their address and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the NHS number, date of birth, formatted date of birth, and age of patients who reside at a specific address and have a specific sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the NHS number, date of birth, formatted date of birth, and age of patients associated with IBM, considering their address and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NHS number, date of birth, formatted date of birth, and age of patients residing at a specific address and with a specific sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Fetch the NHS number, date of birth, formatted date of birth, and age of patients associated with IBM and their corresponding address and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the NHS number, date of birth, formatted date of birth, and age of patients who live at a particular address and have a certain sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the NHS number, date of birth, formatted date of birth, and age of patients associated with IBM, including their address and sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the NHS number, date of birth, formatted date of birth, and age of patients residing at a specific address and with a specific sexual orientation ","completion":"s{UNIQUE}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the message type, message code, and total count of signals with specific message codes, excluding duplicate message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the type of message, code of message, and the total number of signals with specific message codes, excluding repeated message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Fetch the message type, message code, and count of signals, excluding duplicate message codes, that have specific message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Obtain the type of message, code of message, and the overall count of signals with specific message codes, excluding duplicate message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message type, message code, and the total count of signals excluding repeated message codes, that match specific message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the type of message, code of message, and count of signals, excluding duplicate message codes, that have specific message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Fetch the message type, message code, and total count of signals, excluding duplicate message codes, that are associated with specific message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Obtain the type of message, code of message, and the overall count of signals with specific message codes, excluding repeated message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message type, message code, and count of signals, excluding duplicate message codes, that correspond to specific message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the type of message, code of message, and the total count of signals, excluding duplicate message codes, that have specific message codes ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},

    {"prompt":"Retrieve the ID issuer, another ID issuer, and the total count of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the issuer of the ID, an alternative issuer of the ID, and the overall count of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Fetch the ID issuer, another ID issuer, and the count of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Obtain the issuer of the ID, an alternative ID issuer, and the total number of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the ID issuer, ID issuer for another purpose, and the total count of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the issuer of the identification, a different issuer of the identification, and the count of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Fetch the ID issuer, another ID issuer, and the total count of patients registered ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Obtain the issuer of the ID, an alternative issuer of the ID, and the overall count of patients in the system ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the ID issuer, ID issuer for a different purpose, and the count of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the issuer of the identification, an additional issuer of the identification, and the total number of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.idIssuer_PI AS idIssuer_PI, COUNT(P.name) AS Total_Count LIMIT 100"},

    {"prompt":"Return the gender, city, and count of patients who have allergies and are associated with a specific sexual orientation, excluding the count based on city, where gender is not null ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Retrieve the gender, city, and total count of patients with allergies and an association with a particular sexual orientation, excluding the count based on city, where the gender is present ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Get the gender, city, and count of patients who have allergies and are linked to a specific sexual orientation, excluding the count based on city, where the gender value is available ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Obtain the gender, city, and total number of patients who have allergies and are associated with a particular sexual orientation, excluding the count based on city, where the gender is not missing ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Fetch the gender, city, and count of patients who have allergies and are connected to a specific sexual orientation, excluding the count based on city, where the gender is not undefined ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Retrieve the gender, city, and total count of patients with allergies and an association with a particular sexual orientation, excluding the count based on city, where the gender is known ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Get the gender, city, and count of patients who have allergies and are linked to a specific sexual orientation, excluding the count based on city, where the gender is specified ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Obtain the gender, city, and total number of patients who have allergies and are associated with a particular sexual orientation, excluding the count based on city, where the gender is provided ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Fetch the gender, city, and count of patients who have allergies and are connected to a specific sexual orientation, excluding the count based on city, where the gender is not empty ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Retrieve the gender, city, and total count of patients with allergies and an association with a particular sexual orientation, excluding the count based on city, where the gender is recorded ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},

    {"prompt":"Return the name and count of active problems for each patient ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the name and total count of active problems associated with each patient ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the names and respective counts of active problems for all patients ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Obtain the name and count of active problems recorded for each patient ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Fetch the names and total count of active problems reported for each patient ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the name and count of active problems for every patient in the dataset ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Get the names and respective counts of active problems encountered by each patient ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Obtain the name and count of active problems found in the patient records ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Fetch the names and total count of active problems documented for each patient ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},
    {"prompt":"Retrieve the name and count of active problems documented for each patient ","completion":"s{UNIQUE}=>(@P ActiveProblem:*); RETURN P.name AS Name, COUNT(P.name) AS COUNT LIMIT 100"},

    {"prompt":"Return the identification type, severity of allergies, gender, sexual orientation, and count for patients with non-2021 allergies ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the type of identification, severity level of allergies, gender, sexual orientation, and count for patients with allergies excluding the year 2021 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the identification type, severity of allergies, gender, sexual orientation, and count for patients who have allergies other than in 2021 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the type of ID, severity of allergies, gender, sexual orientation, and count for patients with allergies recorded in years other than 2021 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Fetch the ID type, severity of allergies, gender, sexual orientation, and count for patients with allergies excluding the year 2021 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID type, severity level of allergies, gender, sexual orientation, and count for patients who have allergies recorded in years other than 2021 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the identification type, severity of allergies, gender, sexual orientation, and count for patients who have allergies but not in 2021 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the type of identification, severity of allergies, gender, sexual orientation, and count for patients with non-2021 allergies ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Fetch the ID type, severity of allergies, gender, sexual orientation, and count for patients with allergies excluding the year 2021 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the identification type, severity of allergies, gender, sexual orientation, and count for patients who have allergies in years other than 2021 ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},

    {"prompt":"Return the filler reference and count of orders based on the filler reference ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference and count of orders associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference and count of orders using the filler reference field ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Obtain the filler reference and count of orders linked to it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Fetch the filler reference and total count of orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference and the number of orders recorded ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference and count of orders for analysis ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Obtain the filler reference and the total number of orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Fetch the filler reference and calculate the count of orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference and count of orders placed ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},

    {"prompt":"Return the document type and count of signals based on the document type ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document type and count of signals associated with it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document type and count of signals using the document type field ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document type and count of signals linked to it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Fetch the document type and total count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document type and the number of signals recorded ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document type and count of signals for analysis ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document type and the total number of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Fetch the document type and calculate the count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document type and count of signals received ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"Return the document status and count of signals excluding those with no document status ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document status and count of signals where the document status is not empty ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document status and total count of signals with a valid document status ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document status and count of signals excluding those without a document status ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Fetch the document status and calculate the count of signals that have a document status ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document status and the number of signals with a valid document status ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document status and count of signals for analysis, excluding those without a document status ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document status and the total number of signals with a specified document status ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Fetch the document status and count of signals with a valid document status ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document status and count of signals, excluding those without a document status, for further analysis ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},

    {"prompt":"Return the preferred term and count of hospital services ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and calculate the count of hospital services ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and total count of hospital services ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term and count of hospital services available ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the preferred term and calculate the total number of hospital services ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and count of hospital services for analysis ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and calculate the count of available hospital services ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term and total count of hospital services ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the preferred term and count of hospital services offered ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and calculate the total number of hospital services provided ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the location hiding status and count of consents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the location hiding status and calculate the count of consents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the location hiding status and total count of consents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the location hiding status and count of consents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the location hiding status and calculate the total number of consents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the location hiding status and count of consents for analysis ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the location hiding status and calculate the count of available consents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the location hiding status and total count of consents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Fetch the location hiding status and count of consents received ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the location hiding status and calculate the total number of consents granted ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the room and count of assigned signals to the point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the assigned signals and their corresponding room numbers with the count ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room and calculate the count of signals assigned to the point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the room and count of signals that have been assigned to the point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Fetch the room and calculate the total count of signals assigned to the specific point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room and count of signals that have been assigned to the designated point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room and calculate the count of signals associated with the assigned point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the room and count of signals assigned to the specific point of care location ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Fetch the room and calculate the total count of signals linked to the assigned point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room and count of signals that have been assigned to the designated point of care setting ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the message type, message code, and total count of signals excluding duplicates based on the message code, specifically for OMG or ADT ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the signal's message type, message code, and count of signals, excluding repetitions of the same message code, where the message code is either OMG or ADT ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Return the message type, message code, and the total count of signals, excluding duplicates of the same message code (OMG or ADT) ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Obtain the message type, message code, and count of signals, excluding duplicates based on the message code, which can be OMG or ADT ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the messageType, messageCode, and the total count of signals, excluding duplicate message codes (OMG or ADT) ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the message type, message code, and count of signals, excluding repetitions of the same message code, specifically OMG or ADT ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Return the signal's message type, message code, and the total count of signals, excluding duplicates based on the message code, where the message code is either OMG or ADT ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Obtain the messageType, messageCode, and count of signals, excluding duplicates of the same message code (OMG or ADT) ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message type, message code, and the total count of signals, excluding duplicates based on the message code, which can be OMG or ADT ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the message type, message code, and count of signals, excluding repetitions of the same message code (OMG or ADT) ","completion":"s{UNIQUE}=>(@S Signal:*);RETURN S.messageType AS messageType, S.messageCode AS messageCode, COUNT(S.name) AS Total_count EXCLUDE_GROUPBY(messageCode) WHERE messageCode = OMG OR messageCode = ADT SORT_ASC Total_count LIMIT 100"},

    {"prompt":"Retrieve the coding system and count of diseases or syndromes, excluding duplicates ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and the total count of diseases or syndromes without repetitions ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and the count of unique diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system and the number of diseases or syndromes, excluding duplicates ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and count of distinct diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and the total count of unique diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system and the count of diseases or syndromes, excluding repetitions ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system and count of diseases or syndromes without duplicates ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and the total count of distinct diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and the count of unique diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.codingSystem AS codingSystem, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the consent status for sharing SCR (Summary Care Record) and the count of consent records ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the SCR consent status and the total count of consent entries ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to share status and the number of consent records ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the consent status for sharing SCR and the count of consent documents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to share status and the total number of consent records ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the SCR consent status for sharing and the count of consent entries ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the consent to share SCR status and the total count of consent records ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to share status and the number of consent documents ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the consent status for sharing SCR and the count of consent records ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to share status and the total number of consent entries ","completion":"s{UNIQUE}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the document status and the count of signals where the document status is not null ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the status of the documents and the total count of signals excluding the ones with null document status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document status and the number of signals that have a non-null document status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document status and the count of signals where the document status is not empty ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Return the status of the documents and the total count of signals excluding those with a null document status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document status and the count of signals with a non-null document status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document status and the number of signals that have a non-empty document status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document status and the count of signals where the document status is not NA ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Return the status of the documents and the total count of signals excluding those with an NA document status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document status and the count of signals with a non-NA document status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},

    {"prompt":"Return the patient class and the count of signals associated with outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the classification of patients and the total count of signals associated with outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and the number of signals associated with outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the class of patients and the count of signals related to outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Return the patient classification and the total count of signals associated with outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and the count of signals associated with outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and the number of signals linked to outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Obtain the classification of patients and the count of signals associated with outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Return the class of patients and the total count of signals associated with outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and the count of signals associated with outpatient healthcare activities ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH{class = \"Outpatient\"}]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},

    {"prompt":"Return the room and the count of signals that have been assigned to a point of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room and the total count of signals that have been assigned to a specific point of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room and the number of signals that have been assigned to a point of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the assigned room and the count of signals associated with a point of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the room and the count of signals that have been assigned to a specific location ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room and the total count of signals that have been assigned to a point of care facility ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the room and the number of signals that have been assigned to a point of care setting ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the assigned room and the count of signals associated with a specific point of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Return the room and the count of signals that have been assigned to a designated area of care ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the room and the total count of signals that have been assigned to a particular point of care location ","completion":"s{UNIQUE}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.room AS Room, COUNT(p.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the sexual orientation associated with patients who have allergies ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the sexual orientation of patients who are allergic to certain substances ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the sexual orientation of patients with recorded allergies ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Return the sexual orientation linked to patients who have reported allergies ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation of patients who have documented allergies ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the sexual orientation associated with patients having allergies in their medical records ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the sexual orientation of patients who are known to have allergies ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Return the sexual orientation linked to patients with confirmed allergies ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation of patients who have reported allergic reactions ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the sexual orientation associated with patients diagnosed with allergies ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},

    {"prompt":"Retrieve the patient information associated with a specific signal ID ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the details of a patient linked to a particular signal ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the information of a patient related to a specific signal in the system ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Return the patient's data for a particular signal identified by its ID ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the details of a patient connected to a specific signal record ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the information of a patient associated with a particular signal event ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the patient's data for a specific signal occurrence in the system ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Return the details of a patient linked to a particular signal entry ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the information of a patient recorded in a specific signal instance ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the data of a patient connected to a particular signal occurrence ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_NH AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},

    {"prompt":"Retrieve the count of patients who consent to share their information and live in Brentwood city ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients residing in Brentwood city who have consented to share their data ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the count of patients in Brentwood city who have given consent for data sharing ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the total number of patients in Brentwood city who have consented to share their information ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients residing in Brentwood city and consenting to share their data ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients in Brentwood city who have agreed to share their information ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the total count of patients who live in Brentwood city and have given consent for data sharing ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the count of patients in Brentwood city with consent for data sharing ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the number of patients who reside in Brentwood city and consent to share their data ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the count of patients in Brentwood city who have provided consent for data sharing ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},

    {"prompt":"Return the total number of signals and patients associated with those signals ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Get the count of signals and patients linked together ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Retrieve the total number of signals and corresponding patients ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Obtain the count of signals and the number of patients associated with them ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Return the total count of signals and patients in the association ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Get the number of signals and patients that are connected ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Retrieve the count of signals and patients in the association ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Obtain the total number of signals and patients that are linked together ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Return the count of signals and the count of patients involved in the association ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Get the number of signals and patients associated with each other ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},

    {"prompt":"Return the SCR consent status, message code, and message type for signals associated with patients who have given consent ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the SCR consent to store, message code, and message type for signals linked to consenting patients ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent to share, message code, and message type for signals associated with patients who have granted consent ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the consent status for storing SCR, along with the message code and message type for signals linked to consenting patients ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the consent status for SCR storage, message code, and message type for signals associated with patients who have given consent ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the SCR consent to store, message code, and message type for signals that are connected to patients who have provided consent ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the consent status for storing SCR, message code, and message type for signals associated with patients who have given their consent ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the SCR consent to share, message code, and message type for signals that are linked to patients who have consented ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the consent status for SCR storage, message code, and message type for signals associated with patients who have consented ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the SCR consent to store, message code, and message type for signals associated with patients who have granted consent ","completion":"s{UNIQUE_SELECT}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the data controller and count of signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the data controller and count of recorded signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the data controller and count of the signal entries ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the data controller and count of the recorded signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the data controller and count of the signal instances ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the data controller and count of the signals captured ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Return the data controller and count of the signal records ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the data controller and count of the signal data ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the data controller and count of the signal entries ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the data controller and count of the recorded signals ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Count the number of patients residing at different addresses ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the total count of patients based on their residential addresses ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of patients living at various addresses ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the total number of patients associated with different residential locations ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of patients and their corresponding addresses ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Find out the number of patients residing at distinct addresses ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the total patients based on their residential addresses ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the count of patients living at different addresses ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the number of patients associated with various residential locations ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of patients and their respective addresses ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN UCOUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Get the signal ID, description, date and time of signals managed by the data controller psm_dev_v1_0 where the description is not empty ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the unique identifier, description, and date and time of signals associated with the data controller psm_dev_v1_0 excluding those with no description ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Obtain the signal ID, description, date and time of signals that are under the data control of psm_dev_v1_0 and have a valid description ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the unique signal identifier, description, and event date and time for signals managed by the data controller psm_dev_v1_0 where the description field is not null ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Get the ID, description, and timestamp of signals that are handled by the data controller psm_dev_v1_0 excluding those without a description ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Obtain the signal ID, description, and date and time for signals controlled by the data controller psm_dev_v1_0 where the description is not empty ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the unique signal identifier, description, and event date for signals associated with the data controller psm_dev_v1_0 excluding those with a missing description ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Get the signal ID, description, and timestamp of signals managed by the data controller psm_dev_v1_0 where the description field is populated ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Obtain the unique identifier, description, and event date and time for signals under the control of psm_dev_v1_0 with a non-empty description ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, and date and time of signals associated with the data controller psm_dev_v1_0 excluding those without a description ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},

    {"prompt":"Get the coding system and count of active problems recorded in the system ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and total count of active problems in the database ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system and the number of active problems available ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the active problem's coding system and its count ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and coding system of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and count of existing active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the count and coding system for active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and total count of active issues ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and coding system of active problems in the system ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system and count of active problems recorded ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the ethnicity and count of patients in the dataset ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count and ethnicity of individuals in the patient records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the ethnicity and total count of patients available ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count and ethnicity of patients recorded ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the ethnicity and count of individuals in the patient database ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count and ethnicity of patients included ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ethnicity and total count of patients in the system ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count and ethnicity of individuals in the patient dataset ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the ethnicity and count of patients listed ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count and ethnicity of patients in the records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.ethnicity AS \"ethnicity\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the document status and count of signals where the document status is not null ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the count and document status of signals excluding those with null document status ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document status and total count of non-null document statuses in the signal records ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count and document status of signals with valid document status values ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document status and count of signals that have a non-null document status ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the count and document status of signals excluding those with missing document status ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document status and total count of signals where the document status is not empty ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the count and document status of signals with non-null document status values ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document status and count of signals that have a valid document status recorded ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count and document status of signals excluding those with empty document status entries ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentStatus AS documentStatus, COUNT(P.name) AS Cnt WHERE documentStatus !~ NA SORT_ASC Cnt LIMIT 100"},

    {"prompt":"Retrieve the total count of patients along with their corresponding ID issuer and ID number ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the count of patients and their associated ID issuer and ID number ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Obtain the total count of patients along with their ID issuer and NH ID ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients along with their ID issuer and national health ID ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the total count of patients and their respective ID issuer and NH ID ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Obtain the count of patients along with their ID issuer and NH ID ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the total count of patients along with their ID issuer and national health ID ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the count of patients along with their ID issuer and ID number ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Obtain the total count of patients along with their ID issuer and NH ID ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients along with their ID issuer and NH ID ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},

    {"prompt":"Retrieve the severity, type, and identification date of allergies for patients associated with their sexual orientation, excluding duplicate identification dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, and date of identification of allergies for patients associated with their sexual orientation, excluding duplicate dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, and identification date of allergies for patients associated with their sexual orientation, excluding duplicate identification dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, and date of identification of allergies for patients associated with their sexual orientation, excluding duplicate dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, and identification date of allergies for patients associated with their sexual orientation, excluding duplicate identification dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, and date of identification of allergies for patients associated with their sexual orientation, excluding duplicate dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, and identification date of allergies for patients associated with their sexual orientation, excluding duplicate identification dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, and date of identification of allergies for patients associated with their sexual orientation, excluding duplicate dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, and identification date of allergies for patients associated with their sexual orientation, excluding duplicate identification dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, and date of identification of allergies for patients associated with their sexual orientation, excluding duplicate dates ","completion":"S2{UNIQUE}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},

    {"prompt":"Retrieve the message type and total count of signals with the message code ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the message type and count of signals with the message code ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Obtain the type of message and total number of signals with the code ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message type and total count of signals that have the code ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the type of message and count of signals with the code ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Obtain the message type and total count of signals that correspond to the code ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message type and total count of signals identified as ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the type of message and count of signals identified as ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Obtain the message type and total count of signals categorized under ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the type of message and total count of signals categorized as ADT ","completion":"s{UNIQUE}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},

    {"prompt":"Retrieve the SCR consent to share and the count of consents ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the SCR consent to share and the total count of consent records ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the value of SCR consent to share and the count of consent entries ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consent status for sharing SCR and the total count of consents ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the SCR consent status for sharing and the count of consent records ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the value indicating SCR consent to share and the count of consents ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the SCR consent status for sharing and the total count of consents ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the SCR consent to share and the count of consent documents ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the value of SCR consent to share and the total count of consents ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consent status for sharing SCR and the count of consent entries ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the severity, type, date, and formatted date of allergies for patients with specific conditions ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, date, and formatted identification date of allergies for patients meeting certain criteria ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, identification date, and formatted date information for allergies associated with patients ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, identification date, and formatted date for allergies excluding duplicate formatted dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, identification date, and formatted date of allergies while excluding duplicate formatted dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, identification date, and formatted date for allergies with unique formatted dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, identification date, and formatted date of allergies excluding duplicate formatted date entries ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Get the severity, type, identification date, and formatted date of allergies for unique identification dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Obtain the severity, type, identification date, and formatted date information for allergies with distinct formatted dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},
    {"prompt":"Retrieve the severity, type, identification date, and formatted date of allergies while excluding duplicate formatted date values ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS severity, r1.type AS type, r1.date AS IdentificationDate, MATH_EXP(\"DATE_FMT($IdentificationDate, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_DESC Date_New_Format LIMIT 100"},

    {"prompt":"Retrieve the disease or syndrome codes and count the occurrences ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the disease or syndrome codes and calculate the count ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the codes and count for diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes and count for different diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the disease or syndrome codes and determine the count ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the codes and count for various diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the disease or syndrome codes and count their occurrences ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the codes and count for distinct diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the disease or syndrome codes and calculate their count ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes and count the instances of different diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the patient ID, date of birth, formatted date of birth, and age ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patient's ID, date of birth, formatted date of birth, and calculated age ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the ID, date of birth, formatted date of birth, and age of the patient ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, date of birth, formatted date of birth, and their age ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID number, date of birth, formatted date of birth, and age of the patient ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the patient's ID, date of birth, formatted date of birth, and their calculated age ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, date of birth, formatted date of birth, and age for the patient ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patient's ID, date of birth, formatted date of birth, and their age in years ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the ID number, date of birth, formatted date of birth, and age of the individual ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, date of birth, formatted date of birth, and calculated age for the patient ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the city and count of addresses ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and the total count of addresses ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the city and count of available addresses ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and the number of addresses recorded ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and count of address entries ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the city and total count of addresses listed ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and the count of recorded addresses ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the city and the total number of addresses captured ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the city and count of registered addresses ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and the total count of address records ","completion":"s{UNIQUE}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the consent to share status for patients who have given consent and their associated gender, along with the count of patients, where the count is greater than 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the consent preferences for patients who have provided consent and their corresponding gender, along with the total count of patients, excluding cases where the count is less than or equal to 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Obtain the consent choices for patients who have given consent and their gender, along with the count of patients exceeding 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Retrieve the consent preferences for patients who have agreed to share their information and their gender, along with the count of patients with a count higher than 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the consent statuses for patients who have consented and their gender, along with the count of patients exceeding 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Obtain the consent permissions for patients who have granted consent and their gender, along with the count of patients where the count is greater than 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Retrieve the consent preferences for patients who have agreed to share data and their gender, along with the count of patients where the count exceeds 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the consent choices for patients who have provided consent and their gender, along with the total count of patients exceeding 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Obtain the consent to share status for patients who have given consent and their associated gender, along with the count of patients where the count exceeds 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Retrieve the consent preferences for patients who have granted consent and their corresponding gender, along with the count of patients with a count higher than 1 ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},

    {"prompt":"Retrieve the count of signals associated with healthcare activities for patients in 2022, grouped by patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the total count of signals linked to healthcare activities for different patient classes in the year 2022 ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the number of signals associated with healthcare activities for each patient class in the year 2022 ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of signals related to healthcare activities for patients in 2022, categorized by patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the total count of signals associated with healthcare activities for different patient classes specifically in the year 2022 ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the number of signals linked to healthcare activities for each patient class, limited to the year 2022 ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of signals associated with healthcare activities for patients in the year 2022, with patient classes included ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the total count of signals linked to healthcare activities for different patient classes, considering signals from 2022 ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the number of signals associated with healthcare activities for each patient class, focusing on the year 2022 ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of signals related to healthcare activities for patients in the year 2022, grouped by patient class ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0) = 2022})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Get the count of signals associated with healthcare activities based on the patient type ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the total number of signals linked to healthcare activities categorized by patient type ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the number of signals associated with healthcare activities for each patient type ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the count of signals related to healthcare activities grouped by patient type ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the total count of signals associated with healthcare activities, considering different patient types ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the number of signals linked to healthcare activities based on the patient type ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the count of signals associated with healthcare activities, categorized by patient type ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the total number of signals linked to healthcare activities for each patient type ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the count of signals associated with healthcare activities for different patient types ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the number of signals related to healthcare activities grouped by patient type ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the count of patients residing in each city based on their addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the total number of patients grouped by the city they live in ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of patients for each city based on their residential addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the number of patients residing in different cities and categorize them by the city name ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of patients living in various cities, considering their addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the total count of patients grouped by the city they reside in ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of patients associated with different cities based on their residential addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the number of patients living in each city and categorize them by the city name ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of patients for different cities, considering their addresses ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the total number of patients residing in various cities, grouped by city name ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the count of relationships associated with each patient based on the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the total number of relationships per patient derived from the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Obtain the count of relationships for each patient found in the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the number of relationships per patient based on the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the count of relationships associated with different patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Obtain the total count of relationships grouped by patient ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the count of relationships linked to each patient from the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the number of relationships per patient found in the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Obtain the count of relationships associated with different patients derived from the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the total number of relationships per patient based on the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id, COUNT(*) AS rel_per_patient LIMIT 100"},

    {"prompt":"Retrieve the consent-to-share information (dcrConsentToShare and scrConsentToShare) from the consent records associated with patients who have a known sexual orientation and a count of patients who meet the criteria where the count is greater than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the dcrConsentToShare and scrConsentToShare values from the consent records linked to patients with a known sexual orientation, along with the gender of the patients. Only include patients where the count is greater than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Obtain the consent-to-share details (dcrConsentToShare and scrConsentToShare) from the consent records of patients with a confirmed sexual orientation. Include the gender of the patients and count only those patients with a count greater than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Retrieve the dcrConsentToShare and scrConsentToShare information from the consent records associated with patients who have a documented sexual orientation. Additionally, include the gender of the patients and only consider those patients with a count greater than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the consent-to-share details (dcrConsentToShare and scrConsentToShare) from the consent records of patients who have a known sexual orientation. Include the gender of the patients and count only those patients where the count is higher than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Obtain the dcrConsentToShare and scrConsentToShare values from the consent records associated with patients who have a confirmed sexual orientation. Also, include the gender of the patients and consider only those patients with a count greater than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Retrieve the consent-to-share information (dcrConsentToShare and scrConsentToShare) from the consent records linked to patients with a known sexual orientation. Include the gender of the patients and consider only those patients with a count greater than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Get the dcrConsentToShare and scrConsentToShare values from the consent records associated with patients who have a documented sexual orientation. Additionally, include the gender of the patients and only include patients where the count is greater than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Obtain the consent-to-share details (dcrConsentToShare and scrConsentToShare) from the consent records of patients with a known sexual orientation. Include the gender of the patients and count only those patients with a count higher than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},
    {"prompt":"Retrieve the dcrConsentToShare and scrConsentToShare information from the consent records associated with patients who have a confirmed sexual orientation. Also, include the gender of the patients and consider only those patients with a count greater than 1 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO ]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS dcrConsentToShare, D.scrConsentToShare AS scrConsentToShare, P.gender AS gender, COUNT(P.name) AS Count WHERE Count > 1 LIMIT 100"},

    {"prompt":"Retrieve the preferred terms and count of occurrences for diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms and count the occurrences of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms and count the number of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms and count the occurrences of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms and count the number of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms and count the occurrences of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms and count the number of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred terms and count the occurrences of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred terms and count the number of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms and count the occurrences of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Find the patients who live at a specific address and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients residing at a particular address and their corresponding sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the patients who have an address record and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the patients living at a specific address along with their sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Find the patients whose address is linked to a specific location and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients residing at a particular address and having a recorded sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the patients who have an address entry and are associated with a specific sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the patients living at a specific address and their corresponding sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Find the patients whose address information is available and are associated with a particular sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients residing at a specific address and their corresponding sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},

    {"prompt":"Retrieve the first name, last name, gender, date of birth, and age of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first names, last names, genders, dates of birth, and ages ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the first names, last names, genders, dates of birth, and ages of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Find the patients' first names, last names, genders, dates of birth, and ages ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the patients' first names, last names, genders, dates of birth, and ages ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first names, last names, genders, dates of birth, and ages of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Obtain the first names, last names, genders, dates of birth, and ages of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Find the patients' first names, last names, genders, dates of birth, and ages ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first names, last names, genders, dates of birth, and ages of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first names, last names, genders, dates of birth, and ages ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the preferred term and count of occurrences for diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and count for diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term and count of diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Find the preferred term and count for diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and occurrence count of diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and count of diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the preferred term and occurrence count for diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Find the preferred term and occurrence count of diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and count for diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and occurrence count of diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the document type and count of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document type and count for signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document type and count of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Find the document type and count for signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the type of documents and the corresponding count of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the count and document type for signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the count and document type of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Find the count of signals and their document types ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document type and occurrence count for signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the occurrence count and document type of signals ","completion":"s{UNIQUE}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"Get the signals associated with patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals linked to patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Obtain the signals that are associated with patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Find the signals connected to patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals that have an association with patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals corresponding to patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Obtain the signals that are linked to patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Find the signals associated with the patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Get the signals that have an association with patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},
    {"prompt":"Retrieve the signals that are connected to patients ","completion":"s{UNIQUE}=>(@P Patient:*)<-[@r1 IS_ASSOCIATED_WITH]-(@S Signal:*); LIMIT 100"},

    {"prompt":"Find the patients who have allergies and are associated with sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients who have allergies and are linked to sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the patients with allergies that are associated with sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Find the patients who have allergies and have an association with sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the patients who have allergies and are connected to sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients who have allergies and are associated with sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the patients with allergies that are linked to sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Find the patients who have allergies and have an association with sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the patients who have allergies and are associated with sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the patients who have allergies and are connected to sexual orientation ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},

    {"prompt":"Retrieve the count of patients grouped by their NH ID issuer ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the number of patients based on their NH ID issuer ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the total count of patients with their respective NH ID issuers ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the count of patients categorized by their ID issuer in NH ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the number of patients for each NH ID issuer ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of patients according to their NH ID issuers ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the total number of patients based on their ID issuers in NH ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of patients with their respective NH ID issuers ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of patients grouped by their ID issuers in NH ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the number of patients for each ID issuer in NH ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the count of consents grouped by their dcrConsentToShare value ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of consents based on their dcrConsentToShare value ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the total count of consents with their respective dcrConsentToShare values ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the count of consents categorized by their dcrConsentToShare value ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the number of consents for each dcrConsentToShare value ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the count of consents according to their dcrConsentToShare values ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the total number of consents based on their dcrConsentToShare values ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of consents with their respective dcrConsentToShare values ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the total count of consents grouped by their dcrConsentToShare values ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the number of consents for each dcrConsentToShare value ","completion":"s{UNIQUE_SELECT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the count of laboratory procedures based on their respective codes ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of laboratory procedures for each unique code ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the total count of laboratory procedures grouped by their codes ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the count of laboratory procedures categorized by their specific codes ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the number of laboratory procedures associated with each code ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the count of laboratory procedures with their corresponding codes ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the total number of laboratory procedures according to their unique codes ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of laboratory procedures along with their respective codes ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the total count of laboratory procedures based on their codes ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the number of laboratory procedures for each individual code ","completion":"s{UNIQUE}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the count of signals along with their corresponding SCR consent status, message code, and message type for patients who have given consent to store their data, excluding signals recorded in 2021 ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the number of signals associated with patients who have provided consent to store their data, excluding signals recorded in 2021, and display the SCR consent status, message code, and message type ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of signals for patients who have consented to store their data, excluding signals recorded in 2021. Also, include the SCR consent status, message code, and message type ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of signals, considering only those recorded after 2021, for patients who have consented to store their data. Include the SCR consent status, message code, and message type ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of signals, excluding those recorded in 2021, for patients who have given consent to store their data. Display the SCR consent status, message code, and message type ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the number of signals associated with patients who have provided consent to store their data, excluding signals recorded in 2021. Include the SCR consent status, message code, and message type in the results ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of signals for patients who have consented to store their data, excluding signals recorded in 2021. Also, include the SCR consent status, message code, and message type in the output ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of signals, considering only those recorded after 2021, for patients who have consented to store their data. Display the SCR consent status, message code, and message type along with the count ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of signals, excluding those recorded in 2021, for patients who have given consent to store their data. Include the SCR consent status, message code, and message type in the results ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the number of signals associated with patients who have provided consent to store their data, excluding signals recorded in 2021. Include the SCR consent status, message code, and message type in the count ","completion":"s{UNIQUE}=>(@s Signal {DATE_YEAR($recordedDate+0) != 2021})-[@r1 IS_ASSOCIATED_WITH]->(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN O.scrConsentToShare AS \"SCR Consent To Store\", s.messageCode AS messageCode, s.messageType AS messageType, COUNT(S.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the ID, ID issuer, and date of birth for patients who are older than 20 years. Also, calculate their age based on the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID, ID issuer, and date of birth of patients who are above the age of 20. Additionally, compute their age by subtracting their date of birth from the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID number, ID issuer, and date of birth for patients who are older than 20 years. Calculate their age based on the current date and display it ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID number, ID issuer, and date of birth for patients whose age exceeds 20 years. Compute their age by subtracting their date of birth from the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, ID issuer, and date of birth of patients who are older than 20 years. Calculate their age by subtracting their date of birth from the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID, ID issuer, and date of birth for patients who are above the age of 20. Calculate their age based on the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID number, ID issuer, and date of birth of patients who are older than 20 years. Compute their age by subtracting their date of birth from the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID number, ID issuer, and date of birth for patients whose age exceeds 20 years. Calculate their age based on the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID, ID issuer, and date of birth of patients who are older than 20 years. Compute their age by subtracting their date of birth from the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID, ID issuer, and date of birth for patients who are above the age of 20. Compute their age based on the current date ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*{DATE((CURTIME-$dateOfBirth)/31536000000000) > 20});RETURN P.id_NH AS id_NH, P.idIssuer_NH AS idIssuer, P.id_PI AS id_PI, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE((CURTIME-$dateOfBirth)/31536000000000)\") AS Patient_Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the count of male patients who have an unknown consent status, and exclude grouping by consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the count of male patients with an undisclosed consent status and exclude grouping by the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Count the number of male patients who have not disclosed their consent status, excluding grouping based on the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the count of male patients who have an unspecified consent status, excluding grouping by the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the count of male patients whose consent status is unknown, excluding grouping by the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Count the number of male patients who have not provided consent information, excluding grouping based on the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the count of male patients with an unknown consent status, excluding grouping by the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Get the count of male patients whose consent status is undisclosed, excluding grouping by the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Count the number of male patients who have not specified their consent status, excluding grouping based on the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},
    {"prompt":"Retrieve the count of male patients with an unknown consent status, excluding grouping by the consent status ","completion":"s{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.locationHiding AS locationHiding, D.dcrConsentToShare AS dcrConsentToShare, H.orientation AS orientation, COUNT(P.name) AS Count EXCLUDE_GROUPBY(dcrConsentToShare) WHERE dcrConsentToShare = \"Consent Status Unknown\" AND gender = Male SORT_ASC gender LIMIT 100"},

    {"prompt":"Retrieve the count of consents with the corresponding consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of consent records along with the consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of consents based on the consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of consents and their associated consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of consent entries with the respective consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of consents and their corresponding consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of consents based on the consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of consent records and their associated consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of consents with the corresponding consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of consents along with the consent-to-share status ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.scrConsentToShare AS scrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Get the signal ID, description, date and time, and event date for signals with the specified data controller, excluding those with no description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the ID, description, date and time, and event date of signals associated with the given data controller, excluding those without a description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Count the signals with the provided data controller and retrieve their signal ID, description, signal date and time, and event date, excluding those with no description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Get the event date, signal description, signal ID, and date and time for signals associated with the specified data controller, excluding signals without a description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, date and time, and event date for signals managed by the specified data controller, excluding those without a description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Count the signals associated with the given data controller and retrieve their signal ID, description, signal date and time, and event date, excluding signals without a description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Get the event date, signal description, signal ID, and date and time for signals with the provided data controller, excluding those with no description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, date and time, and event date for signals controlled by the specified data controller, excluding signals without a description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Retrieve the signal ID, description, date and time, and event date for signals controlled by the specified data controller, excluding signals without a description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},
    {"prompt":"Get the event date, signal description, signal ID, and date and time for signals associated with the specified data controller, excluding signals without a description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\"});RETURN S.signalId AS \"Signal ID\",S.description AS description, S.signalDateTime AS DateTime, MATH_EXP(\"DATE_FMT($DateTime, %m/%d/%Y)\") AS Event_Date WHERE description !~ NA SORT_ASC DateTime LIMIT 100"},

    {"prompt":"Retrieve the order control and count the number of signals associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the order control and count how many signals are linked to orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the signals associated with orders and obtain their order control information ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the order control and calculate the count of signals associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the order control and count the total number of signals associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count how many signals are linked to orders and retrieve their order control ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the order control and count the signals that are associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the order control and calculate the count of signals associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of signals associated with orders and obtain their order control information ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the order control and count the signals associated with orders ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.orderControl AS orderControl, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Determine the patient type and count the number of signals associated with healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Identify the patient type and calculate the count of signals linked to healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the signals associated with healthcare activities and retrieve their patient type information ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the patient type and calculate the count of signals associated with healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the patient type and count the total number of signals associated with healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count how many signals are linked to healthcare activities and retrieve their patient type ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the patient type and count the signals that are associated with healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Determine the patient type and calculate the count of signals associated with healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the number of signals associated with healthcare activities and obtain their patient type information ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the patient type and count the signals associated with healthcare activities ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.patientType AS patientType, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Count the number of addresses and display the corresponding city information ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the city of each address and calculate the total count of addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the city and count the number of addresses available ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of addresses and display the respective city for each address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the total count of addresses and provide the associated city information ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count how many addresses there are and show the corresponding city for each address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the city for each address and count the total number of addresses ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of addresses and display the corresponding city for each address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the addresses and provide the city information for each address ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the city for each address and count the total number of addresses available ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Address:*); RETURN P.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Retrieve the ID and date of birth of patients living at addresses associated with IBM, and calculate their formatted date of birth and age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID and date of birth of patients residing at addresses linked to IBM, and convert the date of birth to a formatted version and calculate their age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID and date of birth of patients who live in addresses associated with IBM, and provide their formatted date of birth and age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID and date of birth of patients residing at addresses linked to IBM, and present their formatted date of birth and age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID and date of birth of patients living in addresses associated with IBM, and calculate their formatted date of birth and age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID and date of birth of patients residing at addresses linked to IBM, and convert their date of birth to a formatted version and determine their age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID and date of birth of patients who live in addresses associated with IBM, and provide their formatted date of birth and age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID and date of birth of patients residing at addresses linked to IBM, and present their formatted date of birth and age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the ID and date of birth of patients living in addresses associated with IBM, and calculate their formatted date of birth and age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the ID and date of birth of patients residing at addresses linked to IBM, and convert the date of birth to a formatted version and determine their age ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.id_NH AS id_NH, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the code and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the procedure code and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and count of procedures performed in a laboratory ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the code and total count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the procedure code and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the code and count of procedures conducted in a laboratory setting ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the procedure code and count of laboratory tests ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and total count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Get the city, consent status, and count of patients living in Brentwood ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients residing in Brentwood, along with their city and consent status ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients living in Brentwood, and their corresponding city and consent status ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients in Brentwood, including their city and consent status ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients residing in Brentwood, along with their city and consent status ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients living in Brentwood, along with their city and consent status ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients in Brentwood and their consent status, along with the city ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients residing in Brentwood, including their city and consent status ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the city, consent status, and count of patients living in Brentwood ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients in Brentwood, along with their city and consent status ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},

    {"prompt":"Retrieve the preferred term and count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and count of services provided by hospitals ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and the total count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and preferred term of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and count of services offered by hospitals ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the total count and preferred term of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and the count of hospital services available ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and preferred term of services provided by hospitals ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and total count of hospital services ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and count of services offered by hospitals ","completion":"s{UNIQUE_SELECT}=>(@S HospitalService:*);RETURN S.preferredTerm AS preferredTerm, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the code and count of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and total count of procedures conducted in laboratories ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the code and count of procedures performed in laboratories ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and code of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the code and total count of laboratory tests ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the total count and code of laboratory procedures ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the code and the count of laboratory tests conducted ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count and code of procedures carried out in laboratories ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the code and total count of laboratory examinations ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and count of tests conducted in laboratories ","completion":"q{UNIQUE_SELECT}=>(@s LaboratoryProcedure:*);RETURN s.code AS Code, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the patient's name, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and remaining days ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the patient's node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and the number of days remaining ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the name, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days for the patient ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days until completion ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and determine the remaining days ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the patient's name, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days until completion ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the patient's node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and determine the remaining days remaining for their orders ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the number of days left until completion ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},
    {"prompt":"Get the patient's name, first name, family name, NHS number, date of birth, formatted date of birth, orders date, and calculate the remaining days until the orders are completed ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\",P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS dateOfBirth, P.ordersDate AS ordersDate, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$ordersDate)/864000000000)))\") AS \"Remaining Days\" SORT_ASC DateOFBirth LIMIT 100"},

    {"prompt":"Retrieve the preferred term and count for laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and count of laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and the number of occurrences for laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and count of names associated with laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and the count of occurrences for laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and the number of instances for laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and count for procedures conducted in the laboratory ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and the count of names related to laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and the total count for laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and the number of times it appears in laboratory procedures ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s LaboratoryProcedure:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the first name, last name, gender, date of birth, and age of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the patients' first name, last name, gender, date of birth, and calculate their age ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, gender, date of birth, and age of individuals in the patient records ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, last name, gender, date of birth, and age information of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, gender, date of birth, and age attributes of individuals in the patient dataset ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, last name, gender, date of birth, and calculate the age for each patient ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, gender, date of birth, and age details for patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, last name, gender, date of birth, and determine the age of each patient ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, gender, date of birth, and age information for all patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},
    {"prompt":"Get the first name, last name, gender, date of birth, and age attributes of individuals in the patient records ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.gender AS gender, P.dateOfBirth AS dateOfBirth, MATH_EXP(\"ROUND(DATE((CURTIME - $dateOfBirth)/31536000000000))\") AS Age SORT_ASC dateOfBirth LIMIT 100"},

    {"prompt":"Retrieve the location hiding status and count of individuals in the consent records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the location hiding information and count for each entry in the consent dataset ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the hiding location status and calculate the count for individuals in the consent records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of individuals and their location hiding status in the consent dataset ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the location hiding attribute and count for each person in the consent records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of individuals and determine their location hiding status based on the consent data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the hiding location status and calculate the total count of individuals in the consent records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the location hiding information and count for each entry in the consent dataset ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of individuals and their location hiding status from the consent records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the hiding location status and calculate the count for individuals in the consent dataset ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.locationHiding AS locationHiding, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Retrieve the NHS ID and count of related records per patient in the signal dataset ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the ID number and calculate the count of associated entries per patient in the signal records ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the patient's NHS ID and count the number of related occurrences in the signal dataset ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the ID_NH of each patient and determine the count of associated records in the signal dataset ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the NHS ID and calculate the count of relevant entries per patient in the signal dataset ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the ID_NH of each patient and count the occurrences of their associated records in the signal dataset ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the patient's NHS ID and determine the count of related records in the signal dataset ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the ID_NH of each patient and count the number of related instances in the signal records ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Retrieve the NHS ID and count the occurrences of associated records per patient in the signal dataset ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},
    {"prompt":"Get the ID number and calculate the count of related entries per patient in the signal records ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*)-[@r *]->(@P Patient:*);RETURN P.id_NH AS id_NH, COUNT(*) AS rel_per_patient LIMIT 100"},

    {"prompt":"Calculate the total number of signals and patients associated with the signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Determine the count of signals and patients in the given context ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Retrieve the total number of signals and patients related to each other ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Count the signals and patients that are associated with each other in the given context ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Calculate the combined count of signals and patients in the context of the given signal data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Determine the total number of signals and patients that have an association in the given context ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Count the signals and patients that are associated with each other in the context of the signal data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Calculate the total count of signals and patients in the given signal context ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Determine the count of signals and patients associated with each other based on the given signal data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},
    {"prompt":"Retrieve the total count of signals and patients associated with each other in the given context ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN UCOUNT(S.name) AS Total_Signals, UCOUNT(P.name) AS Patients LIMIT 100"},

    {"prompt":"Return the count of patients associated with their respective sexual orientations ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the orientation and count of patients based on their associations with sexual orientations ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the number of patients for each sexual orientation they are associated with ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Calculate the count of patients based on their associations with different sexual orientations ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the orientation and corresponding count of patients in relation to their sexual orientations ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Determine the count of patients for each sexual orientation they are linked to ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Calculate the number of patients associated with their respective sexual orientations ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the orientation and count of patients according to their associations with sexual orientations ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the patients based on their associations with different sexual orientations ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Calculate the count of patients associated with their respective sexual orientations ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Retrieve the class and count of signals associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the signals for each class associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Determine the number of signals associated with different classes of healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Calculate the count of signals based on their associations with healthcare activity classes ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the class and corresponding count of signals in relation to their associations with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the signals based on their associations with different classes of healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Calculate the number of signals associated with each class of healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the class and count of signals according to their associations with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Determine the count of signals for each class of healthcare activities they are associated with ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Count the signals associated with their respective classes of healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareActivity:*);RETURN r.class AS class, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"Get the data controller and count of signals ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the signals and identify their respective data controllers ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the number of signals and their corresponding data controllers ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the data controller and count of signals ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the count of signals based on their data controllers ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Count the signals for each data controller ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Identify the data controller and count of signals ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Calculate the number of signals associated with each data controller ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the data controller and corresponding count of signals ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Determine the count of signals for each data controller ","completion":"s{UNIQUE}=>(@P Signal:*);RETURN P.dataController AS Data_Controller, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Get the description and count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the signals and retrieve their descriptions ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Determine the number of signals and their respective descriptions ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the description and count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Calculate the count of signals based on their descriptions ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the signals for each description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Identify the description and count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Calculate the number of signals associated with each description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the description and corresponding count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Determine the count of signals for each description ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.description AS description, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the value of fillerField1 and count the associated signals ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of signals associated with each diagnostic procedure and retrieve the value of fillerField1 ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of signals and the value of fillerField1 for diagnostic procedures ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the count of signals linked to each diagnostic procedure and obtain the corresponding fillerField1 value ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the value of fillerField1 and count the signals associated with diagnostic procedures ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the count of signals for each diagnostic procedure and retrieve the value of fillerField1 ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the signals and retrieve the value of fillerField1 for diagnostic procedures ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the count of signals and the corresponding fillerField1 value for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the value of fillerField1 and count the signals associated with diagnostic procedures ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the count of signals and retrieve the value of fillerField1 for each diagnostic procedure ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O DiagnosticProcedure:*);RETURN O.fillerField1 AS fillerField1, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the recorded date, calculate the month, and count the total number of signals recorded in 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Count the signals recorded in 2022, excluding duplicate entries for each unique recorded date ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the total count of signals recorded in 2022, grouped by the corresponding recorded date and month ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded date and calculate the month for signals recorded in 2022, excluding duplicate entries","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Calculate the total count of signals recorded in 2022, excluding duplicate entries for each recorded date ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Obtain the recorded date, calculate the month, and count the total signals recorded in 2022, excluding duplicate entries ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Count the number of signals recorded in 2022, excluding duplicate entries, and group them by the recorded date and month ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded date, calculate the month, and count the total signals recorded in 2022, excluding duplicate entries for each date ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Calculate the month for each recorded date and count the total number of signals recorded in 2022, excluding duplicate entries ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the recorded date, calculate the month, and count the total signals recorded in 2022, excluding duplicate entries ","completion":"s{UNIQUE_SELECT}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},

    {"prompt":"list the consent status of data sharing and count the number of occurrences ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of consent status for data sharing ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the consent status for data sharing and calculate the total count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consent status regarding data sharing and count the instances ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of consent status for sharing data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the consent status for data sharing and calculate the total count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consent status related to data sharing and count the number of instances ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of consent status for sharing data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the consent status for data sharing and calculate the total count ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the consent status of data sharing and count the number of occurrences ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Consent:* );RETURN P.dcrConsentToShare AS dcrConsentToShare, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the coding system of active problems and count the occurrences ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the instances of active problems based on the coding system ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system of active problems and calculate the total count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system associated with active problems and count the occurrences ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the instances of active problems according to the coding system ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the coding system of active problems and calculate the total count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system related to active problems and count the number of occurrences ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the instances of active problems based on the coding system ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system of active problems and calculate the total count ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system of active problems and count the occurrences ","completion":"s{UNIQUE}=>(@s ActiveProblem:*);RETURN s.codingSystem AS codingSystem, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the document type of signals and count the instances ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the occurrences of signals based on their document type ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document type of signals and calculate the total count ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document type associated with signals and count the occurrences ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the instances of signals according to the document type ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the document type of signals and calculate the total count ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document type related to signals and count the number of occurrences ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Count the instances of signals based on the document type ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the document type of signals and calculate the total count ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the document type of signals and count the occurrences ","completion":"s{UNIQUE_SELECT}=>(@P Signal:*); RETURN P.documentType AS documentType, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the data controller, signal ID, and name associated with patients in signals ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, and name of signals related to patients ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal ID, and name connected to patients in signals ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Obtain the data controller, signal ID, and name associated with patients in the signal records ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, and name of signals associated with patients ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal ID, and name linked to patients in the signals ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Obtain the data controller, signal ID, and name associated with patients in the signal dataset ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, and name of signals connected to patients ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal ID, and name associated with patients in the signal records ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},
    {"prompt":"Obtain the data controller, signal ID, and name of signals related to patients ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Patient:*); RETURN S.dataController AS dataController, S.signalId AS signalId, S.name AS name LIMIT 100"},

    {"prompt":"list the ID type, severity, gender, and orientation associated with patients who have allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the identification type, severity, gender, and orientation of patients with allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the type of ID, severity, gender, and orientation connected to patients who have allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the ID type, severity, gender, and orientation associated with patients who have allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the type of ID, severity, gender, and orientation of patients with allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID type, severity, gender, and orientation linked to patients who have allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the type of ID, severity, gender, and orientation associated with patients who have allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID type, severity, gender, and orientation of patients with allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the type of ID, severity, gender, and orientation connected to patients who have allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the ID type, severity, gender, and orientation associated with patients who have allergies, excluding those identified in 2021 ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY{DATE_YEAR($IdentificationDate+0) != 2021}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idType AS idType, r1.severity AS severity, P.gender AS gender, H.orientation AS orientation, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    
    {"prompt":"list the NH ID issuer, NH ID, and the total count of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the issuer of NH IDs, NH IDs, and the total number of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the NH ID issuer, NH ID, and the count of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the issuer of NH IDs, NH IDs, and the count of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the issuer of NH IDs, the NH ID, and the total count of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the NH ID issuer, the NH ID, and the total number of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the issuer of NH IDs, the NH ID, and the count of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the NH ID issuer, the NH ID, and the count of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Retrieve the NH ID issuer, the NH ID, and the total count of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},
    {"prompt":"Get the issuer of NH IDs, the NH ID, and the total number of patients ","completion":"s{UNIQUE}=>(@P Patient:*);RETURN P.idIssuer_NH AS idIssuer, P.id_NH AS id_NH, COUNT(P.name) AS Total_Count LIMIT 100"},

    {"prompt":"list the status and count of signals associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the order status and count of associated signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the status and the total count of signals linked to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status and the count of signals associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the order status and the count of signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status of orders and the total count of associated signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the status of orders and count how many signals are associated ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status of orders and count the number of linked signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the order status and count the total number of associated signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status of orders and determine the count of associated signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN r.status AS status, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the message type and total count of signals with the message code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the type of messages and count how many signals have the message code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message type and count the total number of signals with the code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the signal message type and determine the count of signals with the code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message type and count how many signals are associated with the code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the type of messages and determine the total count of signals with the code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the signal message type and count the number of signals with the code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the message type of signals and count the total number of signals with the code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Retrieve the message type and count the count of signals with the code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},
    {"prompt":"Get the signal message type and determine the total count of signals with the code ADT ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {messageCode = \"ADT\"});RETURN S.messageType AS messageType, COUNT(S.name) AS Total_count SORT_ASC Total_count LIMIT 100"},

    {"prompt":"list the bed information and count the number of signals that have been assigned to a point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the bed details and determine the count of signals that have been assigned to a specific point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the bed information and count how many signals are associated with a particular point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the bed data and determine the total count of signals that have been assigned to a point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the bed information and count the number of signals that have been allocated to a point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the bed details and determine the count of signals that have been assigned to a specific point of care location ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the bed information and count how many signals are linked to a particular point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the bed data and determine the total count of signals that have been assigned to a specific point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Retrieve the bed information and count the count of signals that have been assigned to a point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},
    {"prompt":"Get the bed details and determine the total count of signals that have been associated with a point of care ","completion":"q{UNIQUE_SELECT}=>(@s Signal:*)-[@r HAS_BEEN_ASSIGNED]->(@p PointOfCare:*);RETURN p.bed AS bed, COUNT(p.name) AS cnt SORT_ASC bed LIMIT 100"},

    {"prompt":"list the ID issuer and count the number of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the issuer of the patient ID and calculate the count of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ID issuer and determine the total count of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the issuer of the patient identification number and count how many patients are there ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ID issuer and count the total number of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the issuer of the patient ID and determine the count of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ID issuer and calculate the number of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the issuer of the patient identification number and count the patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the ID issuer and count how many patients there are ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the issuer of the patient ID and determine the total count of patients ","completion":"s{UNIQUE}=>(@P Patient:*); RETURN P.idIssuer_NH AS \"ID_Issuer\", COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"list the sexual orientation and count the number of associated patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the orientation of the patients' sexual orientation and calculate the count of patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the orientation of the sexual orientation and determine the total count of patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the sexual orientation and count how many patients are associated with it ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the orientation of the sexual orientation and count the total number of associated patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the orientation of the patients' sexual orientation and determine the count of patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation and calculate the number of associated patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the sexual orientation and count the patients associated with it ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the orientation of the sexual orientation and count how many patients there are ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the orientation of the patients' sexual orientation and determine the total count of associated patients ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@D SexualOrientation:*);RETURN D.orientation AS orientation, COUNT(P.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the filler reference of the orders and count the total number of orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference of the orders and determine the count of orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference of the orders and calculate the number of orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference of the orders and count how many orders there are ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference of the orders and determine the total count of orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference of the orders and count the orders recorded ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference of the orders and calculate the count of orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference of the orders and determine the number of orders placed ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the filler reference of the orders and count the total number of orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the filler reference of the orders and calculate the count of orders received ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.fillerReference AS fillerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},

    {"prompt":"list the preferred term of active problems and count the total number of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term of active problems and determine the count of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term of active problems and calculate the number of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term of active problems and count how many active problems there are ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term of active problems and determine the total count of active problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term of active problems and count the problems identified as active ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term of active problems and calculate the count of current problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term of active problems and determine the number of ongoing problems ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term of active problems and count the total number of problems marked as active ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term of active problems and calculate the count of problems classified as active ","completion":"q{UNIQUE_IN_CONTEXT}=>(@s ActiveProblem:*);RETURN s.preferredTerm AS preferredTerm, COUNT(s.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the allergy codes associated with patients and count the total number of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the allergy codes of patients and determine the count of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the codes of allergies for patients and calculate the number of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the allergy codes linked to patients and count how many patients there are ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the codes of allergies for patients and determine the total count of patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the allergy codes associated with patients and count the patients with allergies ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the allergy codes of patients and calculate the count of patients with allergies ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the codes of allergies for patients and determine the number of patients affected ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the allergy codes associated with patients and count the total number of patients with allergies ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the codes of allergies for patients and calculate the count of patients diagnosed with allergies ","completion":"S{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r HAS_ALLERGY]->(@s Allergies:*);RETURN s.code AS code, COUNT(p.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"list the information of the male patient with the last name PURYEAR, first name ASA, date of birth 20070916 ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the details of the male patient named ASA PURYEAR born on September 16, 2007 ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the complete record of the male patient with the name ASA PURYEAR, born on September 16, 2007 ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the information of the patient with the last name PURYEAR, first name ASA, date of birth 20070916, and gender Male ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the details of the male patient named ASA PURYEAR born on September 16, 2007, with all available information ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the complete record of the male patient with the name ASA PURYEAR, born on September 16, 2007, and gender Male ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve all the information of the male patient with the last name PURYEAR, first name ASA, date of birth 20070916, and gender Male ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get the full details of the patient named ASA PURYEAR with the specified date of birth and gender. ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Retrieve the entire record of the patient with the last name PURYEAR, first name ASA, date of birth 20070916, and gender Male ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},
    {"prompt":"Get all the available information of the male patient named ASA PURYEAR born on September 16, 2007 ","completion":"s{UNIQUE_SELECT}=>(@P Patient:* {familyName = \"PURYEAR\" AND firstName = \"ASA\" AND dateOfBirth = \"20070916\" AND gender = \"Male\" });RETURN * SORT_ASC evpk LIMIT 100"},

    {"prompt":"list the code and count of occurrences for diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and count of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes and their respective counts for diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of diseases or syndromes along with their corresponding codes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes and the total count for diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of occurrences and the associated codes for diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the codes and the count of instances for diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the code and the count of diseases or syndromes recorded ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count and codes for diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the codes and the corresponding count of diseases or syndromes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P DiseaseOrSyndrome:*); RETURN P.code AS code, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the placer references and their respective count for orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the count of orders for each placer reference ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer references and the total count of orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the count of orders along with their corresponding placer references ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer references and the count of placed orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the placer references and the number of orders recorded ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer references and the count of instances for orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the placer references and the count of orders placed ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Retrieve the placer references and the total count of placed orders ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},
    {"prompt":"Get the placer references and the count of orders assigned to them ","completion":"s{UNIQUE_SELECT}=>(@P Order:* );RETURN P.placerReference AS placerReference, COUNT(P.placerReference) AS \"Order Count\" LIMIT 100"},

    {"prompt":"list the signal ID, message code, description, date, and number of days since the signal was recorded ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Get the signal ID, message code, description, date, and the calculated number of days ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Retrieve the signal ID, message code, description, date, and the remaining days since the signal was recorded ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Get the signal ID, message code, description, date, and the number of days passed since the signal ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Retrieve the signal ID, message code, description, and the date of the signal ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Get the signal ID, message code, description, and the calculated number of days since the signal occurred ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Retrieve the signal ID, message code, description, and the date when the signal was recorded ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Get the signal ID, message code, description, and the days elapsed since the signal ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Retrieve the signal ID, message code, description, and the date associated with the signal ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},
    {"prompt":"Get the signal ID, message code, description, and the number of days since the signal event ","completion":"s=>(@S Signal:* {documentType !~ NA});RETURN S.name AS SignalID S.messageCode AS messageCode,S.description AS description, DISTINCT(S.signalDateTime) AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days SORT_ASC SignalID LIMIT 100"},

    {"prompt":"list the patient class and count of signals associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and the total count of signals associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals related to healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and the number of signals associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and the count of signals linked to healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and the total number of signals associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the patient class and count of signals that are associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},
    {"prompt":"Get the patient class and the count of signals associated with healthcare activities ","completion":"s{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN r.class AS \"Patient Class\", COUNT(S.name) AS Count LIMIT 100"},

    {"prompt":"list the message code, message type, patient class, and count of signals associated with healthcare activities in the first half of 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and the total count of signals associated with healthcare activities between January and June 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and count of signals linked to healthcare activities in the first half of 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and the number of signals associated with healthcare activities during the first six months of 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and count of signals associated with healthcare activities from January to June 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and the count of signals associated with healthcare activities in the first half of 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and count of signals related to healthcare activities in the first half of 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and the total number of signals associated with healthcare activities during the first six months of 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the message code, message type, patient class, and count of signals associated with healthcare activities in the first half of 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the message code, message type, patient class, and the count of signals linked to healthcare activities between January and June 2022 ","completion":"s{UNIQUE_SELECT}=>(@S Signal:*{DATE_YEAR($signalDateTime+0)=2022 AND DATE_MONTH($signalDateTime+0)>=1 AND DATE_MONTH($signalDateTime+0)<=6})-[@r IS_ASSOCIATED_WITH]->(@a HealthCareActivity:*);RETURN S.messageCode AS messageCode, S.messageType AS messageType, r.class AS \"Patient Class\", COUNT(S.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"Count the number of patients with allergies and their respective genders in different cities, excluding those with unknown genders ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"list the count of patients with allergies based on their gender and city, excluding cases where the gender is not specified ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Get the total count of patients with allergies, categorized by gender and city, excluding instances where the gender information is missing ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Count the number of patients with allergies in each city, considering their gender, excluding cases where the gender is unknown ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Retrieve the count of patients with allergies, grouped by gender and city, excluding instances where the gender is not provided ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Get the total count of patients with allergies based on their gender and city, excluding cases where the gender information is unavailable ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Count the number of patients with allergies in different cities, considering their gender, excluding those with unknown genders ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Retrieve the count of patients with allergies, categorized by gender and city, excluding cases where the gender is not specified ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Get the total count of patients with allergies, grouped by gender and city, excluding instances where the gender is unknown ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},
    {"prompt":"Count the number of patients with allergies and their respective genders in each city, excluding instances where the gender information is missing ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS gender, D.city AS city, COUNT(P.name) AS Count EXCLUDE_GROUPBY(city) WHERE gender !~ NA LIMIT 100"},

    {"prompt":"Count the occurrences of different disease or syndrome terms and their respective frequencies ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of disease or syndrome terms and how many times they appear ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms for various diseases or syndromes and their corresponding counts ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of preferred terms related to diseases or syndromes and their frequencies ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the frequency of different disease or syndrome preferred terms ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the number of times each disease or syndrome preferred term appears ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms for diseases or syndromes and count how many times they occur ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of disease or syndrome preferred terms and their respective frequencies ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of preferred terms for diseases or syndromes and their frequencies ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred terms for different diseases or syndromes and their counts ","completion":"s{UNIQUE}=>(@P DiseaseOrSyndrome:*); RETURN P.preferredTerm AS preferredTerm, COUNT(P.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the patient's name, patient ID, first name, last name, date of birth, signal ID, description, and signal date for the patient with the NHS number 9998557805 and issuer IBM ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the details of the patient, including their name, patient ID, first name, last name, date of birth, signal ID, description, and signal date. This is for the patient with the NHS number 9998557805 and issuer IBM ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the information of the patient with the NHS number 9998557805 and issuer IBM. This includes their name, patient ID, first name, last name, date of birth, signal ID, description, and signal date ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the relevant data for the patient identified by the NHS number 9998557805 and issuer IBM. This includes their name, patient ID, first name, last name, date of birth, signal ID, description, and signal date ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the necessary details for the patient whose NHS number is 9998557805 and issuer is IBM. This includes their name, patient ID, first name, last name, date of birth, signal ID, description, and signal date ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the patient's name, patient ID, first name, last name, date of birth, signal ID, description, and signal date for the patient with the NHS number 9998557805 and issuer IBM ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the details of the patient, including their name, patient ID, first name, last name, date of birth, signal ID, description, and signal date. This is for the patient with the NHS number 9998557805 and issuer IBM ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the information of the patient associated with the NHS number 9998557805 and issuer IBM. This includes their name, patient ID, first name, last name, date of birth, signal ID, description, and signal date ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the relevant data for the patient identified by the NHS number 9998557805 and issuer IBM. This includes their name, patient ID, first name, last name, date of birth, signal ID, description, and signal date ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the necessary details for the patient with the NHS number 9998557805 and issuer IBM. This includes their name, patient ID, first name, last name, date of birth, signal ID, description, and signal date ","completion":"s{UNIQUE}=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:* {id_NH = \"9998557805\" AND idIssuer_NH = \"IBM\"});RETURN P.name AS PID, P.id_PI AS PatientID, P.firstName AS firstName,P.familyName AS familyName,P.dateOfBirth AS dateOfBirth,S.signalId AS signalId,S.description AS Description,S.signalDateTime AS Date SORT_ASC Date LIMIT 100"},

    {"prompt":"Get the city and the total count of patients living in that city ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the city and the count of patients residing there ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the city and the number of patients who live there ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the count of patients residing in each city ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the total count of patients living in each city ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the number of patients living in each city ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the count of patients residing in different cities ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the total count of patients in each city ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the count of patients living in various cities ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the number of patients residing in different cities ","completion":"s{UNIQUE}=>(@P Patient:*)-[@r LIVES_IN]->(@D Address:*);RETURN D.city AS City, COUNT(P.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Get the name and total count of home phone numbers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the names and count of home phone numbers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the count of phone numbers for each name ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the total count of home phone numbers for each name ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the number of home phone numbers and their corresponding names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the count of names associated with home phone numbers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the total count of phone numbers assigned to each name ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of home phone numbers for different names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the number of names and their corresponding home phone numbers ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the count of home phone numbers and their respective names ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S PhoneNumberHome:*);RETURN S.name AS Name, COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the signal ID, code, description, date, and remaining days for signals with a valid document type and message code ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Get the ID, code, description, date, and days remaining for signals that have a valid document type and belong to specific message codes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Obtain the signal ID, code, description, date, and days left for signals that meet the criteria of having a non-empty document type and being associated with specific message codes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Retrieve the ID, code, description, date, and remaining days for signals that have a valid document type and fall under certain message codes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Get the signal ID, code, description, date, and days remaining for signals with a valid document type and a message code of either MDM or OML ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Obtain the ID, code, description, date, and days left for signals that meet the criteria of having a document type that is not empty and belonging to either MDM or OML message codes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Retrieve the signal ID, code, description, date, and remaining days for signals with a valid document type and a message code that is either MDM or OML ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Get the ID, code, description, date, and days remaining for signals that have a non-empty document type and belong to the MDM or OML message codes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Obtain the signal ID, code, description, date, and days left for signals that meet the criteria of having a document type that is not NA and being associated with either MDM or OML message codes ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},
    {"prompt":"Retrieve the ID, code, description, date, and remaining days for signals that have a valid document type and fall within the MDM or OML message code categories ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:* {documentType !~ NA AND messageCode = [\"MDM\",\"OML\"]});RETURN S.name AS SignalID, S.messageCode AS code, S.description AS description, S.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Date)/86400000000)))\") AS Days WHERE Days > 0 SORT_DESC Date LIMIT 100"},

    {"prompt":"list the message codes and their respective counts for signals associated with patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the message codes and the count of signals associated with patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the message codes and the number of signals associated with patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the message codes and the count of patient-associated signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the message codes and the total count of signals associated with patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the message codes and the count of signals related to patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the message codes and the total number of patient-related signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Get the message codes and the count of signals associated with patients' records ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Obtain the message codes and the count of signals linked to patients ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},
    {"prompt":"Retrieve the message codes and the total count of signals associated with patients' data ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Signal:*); RETURN P.messageCode AS messageCode, COUNT(P.name) AS Cnt SORT_ASC Cnt LIMIT 100"},

    {"prompt":"list the severity levels and the count of patients with allergies ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the allergy severity and the number of patients affected ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the allergy severity and the count of patients experiencing allergies ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity levels and the total count of patients with allergies ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the severity of allergies and the count of affected patients ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the allergy severity and the total number of patients with allergies ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity levels and the count of patients having allergic reactions ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Get the allergy severity and the count of patients with allergy records ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Obtain the allergy severity and the count of patients who have reported allergies ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},
    {"prompt":"Retrieve the severity levels and the total count of patients with documented allergies ","completion":"s{UNIQUE}=>(@S Patient:*)-[@r HAS_ALLERGY]->(@O Allergies:*);RETURN r.severity AS severity, COUNT(S.name) AS cnt SORT_ASC cnt LIMIT 100"},

    {"prompt":"list the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and current status linked to diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status of diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and current status associated with diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status of diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and current status linked to diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and current status of diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status linked to diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and current status associated with diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},

    {"prompt":"Get the ID, family name, first name, and prefix of the practitioner who was the principal result interpreter for diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"list the practitioner ID, last name, first name, and prefix associated with diagnostic procedures where the practitioner served as the principal result interpreter ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Obtain the ID, family name, first name, and prefix of the practitioner who interpreted the results as the principal for diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the practitioner ID, last name, first name, and prefix involved in diagnostic procedures where the practitioner acted as the principal result interpreter ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, and prefix of the practitioner responsible for interpreting the results as the principal in diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Obtain the practitioner ID, last name, first name, and prefix associated with diagnostic procedures where the practitioner was the principal result interpreter ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, and prefix of the practitioner who served as the principal result interpreter for diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the practitioner ID, last name, first name, and prefix involved in diagnostic procedures where the practitioner was the principal interpreter ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Obtain the ID, family name, first name, and prefix of the practitioner who acted as the principal result interpreter for diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the practitioner ID, last name, first name, and prefix associated with diagnostic procedures where the practitioner was the primary interpreter of results ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},

    {"prompt":"list all information about practitioners who served as the principal result interpreter for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Get complete details of practitioners who acted as the primary interpreter for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Obtain all attributes of practitioners who were the principal result interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Retrieve the full information of practitioners who served as the primary interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Get all data related to practitioners who acted as the principal result interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Obtain complete details of practitioners who were the primary interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Retrieve all attributes of practitioners who served as the principal interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Get the full information of practitioners who acted as the primary result interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Obtain all data related to practitioners who served as the principal interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},
    {"prompt":"Retrieve complete details of practitioners who were the primary result interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * SORT_DESC id LIMIT 100"},

    {"prompt":"list the placer reference of diagnostic procedures associated with signals, which in turn are associated with patients. Calculate the count of distinct statuses associated with these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Get the placer reference of diagnostic procedures linked to signals, which are associated with patients. Calculate the total count of distinct statuses assigned to these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Retrieve the placer reference of diagnostic procedures that are associated with signals, and the signals themselves are associated with patients. Calculate the total count of distinct statuses assigned to these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Get the placer reference of diagnostic procedures that are linked to signals, and these signals are associated with patients. Calculate the count of distinct statuses associated with these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Retrieve the placer reference of diagnostic procedures that are associated with signals, and the signals themselves are associated with patients. Calculate the count of distinct statuses associated with these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Get the placer reference of diagnostic procedures that are linked to signals, which in turn are associated with patients. Calculate the count of distinct statuses assigned to these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Retrieve the placer reference of diagnostic procedures associated with signals, which are associated with patients. Calculate the count of distinct statuses assigned to these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Get the placer reference of diagnostic procedures linked to signals, which are associated with patients. Calculate the total count of distinct statuses associated with these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Retrieve the placer reference of diagnostic procedures that are associated with signals, and the signals themselves are associated with patients. Calculate the total count of distinct statuses assigned to these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Get the placer reference of diagnostic procedures that are linked to signals, and these signals are associated with patients. Calculate the total count of distinct statuses assigned to these diagnostic procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*});RETURN r2.placerReference AS placerReference UCOUNT(r2.status) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},

    {"prompt":"list the ID, family name, first name, and prefix of practitioners who are associated with laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, and prefix of practitioners linked to laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, and prefix of practitioners who have any type of association with laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, and prefix of practitioners associated with laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, and prefix of practitioners who are involved in laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, and prefix of practitioners who have performed laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, and prefix of practitioners associated with specific laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, and prefix of practitioners who are connected to laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, and prefix of practitioners with a role in laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, and prefix of practitioners who have a relationship with laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},

    {"prompt":"list the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with diagnostic procedures for patients through signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status linked to diagnostic procedures for patients via signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve information such as the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status related to diagnostic procedures for patients from signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve information such as the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status related to diagnostic procedures for patients from signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status connected to diagnostic procedures for patients through signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with diagnostic procedures for patients based on signal associations ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve information including the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures associated with patients through signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get details like the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures linked to patients via signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures associated with patients using signal associations ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures connected to patients through signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},

    {"prompt":"list the diagnostic service associated with signals and count the number of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Get the diagnostic service linked to signals and count the occurrences of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Retrieve the diagnostic service connected to signals and calculate the count of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Get the diagnostic service associated with signals and tally the number of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Retrieve the diagnostic service linked to signals and determine the count of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Get the diagnostic service connected to signals and count the occurrences of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Retrieve the diagnostic service associated with signals and calculate the count of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Get the diagnostic service linked to signals and tally the number of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Retrieve the diagnostic service connected to signals and determine the count of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},
    {"prompt":"Get the diagnostic service associated with signals and count the occurrences of diagnostic procedures for each diagnostic service ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN r.diagnosticService AS diagnosticService, COUNT(DP.diagnosticService) AS Count LIMIT 100"},

    {"prompt":"list all information related to practitioners who were the principal result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Get all details of practitioners who served as the primary result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve complete information about practitioners who acted as the main result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the data pertaining to practitioners who held the role of principal result interpreter for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the full details of practitioners who were designated as the principal result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the relevant information about practitioners who served as the primary result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the complete record of practitioners who were responsible for interpreting the results of laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the details of practitioners who held the role of principal result interpreter for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the comprehensive information of practitioners who served as the primary result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the data associated with practitioners who were designated as the principal result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@H LaboratoryProcedure:*);RETURN * LIMIT 100"},

    {"prompt":"Return all the details of diagnostic procedures that are associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"list complete information about diagnostic procedures linked to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the data related to diagnostic procedures that are associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the full details of diagnostic procedures that are connected to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"Return all the information regarding diagnostic procedures that have an association with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the details of diagnostic procedures that are linked to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the comprehensive information of diagnostic procedures associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the data pertaining to diagnostic procedures that have a connection with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the complete record of diagnostic procedures that are associated with orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the information associated with diagnostic procedures that are linked to orders ","completion":"S{UNIQUE_IN_CONTEXT}=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 100"},

    {"prompt":"list the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status of diagnostic procedures associated with patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures linked to patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Return the information of signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures associated with patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the details of signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures that are connected to patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status of diagnostic procedures that have an association with patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Return the information about signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures linked to patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the details of signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures associated with patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status of diagnostic procedures that are associated with patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Return the information of signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures that have a connection with patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the details of signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for diagnostic procedures linked to patient signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},

    {"prompt":"list all the details of practitioners who serve as primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Get the information of practitioners who are designated as primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Return the details of practitioners who hold the role of primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the information about practitioners who serve as the primary care provider for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the relevant data of practitioners who act as primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Return the complete information of practitioners who have been assigned as primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the details of practitioners who fulfill the role of primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Get the complete record of practitioners who are identified as primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Return all the relevant information of practitioners who function as primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the complete data of practitioners who are designated as primary care providers for healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 100"},

    {"prompt":"list the practitioner ID, family name, first name, and prefix for all practitioners associated with diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, last name, first name, and title of practitioners involved in diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the practitioner ID, family name, given name, and prefix for practitioners linked to diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, last name, first name, and prefix of practitioners who perform diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, and prefix for practitioners associated with diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the ID, last name, first name, and prefix of practitioners who are involved in diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the practitioner ID, family name, first name, and prefix for practitioners conducting diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, and prefix of practitioners performing diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the practitioner ID, family name, given name, and prefix for practitioners associated with diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, last name, first name, and prefix of practitioners participating in diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},

    {"prompt":"Get the ID, last name, first name, and prefix of practitioners who acted as assistant result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"list the practitioner ID, family name, given name, and prefix for practitioners who served as assistant result interpreters in laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the ID, family name, first name, and prefix of practitioners who assisted in interpreting results for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, and prefix for practitioners involved as assistant result interpreters in laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, last name, first name, and prefix of practitioners who were assistant result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the practitioner ID, family name, given name, and prefix for practitioners who acted as assistants in interpreting results for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, and prefix of practitioners who assisted in interpreting results for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the practitioner ID, family name, first name, and prefix for practitioners who served as assistant result interpreters for laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the ID, last name, first name, and prefix of practitioners who played a role as assistant result interpreters in laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, and prefix for practitioners who participated as assistant result interpreters in laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},

    {"prompt":"list the ID, last name, first name, and prefix of practitioners who served as principal result interpreters for laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, given name, and prefix for practitioners who acted as principal result interpreters in laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the ID, family name, first name, and prefix of practitioners who were the main result interpreters for laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the practitioner ID, family name, first name, and prefix for practitioners who played a primary role in interpreting results for laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the ID, last name, first name, and prefix of practitioners who acted as principal result interpreters for laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the practitioner ID, family name, given name, and prefix for practitioners who served as the primary result interpreters for laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, and prefix of practitioners who were responsible for interpreting results as principals in laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, and prefix for practitioners who acted as principal interpreters for laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Return the ID, last name, first name, and prefix of practitioners who held the role of principal result interpreters in laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},
    {"prompt":"Retrieve the practitioner ID, family name, first name, and prefix for practitioners who served as the primary interpreters of results in laboratory procedures ","completion":"S{UNIQUE_IN_CONTEXT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerId, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix LIMIT 100"},

    {"prompt":"Get the code, preferred term, and coding system of diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"list the code, preferred term, and coding system for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Return the code, preferred term, and coding system associated with diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the diagnostic procedure code, preferred term, and coding system ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system used for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Return the diagnostic procedure code, preferred term, and coding system ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system assigned to diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the diagnostic procedure code, preferred term, and coding system ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Return the code, preferred term, and coding system of the diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system for the diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"list the preferred term and code of diagnostic procedures associated with orders, along with the count of orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and code of diagnostic procedures linked to orders, and count the number of orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the preferred term, code, and count of diagnostic procedures associated with orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, code, and count of diagnostic procedures that are connected to orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and code of diagnostic procedures that are associated with orders, and calculate the count of orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the preferred term, code, and total count of diagnostic procedures linked to orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term and code of diagnostic procedures connected to orders, and count the number of orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term and code of diagnostic procedures that are associated with orders, and determine the count of orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the preferred term, code, and count of diagnostic procedures associated with orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, code, and count of diagnostic procedures that are linked to orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.preferredTerm AS preferredTerm, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    
    {"prompt":"list the coding system, code, and count of orders associated with diagnostic procedures ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system, code, and count of diagnostic procedures linked to orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system, code, and total count of orders connected to diagnostic procedures ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system, code, and count of diagnostic procedures associated with orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and code of diagnostic procedures that are associated with orders, and calculate the count of orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system, code, and count of orders associated with diagnostic procedures ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and code of diagnostic procedures connected to orders, and count the number of orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and code of diagnostic procedures that are associated with orders, and determine the count of orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system, code, and count of orders associated with diagnostic procedures ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system, code, and count of diagnostic procedures that are linked to orders ","completion":"S=>(@S DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the coding system, code, and count of orders associated with diagnostic procedures where the code is C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system, code, and count of diagnostic procedures linked to orders with the code C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system, code, and total count of orders connected to diagnostic procedures having the code C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system, code, and count of diagnostic procedures associated with orders where the code is C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and code of diagnostic procedures associated with orders, and calculate the count of orders for the code C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system, code, and count of orders associated with diagnostic procedures with the code C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system and code of diagnostic procedures connected to orders, and count the number of orders for the code C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the coding system and code of diagnostic procedures associated with orders, and determine the count of orders where the code is C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the coding system, code, and count of orders associated with diagnostic procedures matching the code C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the coding system, code, and count of diagnostic procedures linked to orders with the code C1623258 ","completion":"S=>(@S DiagnosticProcedure:*{preferredTerm !~ NA})-[@r IS_ASSOCIATED_WITH]->(@O Order:*); RETURN S.codingSystem AS codingSystem, S.code AS code, COUNT(O.name) AS cnt WHERE code = C1623258 SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the ID, first name, and count of orders for practitioners who served as order providers ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID and first name of practitioners who were order providers, along with the total count of orders ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the ID and first name of practitioners who acted as order providers, and calculate the count of orders associated with them ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the ID and first name of practitioners who were providers for orders, and count the number of orders ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID, first name, and count of orders for practitioners who served as providers for orders ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the ID and first name of practitioners who acted as order providers, and determine the count of orders ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the ID and first name of practitioners who were order providers, and count the number of orders they handled ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the ID, first name, and count of orders for practitioners who served as providers for orders ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the ID and first name of practitioners who acted as order providers, along with the total count of orders ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the ID and first name of practitioners who were providers for orders, and calculate the count of associated orders ","completion":"S=>(@S Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*); RETURN S.id AS id, S.firstName AS firstName, COUNT(O.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Get the HL7 message version, message code, and count of healthcare organizations associated with signals where the HL7 message version is different from 2022 and the message code matches OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"list the HL7 message version, message code, and the count of healthcare organizations associated with signals. Filter the signals based on the condition that the year of the latest event datetime is not 2022 and the message code is OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the HL7 message version, message code, and the number of healthcare organizations associated with signals. The signals considered should have a different HL7 message version than 2022 and match the message code OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the HL7 message version, message code, and count of healthcare organizations linked to signals. Only include signals with a non-2022 HL7 message version and a message code equal to OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the HL7 message version, message code, and the count of healthcare organizations associated with signals. The signals should have a year different from 2022 and a message code of OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the HL7 message version, message code, and the number of healthcare organizations associated with signals. Signals will be considered if their HL7 message version is not 2022 and the message code matches OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the HL7 message version, message code, and count of healthcare organizations linked to signals. The signals should have a different HL7 message version than 2022 and a message code of OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the HL7 message version, message code, and the count of healthcare organizations associated with signals. Only include signals where the HL7 message version is not 2022 and the message code is OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"Return the HL7 message version, message code, and the number of healthcare organizations associated with signals. Consider signals with a different HL7 message version than 2022 and a message code matching OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the HL7 message version, message code, and count of healthcare organizations linked to signals. The signals should have a year other than 2022 and a message code of OML ","completion":"S=>(@S Signal:*{DATE_YEAR($latestEventDatetime+0) != 2022})-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*);RETURN S.hl7MessageVersion AS hl7MessageVersion, S.messageCode AS messageCode, COUNT(O.name) AS cnt WHERE messageCode = OML SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the node ID, placer reference, and filler reference of orders ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Get the order name, placer reference, and filler reference for each order ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Return the node ID, placer reference, and filler reference of the orders ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Retrieve the order name, placer reference, and filler reference from the orders ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Get the name, placer reference, and filler reference of each order ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Return the node ID, placer reference, and filler reference associated with the orders ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Retrieve the order's node ID, placer reference, and filler reference ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Get the name, placer reference, and filler reference of the orders ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Return the node ID, placer reference, and filler reference for each order ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},
    {"prompt":"Retrieve the name, placer reference, and filler reference from the orders ","completion":"S=>(@O Order:*);RETURN O.name AS NodeID, O.placerReference AS placerReference, O.fillerReference AS fillerReference LIMIT 100"},

    {"prompt":"Get the data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference associated with the signal and order ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"list the signal's data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"Return the data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference for the signal and order ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference from the associated signal and order ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference for the signal and order ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"Return the signal's data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"Get the information of the data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference associated with the signal and order ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference for the signal and order ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"Return the signal's data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},
    {"prompt":"Get the data controller, signal ID, order control, status, date, enterer's location, order effective date, entering organization, entering device, placer reference, and filler reference from the signal and order ","completion":"S=>(@S Signal)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN S.dataController AS dataController, S.signalId AS signalId, r.orderControl AS orderControl,r.status AS status,O.date AS date,r.enterersLocation AS EnterersLocation,r.orderEffectiveDateTime AS OrderEffectiveDateTime,r.enteringOrganization AS EnteringOrganization,r.enteringDevice AS enteringDevice, O.placerReference AS placerReference, O.fillerReference AS fillerReference SORT_ASC date LIMIT 100"},

    {"prompt":"list the order placer number, practitioner ID, family name, first name, prefix, and ID issuer associated with the order and practitioner ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the order placer number, practitioner ID, family name, first name, prefix, and ID issuer for the order and practitioner ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the order's placer number, practitioner's ID, family name, first name, prefix, and ID issuer ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the placer number of the order, ID of the practitioner, family name of the practitioner, first name of the practitioner, prefix of the practitioner, and ID issuer of the practitioner ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the order's placer number, practitioner's ID, family name, first name, prefix, and ID issuer ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the placer number, practitioner ID, family name, first name, prefix, and ID issuer associated with the order and practitioner ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the placer number of the order, ID of the practitioner, family name of the practitioner, first name of the practitioner, prefix of the practitioner, and ID issuer ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the order placer number, practitioner ID, family name, first name, prefix, and ID issuer from the order and practitioner ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the order's placer number, practitioner's ID, family name, first name, prefix, and ID issuer ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the placer number of the order, ID of the practitioner, family name of the practitioner, first name of the practitioner, prefix of the practitioner, and ID issuer ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list the practitioner ID, family name, first name, prefix, and ID issuer associated with the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, prefix, and ID issuer of the practitioner who acted as the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the practitioner ID, family name, first name, prefix, and ID issuer for the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, prefix, and ID issuer of the practitioner who served as the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, prefix, and ID issuer from the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the practitioner's ID, family name, first name, prefix, and ID issuer associated with the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the ID, family name, first name, prefix, and ID issuer of the practitioner who acted as the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, prefix, and ID issuer associated with the order ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, prefix, and ID issuer of the practitioner who served as the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the practitioner ID, family name, first name, prefix, and ID issuer for the order provider ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"Get the name of the practitioner who acted as the order provider and the count of their participation ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"list the practitioner's name and the total count of their involvement as an order provider ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"Return the practitioner's name and the number of times they served as an order provider ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"Get the practitioner's name and count of their participation as an order provider ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"Retrieve the name of the practitioner who acted as the order provider and the total count of their involvement ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"Return the practitioner's name and the count of their participation as an order provider ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"Get the name of the practitioner and the total number of times they served as an order provider ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"Retrieve the practitioner's name and the count of their participation as an order provider ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"Return the practitioner's name and the total count of their involvement as an order provider ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},
    {"prompt":"Get the name of the practitioner who acted as the order provider and the count of their participation ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 10"},

    {"prompt":"list the name of the practitioner and the count of their participation where the practitioner is C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Get the practitioner's name and the number of times they participated as an order provider, specifically for C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Return the name of the practitioner and the count of their involvement, focusing on the practitioner with the identifier C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Retrieve the practitioner's name and the total count of their participation, specifically for the practitioner identified as C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Get the name of the practitioner and the count of their involvement, considering only instances where the practitioner is C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Retrieve the practitioner's name and the number of times they served as an order provider, specifically for the practitioner with the identifier C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Return the practitioner's name and the count of their participation, with a focus on the practitioner identified as C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Get the name of the practitioner and the total count of their involvement, specifically for instances where the practitioner is C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Retrieve the practitioner's name and the count of their participation, specifically for the practitioner with the identifier C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},
    {"prompt":"Return the name of the practitioner and the total count of their involvement, considering only instances where the practitioner is C41671 ","completion":"S=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count WHERE practitioner = \"C41671\" LIMIT 100"},

    {"prompt":"list the name of the practitioner with the identifier C41671 and the count of their participation ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Get the practitioner's name and the number of times they served as an order provider, specifically for the practitioner identified as C41671 ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Return the name of the practitioner with the identifier C41671 and the count of their involvement ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Retrieve the practitioner's name and the total count of their participation, focusing on the practitioner with the identifier C41671 ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Get the name of the practitioner identified as C41671 and the count of their involvement ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Retrieve the practitioner's name and the number of times they participated as an order provider, specifically for the practitioner with the identifier C41671 ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Return the name of the practitioner and the count of their participation, with a focus on the practitioner identified as C41671 ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Get the name of the practitioner with the identifier C41671 and the total count of their involvement ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Retrieve the practitioner's name and the count of their participation, specifically for the practitioner with the identifier C41671 ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},
    {"prompt":"Return the name of the practitioner identified as C41671 and the total count of their involvement ","completion":"S=>(@OP Practitioner:C41671)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:*);RETURN OP.name AS practitioner, COUNT(OP.name) AS participation_count LIMIT 100"},

    {"prompt":"Get the details of the practitioner who served as an order provider for the order with the placer number 20220524100137.5. Retrieve the order placer number, practitioner ID, family name, first name, prefix, and ID issuer ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the order placer number, practitioner ID, family name, first name, prefix, and ID issuer for the practitioner who acted as an order provider for the order with the identifier 20220524100137.5 ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the order placer number, practitioner ID, family name, first name, prefix, and ID issuer of the practitioner who was responsible for the order with the identifier 20220524100137.5 ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, prefix, and ID issuer for the practitioner who served as an order provider for the order with the placer number 20220524100137.5. Also, retrieve the order placer number ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the order placer number, practitioner ID, family name, first name, prefix, and ID issuer for the practitioner involved in the order with the identifier 20220524100137.5 ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the practitioner ID, family name, first name, prefix, and ID issuer of the practitioner who acted as the order provider for the order identified as 20220524100137.5. Also, include the order placer number ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the details of the practitioner who acted as an order provider for the order with the placer number 20220524100137.5. Retrieve the order placer number, practitioner ID, family name, first name, prefix, and ID issuer ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the order placer number, practitioner ID, family name, first name, prefix, and ID issuer for the practitioner who served as an order provider for the order identified as 20220524100137.5 ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Return the order placer number, practitioner ID, family name, first name, prefix, and ID issuer of the practitioner responsible for the order with the placer number 20220524100137.5 ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, prefix, and ID issuer for the practitioner associated with the order identified as 20220524100137.5. Also, retrieve the order placer number ","completion":"S{UNIQUE_SELECT}=>(@OP Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list the total number of orders associated with the patient identified as 6252041994897922579 through a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Count the total orders linked to the patient with the ID 6252041994897922579 via a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Get the count of all orders that are connected to the patient identified as 6252041994897922579 through a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Calculate the total number of orders associated with the patient having the ID 6252041994897922579 through a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Determine the count of orders that are linked to the patient with the ID 6252041994897922579 through a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Retrieve the total number of orders that are associated with the patient whose ID is 6252041994897922579 through a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Count the total orders connected to the patient identified as 6252041994897922579 via a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Calculate the number of orders that are associated with the patient having the ID 6252041994897922579 through a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Get the count of all orders linked to the patient with the ID 6252041994897922579 through a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},
    {"prompt":"Determine the total number of orders associated with the patient whose ID is 6252041994897922579 through a signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN UCOUNT(O.name) AS Total_orders LIMIT 100"},

    {"prompt":"list the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer associated with the signal psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the details of the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer linked to the specific signal psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve information about the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer that are associated with the signal labeled psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer connected to the specified signal psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve details such as the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer that are associated with the signal identified as psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get information about the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer that are linked to the signal psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer associated with the signal having the identifier psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the details of the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer that are connected to the specific signal psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve information such as the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer associated with the signal labeled psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, order placer number, practitioner ID, practitioner's family name, first name, prefix, and ID issuer linked to the specified signal psm_dev_v1_020220524114612.9265 ","completion":"S=>(@S Signal:psm_dev_v1_020220524114612.9265)-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, OP.id AS PractitionerID, OP.familyName AS familyName,OP.firstName AS firstName, OP.prefix AS prefix, OP.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"Calculate the total number of practitioner relationships associated with the order linked to the patient with ID 6252041994897922579 in the context of the signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Determine the count of practitioner relationships related to the order, which is associated with the patient having the ID 6252041994897922579, within the given signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Count the total number of practitioner relationships that are connected to the order associated with the patient identified by the ID 6252041994897922579 in the given signal context ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Find the total count of practitioner relationships associated with the order, which is linked to the patient with ID 6252041994897922579 in the context of the signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Calculate the total number of practitioner relationships that are associated with the order connected to the patient ID 6252041994897922579 in the given signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Determine the count of practitioner relationships that are linked to the order, which is associated with the patient having the ID 6252041994897922579, within the specified signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Count the total number of practitioner relationships that are associated with the order, which is related to the patient identified by the ID 6252041994897922579, in the given signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Find the total count of practitioner relationships associated with the order, which is connected to the patient with ID 6252041994897922579, within the given signal context ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Calculate the total number of practitioner relationships associated with the order, which is associated with the patient ID 6252041994897922579, in the given signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},
    {"prompt":"Determine the count of practitioner relationships related to the order, which is linked to the patient with ID 6252041994897922579, within the specified signal ","completion":"S2=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN COUNT(OP.name) AS total_Practitioner_rel LIMIT 100"},

    {"prompt":"Provide the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer for the signal associated with the patient ID 6252041994897922579 and the order linked to the practitioner ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"list the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer from the signal associated with the patient ID 6252041994897922579 and the order associated with the practitioner ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer for the signal linked to the patient ID 6252041994897922579 and the order provided by the practitioner ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"Obtain the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer associated with the signal, patient ID 6252041994897922579, and the order placed by the practitioner ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"Retrieve the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer from the signal associated with the patient ID 6252041994897922579 and the order for which the practitioner was the provider ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"Provide the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer for the signal, patient ID 6252041994897922579, and the order that involved the practitioner as the provider ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer associated with the signal, patient ID 6252041994897922579, and the order provided by the practitioner ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"Obtain the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer from the signal associated with the patient ID 6252041994897922579 and the order linked to the practitioner ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"Retrieve the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer for the signal, patient ID 6252041994897922579, and the order associated with the practitioner ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},
    {"prompt":"Provide the signal ID, signal date and time, order placer number, order control, order status, practitioner ID, and NH ID issuer associated with the signal, patient ID 6252041994897922579, and the order provided by the practitioner ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@S Signal:*)-[@r0 IS_ASSOCIATED_WITH]->(@P Patient:6252041994897922579)]-[@r1 IS_ASSOCIATED_WITH]->(@O Order:*)<-[@r2 WAS_ORDER_PROVIDER_FOR]-(@OP Practitioner:*);RETURN S.signalId AS signalId,S.signalDateTime AS signalDateTime, O.name AS OrderPlacerNumber, r1.orderControl AS OrderControl, r1.status AS OrderStatus, OP.id AS PractitionerID, P.idIssuer_NH AS idIssuer_NH SORT_DESC OrderControl LIMIT 100"},

    {"prompt":"list the order placer number, practitioner ID, family name, first name, prefix, and ID issuer for the order and practitioner linked by the action ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the order placer number, ID, family name, first name, prefix, and ID issuer for the order and practitioner involved in the action ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the order placer number, practitioner ID, family name, first name, prefix, and ID issuer associated with the action performed by the practitioner on the order ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the order placer number, ID, family name, first name, prefix, and ID issuer for the order and practitioner connected through the action ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the order placer number, practitioner ID, family name, first name, prefix, and ID issuer for the order and practitioner related by the action ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the order placer number, ID, family name, first name, prefix, and ID issuer associated with the action performed by the practitioner on the order ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the order placer number, practitioner ID, family name, first name, prefix, and ID issuer for the order and practitioner affected by the action ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the order placer number, ID, family name, first name, prefix, and ID issuer linked to the action performed by the practitioner on the order ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the order placer number, practitioner ID, family name, first name, prefix, and ID issuer for the order and practitioner involved in the action ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the order placer number, ID, family name, first name, prefix, and ID issuer associated with the action performed by the practitioner on the order ","completion":"S=>(@O Order:*)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN O.name AS Orderplacernumber, P.id AS id, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list the ID of the practitioner who was the order provider for the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Get the ID of the practitioner who acted upon the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Provide the ID of the practitioner associated with the order provider role for the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Obtain the ID of the practitioner involved in the action performed on the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Retrieve the ID of the practitioner who served as the order provider for the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Get the ID of the practitioner associated with the action taken on the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Provide the ID of the practitioner linked to the order provider role for the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Obtain the ID of the practitioner connected to the action performed on the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Retrieve the ID of the practitioner who acted as the order provider for the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},
    {"prompt":"Get the ID of the practitioner associated with the action carried out on the order with the ID 20220524100137.5 ","completion":"<ADD USING ID>S1{UNIQUE}=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@O Order:20220524100137.5);RETURN P.id AS ID ++ S2{UNIQUE}=>(@O Order:20220524100137.5)-[ACTION_BY_WAS]->(@P Practitioner:*);RETURN P.id AS ID LIMIT 3"},

    {"prompt":"list all the information related to the practitioners who performed actions on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of the practitioners who were involved in carrying out actions on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the complete information about the practitioners who acted upon the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain all the data regarding the practitioners who were responsible for performing actions on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete details of the practitioners associated with the actions performed on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the information pertaining to the practitioners who were involved in executing actions on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Provide a comprehensive overview of the practitioners who carried out actions on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the full data regarding the practitioners associated with the actions taken on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details about the practitioners who performed actions on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},
    {"prompt":"Get a comprehensive summary of the practitioners who were responsible for executing actions on the orders ","completion":"S=>(@O Order:*)-[@r ACTION_BY_WAS]->(@H Practitioner:*);RETURN * LIMIT 10"},

    {"prompt":"list the code, preferred term, and coding system of the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the identification code, preferred term, and coding system associated with the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Provide the code, preferred term, and coding system information for the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system details related to the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the specific code, preferred term, and coding system used for the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system attributes of the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Provide the code, preferred term, and coding system values for the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system labels for the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the identification code, preferred term, and coding system utilized for the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system specifications for the signs or symptoms ","completion":"S=>(@SS SignOrSymptom:*);RETURN SS.code AS Code, SS.preferredTerm AS preferredTerm, SS.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},

    {"prompt":"list the signal ID, signal date and time, associated sign or symptom date, type, priority, classification, confidentiality indicator, and attestation date ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, date of associated sign or symptom, type, priority, classification, confidentiality indicator, and attestation date ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the signal ID, signal date and time, associated sign or symptom date, type, priority, classification, confidentiality indicator, and attestation date information ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the signal ID, signal date and time, date of associated sign or symptom, type, priority, classification, confidentiality indicator, and attestation date details ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the signal ID, signal date and time, date of associated sign or symptom, type, priority, classification, confidentiality indicator, and attestation date values ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, associated sign or symptom date, type, priority, classification, confidentiality indicator, and attestation date attributes ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the signal ID, signal date and time, associated sign or symptom date, type, priority, classification, confidentiality indicator, and attestation date values ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the signal ID, signal date and time, date of associated sign or symptom, type, priority, classification, confidentiality indicator, and attestation date labels ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the signal ID, signal date and time, associated sign or symptom date, type, priority, classification, confidentiality indicator, and attestation date information ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, date of associated sign or symptom, type, priority, classification, confidentiality indicator, and attestation date specifications ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},

    {"prompt":"list the type and priority of the association, along with the count of sign or symptom names ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Get the association type, priority, and the distribution count of sign or symptom names ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Provide the type and priority of the association, along with the distribution count of sign or symptom names ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Obtain the association type, priority, and the count of sign or symptom names in the distribution ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Retrieve the type and priority values of the association, along with the distribution count of sign or symptom names ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Get the association type, priority, and the number of sign or symptom names in the distribution ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Provide the type and priority attributes of the association, along with the distribution count of sign or symptom names ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Obtain the association type, priority, and the count of sign or symptom names in the distribution ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Retrieve the type and priority information of the association, along with the distribution count of sign or symptom names ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},
    {"prompt":"Get the association type, priority, and the distribution count of sign or symptom names ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN r.type AS Type, r.priority AS Priority, COUNT(SS.name) AS Distribution LIMIT 100"},

    {"prompt":"list the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and attestation date ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and attestation date ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and attestation date ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and attestation date ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},

    {"prompt":"list the information of the patient with ID 2310408097187260360, including their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the details of the patient identified as 2310408097187260360, such as their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the information related to the patient with ID 2310408097187260360, including their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the data associated with the patient having the ID 2310408097187260360, which includes their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the relevant details of the patient identified as 2310408097187260360, such as their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the information of the patient with ID 2310408097187260360, including their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the details of the patient identified as 2310408097187260360, including their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the relevant data pertaining to the patient with ID 2310408097187260360, including their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the information associated with the patient having the ID 2310408097187260360, which includes their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the data of the patient with ID 2310408097187260360, including their name, signal ID, signal date and time, association date, type, priority, classification, confidentiality indicator, and date of attestation ","completion":"S=>(@P Patient:2310408097187260360)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@SS SignOrSymptom:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},

    {"prompt":"list the code, preferred term, and coding system of the disease or syndrome ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system associated with the disease or syndrome ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Provide the code, preferred term, and coding system of the disease or syndrome ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system for the disease or syndrome ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the disease or syndrome code, preferred term, and coding system ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system related to the disease or syndrome ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Provide the disease or syndrome code, preferred term, and coding system ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system of the disease or syndrome ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the information about the disease or syndrome code, preferred term, and coding system ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system associated with the disease or syndrome ","completion":"S=>(@D DiseaseOrSyndrome:*);RETURN D.code AS Code, D.preferredTerm AS preferredTerm, D.codingSystem AS codingSystem SORT_DESC Code LIMIT 100"},

    {"prompt":"list the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal linked to a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal connected to a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the information about the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date related to the signal and its association with a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal connected to a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal in relation to a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},
    {"prompt":"Get the signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date associated with the signal and its connection to a disease or syndrome ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS date1 SORT_ASC date LIMIT 100"},

    {"prompt":"list the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal linked to a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal connected to a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the information about the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date related to the signal and its association with a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal connected to a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal in relation to a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date associated with the signal and its connection to a disease or syndrome ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},

    {"prompt":"Retrieve the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome for the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal linked to a disease or syndrome related to the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome in relation to the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal connected to a disease or syndrome for the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the information about the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome for the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date related to the signal and its association with a disease or syndrome for the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal connected to a disease or syndrome for the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal associated with a disease or syndrome for the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the name of the patient, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date for the signal in relation to a disease or syndrome for the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},
    {"prompt":"Get the patient's name, signal ID, signal date and time, association date, type, priority, classification, confidential indicator, and attestation date associated with the signal and its connection to a disease or syndrome for the patient with ID 3577702880266985812 ","completion":"S=>(@P Patient:3577702880266985812)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome:*);RETURN P.name AS Patient, S.signalId AS signalId, S.signalDateTime AS signalDateTime, r.date AS date, r.type AS Type, r.priority AS Priority, r.classification AS Classification, r.confidentialIndicator AS confidentialIndicator, r.dateAttestation AS dateAttestation SORT_ASC date LIMIT 100"},

    {"prompt":"list all the information related to the association between practitioners and healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the details regarding the connection between practitioners and healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Provide all the relevant information about practitioners and the healthcare organizations they are associated with ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain all the data concerning the practitioners and their affiliations with healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete information regarding the practitioners and their relationships with healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the details about the practitioners and the healthcare organizations they are linked to ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Provide a comprehensive overview of the practitioners and their associations with healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain all the relevant data about practitioners and their affiliations with healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete picture of practitioners and their connections with healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get a comprehensive report on practitioners and their associations with healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r1 *]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},

    {"prompt":"list the code, preferred term, and coding system of laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system associated with laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the code, preferred term, and coding system for laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system used for laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system information related to laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system utilized in laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the code, preferred term, and coding system used in the context of laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system specific to laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system associated with the laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system applicable to laboratory procedures ","completion":"S=>(@LP LaboratoryProcedure:*);RETURN LP.code AS code, LP.preferredTerm AS preferredTerm, LP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"list the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with the laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status linked to the laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Provide the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for the laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with the specified laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status information for the laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status pertaining to the laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Provide the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status related to the laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status specific to the laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with the given laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status applicable to the laboratory procedure ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},

    {"prompt":"list the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with the laboratory procedure for the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status linked to the laboratory procedure for the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Provide the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status for the laboratory procedure associated with the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with the specified laboratory procedure for the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status information for the laboratory procedure related to the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status pertaining to the laboratory procedure for the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Provide the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status related to the laboratory procedure for the patient. ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status specific to the laboratory procedure for the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status associated with the given laboratory procedure for the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler field 1, filler field 2, last status change, diagnostic service, and status applicable to the laboratory procedure for the patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},

    {"prompt":"list the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID associated with the laboratory procedure for the specified patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID linked to the laboratory procedure for the given patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Provide the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for the laboratory procedure associated with the specified patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID associated with the specified laboratory procedure and patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID related to the laboratory procedure for the specified patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID pertaining to the laboratory procedure for the given patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Provide the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID related to the laboratory procedure for the specified patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID specific to the laboratory procedure for the given patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID associated with the specified laboratory procedure and patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID applicable to the laboratory procedure for the given patient ","completion":"S=>(@P Patient:7354326792786522057)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status, P.name AS pid LIMIT 100"},

    {"prompt":"list the patient ID, count of F statuses, count of COMPLETE statuses, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Get the patient ID, number of occurrences with status F, number of occurrences with status COMPLETE, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Provide the patient ID, count of F statuses, count of COMPLETE statuses, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Obtain the patient ID, number of F statuses, number of COMPLETE statuses, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Retrieve the patient ID, count of F statuses, count of COMPLETE statuses, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Get the patient ID, number of occurrences with status F, number of occurrences with status COMPLETE, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Provide the patient ID, count of F statuses, count of COMPLETE statuses, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Obtain the patient ID, number of F statuses, number of COMPLETE statuses, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Retrieve the patient ID, count of F statuses, count of COMPLETE statuses, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},
    {"prompt":"Get the patient ID, number of occurrences with status F, number of occurrences with status COMPLETE, total count of placer references, and calculate the percentage of completed and F statuses out of the total for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:1533349988067552097)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS Labs LIMIT 100"},

    {"prompt":"list the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Provide the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Provide the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the specified patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, status, and patient ID for laboratory procedures associated with the given patient ","completion":"S=>(@P Patient:2616521466997176866)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status,P.name AS pid LIMIT 100"},

    {"prompt":"list the patient ID, number of 'F' statuses, number of 'COMPLETE' statuses, total number of placer references, and calculated cytopathology percentage for laboratory procedures associated with all patient ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Get the patient ID, count of 'F' statuses, count of 'COMPLETE' statuses, total count of placer references, and the cytopathology percentage calculated for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Provide the patient ID, number of 'F' statuses, number of 'COMPLETE' statuses, total number of placer references, and the calculated cytopathology percentage for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Obtain the patient ID, count of 'F' statuses, count of 'COMPLETE' statuses, total count of placer references, and the calculated cytopathology percentage for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Retrieve the patient ID, number of 'F' statuses, number of 'COMPLETE' statuses, total number of placer references, and the cytopathology percentage calculated for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Get the patient ID, count of 'F' statuses, count of 'COMPLETE' statuses, total count of placer references, and the cytopathology percentage calculated for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Provide the patient ID, number of 'F' statuses, number of 'COMPLETE' statuses, total number of placer references, and the calculated cytopathology percentage for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Obtain the patient ID, count of 'F' statuses, count of 'COMPLETE' statuses, total count of placer references, and the calculated cytopathology percentage for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Retrieve the patient ID, number of 'F' statuses, number of 'COMPLETE' statuses, total number of placer references, and the cytopathology percentage calculated for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},
    {"prompt":"Get the patient ID, count of 'F' statuses, count of 'COMPLETE' statuses, total count of placer references, and the cytopathology percentage calculated for laboratory procedures associated with all patients ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CP LIMIT 100"},

    {"prompt":"list all information related to laboratory procedures associated with orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the details regarding laboratory procedures linked to orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the complete information about laboratory procedures associated with orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain all the data concerning laboratory procedures that are associated with orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the entire record of laboratory procedures connected to orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the relevant information about laboratory procedures that are associated with orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Provide a comprehensive overview of laboratory procedures linked to orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain all the details related to laboratory procedures that are associated with orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete dataset of laboratory procedures associated with orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the information regarding laboratory procedures that are associated with orders ","completion":"S=>(@LP LaboratoryProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},

    {"prompt":"list the ID, family name, first name, prefix, and ID issuer of practitioners who were the principal result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, prefix, and ID issuer of practitioners who served as the principal result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the ID, family name, first name, prefix, and ID issuer of practitioners who acted as the principal result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners who were responsible for interpreting the results of laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners who were designated as the principal result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners who played the role of the principal result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners who were assigned as the principal result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the ID, family name, first name, prefix, and ID issuer of practitioners who served as the primary result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, prefix, and ID issuer of practitioners who acted as the main result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, prefix, and ID issuer of practitioners who were responsible for interpreting the outcomes of laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list all the information related to practitioners who served as order providers for orders placed by healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of practitioners who acted as order providers for orders placed by healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the information regarding practitioners who were responsible for providing orders to healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain all the details of practitioners who served as order providers for orders placed by healthcare entities ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete information about practitioners who played the role of order providers for orders placed by healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the relevant data concerning practitioners who were responsible for providing orders to healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the complete record of practitioners who acted as order providers for orders placed by healthcare institutions ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the information about practitioners who served as order providers for orders placed by healthcare establishments ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details of practitioners who played a role in providing orders to healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},
    {"prompt":"Get the complete information regarding practitioners who were responsible for providing orders to healthcare facilities ","completion":"S=>(@P Practitioner:*)-[@r WAS_ORDER_PROVIDER_FOR]->(@H Order:*);RETURN * LIMIT 10"},

    {"prompt":"list all the information related to practitioners who served as assistant result interpreters for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of practitioners who acted as assistant result interpreters for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the information regarding practitioners who were responsible for assisting in result interpretation for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain all the details of practitioners who served as assistants in result interpretation for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete information about practitioners who played the role of assistant result interpreters for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the relevant data concerning practitioners who were responsible for assisting in result interpretation for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the complete record of practitioners who acted as assistant result interpreters for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the information about practitioners who served as assistants in result interpretation for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details of practitioners who played a role in assisting result interpretation for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Get the complete information regarding practitioners who were responsible for assisting in result interpretation for diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@H DiagnosticProcedure:*);RETURN * LIMIT 10"},

    {"prompt":"list all the information about practitioners who serve as primary care providers for healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of practitioners who act as primary care providers for healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the information regarding practitioners who are responsible for primary care provision in healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain all the details of practitioners who serve as primary care providers for healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete information about practitioners who fulfill the role of primary care providers for healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the relevant data concerning practitioners who are responsible for primary care provision in healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the complete record of practitioners who act as primary care providers for healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the information about practitioners who serve as primary care providers for healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details of practitioners who fulfill the role of primary care providers for healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get the complete information regarding practitioners who are responsible for primary care provision in healthcare organizations ","completion":"S=>(@P Practitioner:*)-[@r AS_PRIMARY_CARE_PROVIDER_FOR]->(@H HealthCareOrganisation:*);RETURN * LIMIT 10"},

    {"prompt":"list the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners associated with laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners involved in laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners associated with laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners who perform laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners connected to laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners engaged in laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners linked to laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners who carry out laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners associated with laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the Practitioner ID, family name, first name, prefix, and ID issuer of practitioners involved in laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r *]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list the ID, family name, first name, prefix, and ID issuer of practitioners who served as assistant result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, prefix, and ID issuer of practitioners who acted as assistant result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the ID, family name, first name, prefix, and ID issuer of practitioners who were assistant result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the ID, family name, first name, prefix, and ID issuer of practitioners who worked as assistant result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, prefix, and ID issuer of practitioners who assisted in result interpretation for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, prefix, and ID issuer of practitioners who supported as result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the ID, family name, first name, prefix, and ID issuer of practitioners who participated as assistant result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Obtain the ID, family name, first name, prefix, and ID issuer of practitioners who functioned as assistant result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, prefix, and ID issuer of practitioners who collaborated as assistant result interpreters for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the ID, family name, first name, prefix, and ID issuer of practitioners who assisted in interpreting results for laboratory procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_ASSISTANT_RESULT_INTERPRETER_FOR]->(@LP LaboratoryProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list the code, preferred term, and coding system of diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred name, and coding system of diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the code, preferred term, and coding system used for diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system associated with diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred name, and coding system for diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system utilized in diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the code, preferred term, and coding system assigned to diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system specific to diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system employed in diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system applied to diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*);RETURN DP.code AS code, DP.preferredTerm AS preferredTerm, DP.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"list the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Get the value, measurement unit, reference range, abnormal flags, nature of abnormal test, status, observation date, and analysis date for findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Provide the value, unit of measurement, reference range, abnormal flags, nature of abnormal test, status, observation date, and analysis date of findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Obtain the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, observation date, and analysis date related to findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Retrieve the value, measurement unit, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis for findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Get the value, unit of measurement, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Provide the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, observation date, and analysis date linked to findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Obtain the value, measurement unit, reference range, abnormal flags, nature of abnormal test, status, observation date, and analysis date for findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Retrieve the value, unit of measurement, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Get the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, observation date, and analysis date of findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureOfAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},

    {"prompt":"Count the number of placer references and retrieve the diagnostic service associated with diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Get the count of placer references and retrieve the diagnostic service linked to diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Provide the count of placer references and retrieve the diagnostic service for diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Obtain the number of placer references and retrieve the diagnostic service associated with diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Count the number of placer references and get the diagnostic service associated with diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Get the count of placer references and get the diagnostic service for diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Provide the count of placer references and get the diagnostic service linked to diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Obtain the number of placer references and get the diagnostic service associated with diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Count the number of placer references and retrieve the diagnostic service for diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},
    {"prompt":"Get the count of placer references and retrieve the diagnostic service associated with diagnostic procedures ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN COUNT(r.placerReference) AS placerReference, r.diagnosticService AS diagnosticService LIMIT 100"},

    {"prompt":"Get the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient associated with a diagnostic procedure signal ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"list the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient linked to a diagnostic procedure signal ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient connected to a diagnostic procedure signal ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient associated with a diagnostic procedure ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient linked to a diagnostic procedure ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient connected to a diagnostic procedure ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient associated with a diagnostic procedure signal ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Get the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient linked to a diagnostic procedure signal ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Obtain the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient connected to a diagnostic procedure signal ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},
    {"prompt":"Retrieve the signal ID, placer reference, filler reference, relevant clinical information, filler field 1, filler field 2, last status change, diagnostic service, and status for a patient associated with a diagnostic procedure ","completion":"S=>(@P Patient:4446908225403480839)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN S.name AS signalId, r.placerReference AS placerReference, r.fillerReference AS fillerReference, r.relevantClinicalInformation AS relevantClinicalInformation, r.fillerField1 AS fillerField1, r.fillerField2 AS fillerField2, r.lastStatusChange AS lastStatusChange, r.diagnosticService AS diagnosticService, r.status AS status LIMIT 100"},

    {"prompt":"list the placer reference and count the number of F statuses, the number of COMPLETE statuses, the total number of placer references, and calculate the percentage for a patient associated with a cardiac ultrasound diagnostic procedure signal ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Get the placer reference and count the occurrences of F statuses, COMPLETE statuses, and placer references, and calculate the percentage for a patient linked to a cardiac ultrasound diagnostic procedure signal ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Obtain the placer reference and calculate the counts of F statuses, COMPLETE statuses, and placer references, along with the percentage, for a patient connected to a cardiac ultrasound diagnostic procedure signal ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Retrieve the placer reference and determine the counts of F statuses, COMPLETE statuses, and placer references, as well as the percentage, for a patient associated with a cardiac ultrasound diagnostic procedure ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Get the placer reference and count the number of F statuses, the number of COMPLETE statuses, the total number of placer references, and calculate the percentage for a patient linked to a cardiac ultrasound diagnostic procedure ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Obtain the placer reference and count the occurrences of F statuses, COMPLETE statuses, and placer references, and calculate the percentage for a patient connected to a cardiac ultrasound diagnostic procedure ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Retrieve the placer reference and calculate the counts of F statuses, COMPLETE statuses, and placer references, along with the percentage, for a patient associated with a cardiac ultrasound diagnostic procedure signal ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Get the placer reference and determine the counts of F statuses, COMPLETE statuses, and placer references, as well as the percentage, for a patient linked to a cardiac ultrasound diagnostic procedure signal ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Obtain the placer reference and count the occurrences of F statuses, COMPLETE statuses, and placer references, and calculate the percentage for a patient connected to a cardiac ultrasound diagnostic procedure signal ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},
    {"prompt":"Retrieve the placer reference and calculate the counts of F statuses, COMPLETE statuses, and placer references, along with the percentage, for a patient associated with a cardiac ultrasound diagnostic procedure ","completion":"S=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Cardiac Ultrasound\"}]->(@DP DiagnosticProcedure:*);RETURN r2.placerReference AS placerReference UCOUNT(r2.status {numF = \"F\"}) AS numF, UCOUNT(r2.status {numCompleted = \"COMPLETE\" }) AS numCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($numCompleted + $numF)*100)/$numtotal)\") AS CUS LIMIT 100"},

    {"prompt":"Return all the details of the orders associated with the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve and display the information of the orders linked to the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Get the relevant data of the orders connected to the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the complete records of the orders associated with the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Fetch and show the details of the orders that are related to the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the information of the orders that are associated with the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Display all the relevant information regarding the orders associated with the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete details of the orders linked to the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Show the complete records of the orders that are connected to the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},
    {"prompt":"Provide a comprehensive overview of the orders associated with the diagnostic procedures ","completion":"S=>(@DP DiagnosticProcedure:*)-[@r IS_ASSOCIATED_WITH]->(@O Order:*);RETURN * LIMIT 10"},

    {"prompt":"list the ID, family name, first name, prefix, and ID issuer of the practitioners who served as the primary result interpreter for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the practitioner ID, family name, first name, prefix, and ID issuer for the practitioners who acted as the primary result interpreters for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Show the ID, family name, first name, prefix, and ID issuer of the practitioners who were the principal result interpreters for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the practitioner ID, family name, first name, prefix, and ID issuer for the practitioners involved as the principal result interpreters for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the identification, last name, first name, prefix, and ID issuer of the practitioners who served as the primary interpreters of the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the practitioner's ID, last name, first name, prefix, and ID issuer for the practitioners who acted as the primary interpreters for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Show the practitioner's ID, last name, first name, prefix, and ID issuer of the practitioners who were the main interpreters for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the practitioner's ID, last name, first name, prefix, and ID issuer for the practitioners who were the principal interpreters for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, given name, prefix, and ID issuer of the practitioners who acted as the primary result interpreters for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get the ID, family name, given name, prefix, and ID issuer of the practitioners who served as the main result interpreters for the diagnostic procedures ","completion":"S=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list the unique selection of practitioner IDs, family names, first names, prefixes, and ID issuers for practitioners who served as the primary result interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get a unique list of practitioner IDs, family names, first names, prefixes, and ID issuers for practitioners who acted as the principal result interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Show the unique set of practitioner IDs, family names, first names, prefixes, and ID issuers for practitioners who were the primary interpreters of diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the unique selection of practitioner IDs, family names, first names, prefixes, and ID issuers for practitioners who were the main interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the distinct list of practitioner IDs, family names, given names, prefixes, and ID issuers for practitioners who served as the primary interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get a list of distinct practitioner IDs, family names, given names, prefixes, and ID issuers for practitioners who acted as the primary interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Show the distinct set of practitioner IDs, family names, given names, prefixes, and ID issuers for practitioners who were the principal interpreters of diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Provide the distinct selection of practitioner IDs, family names, given names, prefixes, and ID issuers for practitioners who were the main interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the unique selection of practitioner IDs, last names, first names, prefixes, and ID issuers for practitioners who served as the primary result interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get a unique list of practitioner IDs, last names, first names, prefixes, and ID issuers for practitioners who acted as the principal result interpreters for diagnostic procedures ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@DP DiagnosticProcedure:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list the code, preferred term, and coding system for findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred name, and coding system for the findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, preferred term, and coding system associated with the findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the code, preferred name, and coding system of the findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, and coding system ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system for the given findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Show the finding code, preferred term, and coding system ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the code, preferred term, and coding system of the given findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system for the specified findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred name, and coding system associated with the specified findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, F.preferredTerm AS preferredTerm, F.codingSystem AS codingSystem SORT_DESC code LIMIT 100"},

    {"prompt":"list the code and count of findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the codes of all results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the codes of all results ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list all codes of all results ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"return the codes of all results ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list codes of all results ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the codes of all results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"provide a list of codes of all results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Gather the codes of all results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Identify the codes of all results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Collect the codes of all results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the codes of all results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"find the codes of all results ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide a list of codes for all results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Display the codes of various results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the codes associated with different results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"List the codes of all results related to findings","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Present a compilation of codes for different results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Gather the codes of various results in the findings field","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the codes of all results ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Obtain the codes corresponding to different results","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Display the codes of results within the findings sector","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the code and the total count of findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the finding code and the count of occurrences ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide the code and the number of findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the finding code and calculate the count ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the code and count of the specified findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show the finding code along with the count ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Provide the code and the count of the findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the code and the total number of findings ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the finding code and count the occurrences ","completion":"S=>(@F Finding:*);RETURN F.code AS code, COUNT(F.name) AS Cnt SORT_DESC Cnt LIMIT 100"},

    {"prompt":"list the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis from the signal ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Get the signal's value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Show the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with the signal ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Provide the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis for the signal ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Retrieve the signal's measurement value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Get the measurement value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis from the signal ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Show the measurement value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis associated with the signal ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Provide the measurement value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis for the signal ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Retrieve the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis recorded in the signal ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},
    {"prompt":"Get the value, unit of measure, reference range, abnormal flags, nature of abnormal test, status, date of observation, and date of analysis recorded in the signal ","completion":"S1{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r.value AS value, r.unitOfMeasure AS unitOfMeasure, r.referencesRange AS referencesRange, r.abnormalFlags AS abnormalFlags, r.natureofAbnormalTest AS natureofAbnormalTest, r.status AS status, r.dateOfObservation AS dateOfObservation, r.dateOfAnalysis AS dateOfAnalysis SORT_ASC dateOfAnalysis LIMIT 100"},

    {"prompt":"Count the number of signals associated with findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the count of signals linked to findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the total number of signals related to findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Find the count of signals that are associated with findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"list the number of signals that have associations with findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the count of signals that correspond to findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine how many signals are connected to findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the occurrences of signals associated with findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the quantity of signals that are related to findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Find the total count of signals that have associations with findings ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN COUNT(S.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Show me the ID, family name, first name, prefix, and ID issuer of the practitioner who was the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"I need the ID, last name, first name, prefix, and ID issuer of the practitioner who acted as the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the ID, family name, first name, prefix, and ID issuer of the practitioner who had the role of responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Can you provide me with the practitioner's ID, last name, first name, prefix, and ID issuer who was responsible for observing the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"I'm looking for the ID, family name, first name, prefix, and ID issuer of the practitioner who was responsible for observing the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Please fetch the ID, last name, first name, prefix, and ID issuer of the practitioner who acted as the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get me the practitioner's ID, family name, first name, prefix, and ID issuer, who had the role of responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Could you give me the ID, last name, first name, prefix, and ID issuer of the practitioner who was responsible for observing the finding? ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the practitioner's ID, family name, first name, prefix, and ID issuer who acted as the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"I need the ID, last name, first name, prefix, and ID issuer of the practitioner who was assigned as the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"Show me the Practitioner's ID, last name, first name, prefix, and ID issuer who had the responsibility of observing the Finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"list the ID, family name, first name, prefix, and ID issuer of the Practitioner who was responsible for observing the specified Finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Can you provide me with the ID, family name, first name, prefix, and ID issuer of the Practitioner who acted as the responsible observer for the Finding? ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"I'm looking for the Practitioner's ID, last name, first name, prefix, and ID issuer who was responsible for observing the Finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Please fetch the ID, family name, first name, prefix, and ID issuer of the Practitioner who served as the responsible observer for the Finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Get me the ID, last name, first name, prefix, and ID issuer of the Practitioner who had the responsibility of observing the Finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Could you give me the Practitioner's ID, family name, first name, prefix, and ID issuer, who acted as the responsible observer for the Finding? ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Retrieve the Practitioner's ID, last name, first name, prefix, and ID issuer who was assigned to observe the Finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"I need the ID, family name, first name, prefix, and ID issuer of the Practitioner who was designated as the responsible observer for the Finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},
    {"prompt":"Show me the PractitionerID, familyName, firstName, prefix, and idIssuer of the Practitioner who was responsible for observing the specified Finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@F Finding:*);RETURN P.id AS PractitionerID, P.familyName AS familyName, P.firstName AS firstName, P.prefix AS prefix, P.idIssuer AS idIssuer LIMIT 100"},

    {"prompt":"list all the information related to the practitioner who served as the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"Show me the details of the practitioner who was responsible for observing the specified finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"Can you provide me with the complete information of the practitioner who acted as the responsible observer for the finding? ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"I'm looking for all the data associated with the practitioner who had the role of responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"Please fetch all the relevant details about the practitioner who was responsible for observing the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"Get me the complete information about the practitioner who served as the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"Could you give me all the details about the practitioner who acted as the responsible observer for the finding? ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the information regarding the practitioner who was assigned as the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"I need the complete data of the practitioner who was designated as the responsible observer for the finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},
    {"prompt":"Show me all the information available about the practitioner who was responsible for observing the specified finding ","completion":"S{UNIQUE_SELECT}=>(@P Practitioner:*)-[WAS_RESPONSIBLE_OBSERVER_FOR]->(@H Finding:*);RETURN * LIMIT 10"},

    {"prompt":"Show me all the details related to the laboratory procedure for which the finding is a result ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"list the complete information about the laboratory procedure associated with the finding ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Can you provide me with all the data regarding the laboratory procedure that corresponds to the finding? ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"I'm looking for all the relevant details about the laboratory procedure that the finding is a result of ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Please fetch all the information related to the laboratory procedure linked to the finding ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Get me the complete details about the laboratory procedure for which the finding serves as a result ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Could you give me all the information available about the laboratory procedure connected to the finding? ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the data associated with the laboratory procedure for which the finding is considered a result ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"I need the complete information about the laboratory procedure that corresponds to the finding ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Show me all the details available about the laboratory procedure for which the finding is a result ","completion":"S=>(@F Finding:*)-[IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN * LIMIT 10"},

    {"prompt":"Show me all the information related to the diagnostic procedure for which the finding is a part ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete details about the diagnostic procedure associated with the finding ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Can you provide me with all the data regarding the diagnostic procedure that the finding corresponds to? ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"I'm looking for all the relevant details about the diagnostic procedure that the finding is connected to ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Please fetch all the information related to the diagnostic procedure linked to the finding ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Get me the complete details about the diagnostic procedure for which the finding is associated ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Could you give me all the information available about the diagnostic procedure connected to the finding? ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the data associated with the diagnostic procedure that the finding is a part of ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"I need the complete information about the diagnostic procedure that corresponds to the finding ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},
    {"prompt":"Show me all the details available about the diagnostic procedure for which the finding is related ","completion":"S=>(@F Finding:*)-[IS_FINDING_FOR]->(@DP DiagnosticProcedure:*);RETURN * LIMIT 10"},

    {"prompt":"Show me the patient's ID, weight, preferred term, and code associated with the finding C0005910 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"list the patient's ID, weight, preferred term, and code linked to the finding with the code C0005910 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Can you provide me with the patient's ID, weight, preferred term, and code related to the finding C0005910? ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"I'm looking for the patient's ID, weight, preferred term, and code associated with the finding that has the code C0005910 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Please fetch the patient's ID, weight, preferred term, and code connected to the finding identified by the code C0005910 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get me the patient's ID, weight, preferred term, and code corresponding to the finding with the code C0005910 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Could you give me the patient's ID, weight, preferred term, and code associated with the finding having the code C0005910? ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, weight, preferred term, and code that are associated with the finding labeled as C0005910 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"I need the patient's ID, weight, preferred term, and code for the finding with the code C0005910 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the patient's ID, weight, preferred term, and code for the finding characterized by the code C0005910 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:1009850262709150157)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005910\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},

    {"prompt":"Provide me with the patient's identification, height measurement, and the preferred term associated with the finding coded as C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"list the patient's ID, recorded height, and preferred term linked to the finding identified as C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"Can you give me the patient's unique identifier, height measurement, and preferred term related to the finding with the code C0005890? ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"I'm interested in obtaining the patient's identification, height value, and preferred term connected to the finding specified as C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"Fetch the patient's ID, measured height, and preferred term associated with the finding that has the code C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"Provide me with the complete information about the patient's ID, recorded height, and preferred term related to the finding coded as C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"Please present the patient's ID, height measurement, and preferred term that are associated with the finding having the code C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"Retrieve the patient's unique identifier, height measurement, and preferred term that are linked to the finding coded as C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"I need to access the patient's identification, height measurement, and preferred term for the finding identified as C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},
    {"prompt":"Show me the patient's ID, measured height, and preferred term related to the finding specified by the code C0005890 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C0005890\"} );RETURN P.name AS patientID, r2.value AS Height, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm SORT_DESC preferredTerm LIMIT 100"},

    {"prompt":"Show me the patient's ID, weight, unit of measure, preferred term, and code associated with the finding identified as C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"list the patient's ID, weight value, unit of measure, preferred term, and code linked to the finding with the code C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Can you provide me with the patient's ID, weight measurement, unit of measure, preferred term, and code related to the finding coded as C1305855? ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"I'm looking for the patient's ID, weight value, unit of measure, preferred term, and code associated with the finding that has the code C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Please fetch the patient's ID, weight measurement, unit of measure, preferred term, and code connected to the finding specified as C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get me the patient's ID, weight value, unit of measure, preferred term, and code corresponding to the finding labeled as C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Could you give me the patient's ID, weight, unit of measure, preferred term, and code associated with the finding having the code C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, weight value, unit of measure, preferred term, and code that are associated with the finding identified as C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"I need the patient's ID, weight measurement, unit of measure, preferred term, and code for the finding with the code C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the patient's ID, weight value, unit of measure, preferred term, and code for the finding characterized by the code C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:* {code = \"C1305855\"} );RETURN P.name AS patientID, r2.value AS Weight, r2.unitOfMeasure AS unitOfMeasure, F.preferredTerm AS preferredTerm,F.code AS code SORT_DESC code LIMIT 100"},

    {"prompt":"Show me the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, last signal received for patients with NHS numbers issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"list the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, last signal received for patients whose NHS numbers are issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"Can you provide me with the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, and last signal received for patients with NHS numbers issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"I'm looking for the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, and last signal received of patients whose NHS numbers are issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"Please fetch the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, and last signal received for patients with NHS numbers issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"Get me the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, and last signal received of patients whose NHS numbers are issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"Could you give me the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, and last signal received for patients with NHS numbers issued by IBM? ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"Retrieve the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, and last signal received for patients whose NHS numbers are issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"I need the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, and last signal received for patients with NHS numbers issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},
    {"prompt":"Show me the node ID, first name, family name, NHS number, date of birth, formatted date of birth, orders date, remaining days, and last signal received for patients whose NHS numbers are issued by IBM ","completion":"S=>(@P Patient:* {idIssuer_NH = \"IBM\"});RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR,MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC Orders_Date LIMIT 100"},

    {"prompt":"Show me the patient's ID, count of completed laboratory procedures, count of not completed laboratory procedures, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the patient's ID, number of completed laboratory procedures, number of laboratory procedures not completed, total count of laboratory procedures, and the percentage of completed laboratory procedures for the patient ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Can you provide me with the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient? ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"I'm looking for the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Please fetch the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get me the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Could you give me the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient? ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"I need the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show me the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures for the patient ","completion":"S=>(@P Patient:9161753291725204750)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH{diagnosticService = \"Laboratory\"}]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS Labs SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Show me the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the patient's ID, number of completed radiology procedures, number of radiology procedures not completed, total count of radiology procedures, and the percentage of completed radiology procedures for the patient ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Can you provide me with the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient? ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"I'm looking for the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Please fetch the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get me the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Could you give me the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient? ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"I need the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show me the patient's ID, count of completed radiology procedures, count of radiology procedures not completed, total number of radiology procedures, and the percentage of completed radiology procedures for the patient ","completion":"S=>(@P Patient:7867150296540150324)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(r2.Completed) AS Cnt, UCOUNT(r2.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(r2.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS RAD SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Show me the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the patient's ID, number of completed diagnostic procedures, number of diagnostic procedures not completed, total count of diagnostic procedures, and the percentage of completed diagnostic procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Can you provide me with the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures? ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"I'm looking for the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Please fetch the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get me the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Could you give me the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures? ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"I need the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show me the patient's ID, count of completed diagnostic procedures, count of diagnostic procedures not completed, total number of diagnostic procedures, and the percentage of completed diagnostic procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@DP DiagnosticProcedure:*);RETURN P.name AS PatientID, UCOUNT(DP.Completed) AS Cnt, UCOUNT(DP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(DP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS DiagnosticProcedures SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Show me the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, number of completed laboratory procedures, number of laboratory procedures not completed, total count of laboratory procedures, and the percentage of completed laboratory procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Can you provide me with the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures? ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"I'm looking for the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Please fetch the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get me the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Could you give me the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures? ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"I need the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Show me the patient's ID, count of completed laboratory procedures, count of laboratory procedures not completed, total number of laboratory procedures, and the percentage of completed laboratory procedures ","completion":"S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*);RETURN P.name AS PatientID, UCOUNT(LP.Completed) AS Cnt, UCOUNT(LP.Completed {NotCompleted = \"NO\" }) AS NotCompleted, UCOUNT(LP.placerReference) AS numtotal, MATH_EXP(\"ROUND((($Cnt - $NotCompleted) *100)/$numtotal)\") AS LaboratoryProcedure SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Give me the patient's ID, date of the signal, value, unit of measure, code, and preferred term for the findings with codes C0005890, C0005910, and C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings associated with the codes C0005890, C0005910, and C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Can you provide me with the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings categorized under codes C0005890, C0005910, and C1305855? ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"I'm interested in the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings that have codes C0005890, C0005910, and C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Please fetch the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings associated with the codes C0005890, C0005910, and C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Get me the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings with codes C0005890, C0005910, and C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Could you provide me with the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings that match the codes C0005890, C0005910, and C1305855? ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings corresponding to the codes C0005890, C0005910, and C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"I need the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings labeled with codes C0005890, C0005910, and C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Show me the patient's ID, signal date, value, unit of measure, code, and preferred term for the findings that have codes C0005890, C0005910, and C1305855 ","completion":"S1{UNIQUE_SELECT}=>(@P Patient:6811486100050471558)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN P.id_PI AS patientID,S.signalDateTime AS date, r2.value AS Value, r2.unitOfMeasure AS unitOfMeasure, F.code AS code, F.preferredTerm AS preferredTerm WHERE code = [\"C0005890\",\"C0005910\",\"C1305855\"] SORT_DESC date LIMIT 100"},

    {"prompt":"Give me the address line 1, city name, state name, country code, and zip code for the patient residing at patient ID 2928665448421537486 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"list the address line 1, city name, state name, country code, and zip code for the patient with patient ID 2928665448421537486 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"Can you provide me with the address line 1, city name, state name, country code, and zip code for the patient living at patient ID 2928665448421537486? ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"I'm looking for the address line 1, city name, state name, country code, and zip code for the patient identified by patient ID 2928665448421537486 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"Please fetch the address line 1, city name, state name, country code, and zip code for the patient with patient ID 2928665448421537486 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"Get me the address line 1, city name, state name, country code, and zip code for the patient residing at patient ID 2928665448421537486 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"Could you provide me with the address line 1, city name, state name, country code, and zip code for the patient whose patient ID is 2928665448421537486? ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"Retrieve the address line 1, city name, state name, country code, and zip code for the patient living at patient ID 2928665448421537486 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"I need the address line 1, city name, state name, country code, and zip code for the patient at patient ID 2928665448421537486 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},
    {"prompt":"Show me the address line 1, city name, state name, country code, and zip code for the patient with patient ID 2928665448421537486 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2928665448421537486)-[@r1 LIVES_IN]->(@A Address:*);RETURN A.streetAddress AS Address_Line_1 , A.city AS City_Name, A.stateProvince AS State_Name, A.country AS Country_Code, A.postcode AS Zip_Code SORT_DESC Zip_Code LIMIT 100"},

    {"prompt":"Provide the home phone number and email address for the patient with ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"list the home phone number and email address associated with the patient ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"Can you give me the home phone number and email address of the patient whose ID is 2162971940296188757? ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"I'm interested in the home phone number and email address for the patient identified by the ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"Please fetch the home phone number and email address for the patient with ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"Get me the home phone number and email address associated with the patient whose ID is 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"Could you provide me with the home phone number and email address for the patient having the ID 2162971940296188757? ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"Retrieve the home phone number and email address for the patient with ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"I need the home phone number and email address for the patient whose ID is 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},
    {"prompt":"Show me the home phone number and email address for the patient with ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@N PhoneNumberHome:*);RETURN N.phoneNumberHome AS Home Phone, N.emailAddress AS Email LIMIT 100"},

    {"prompt":"Give me the prefix, first name, family name, hospital name, hospital code, and latest event date for the primary care provider of the patient with ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"list the prefix, first name, family name, hospital name, hospital code, and date of the latest event for the primary care provider associated with the patient ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"Can you provide me with the prefix, first name, family name, hospital name, hospital code, and latest event date for the primary care provider of the patient having the ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"I'm interested in the prefix, first name, family name, hospital name, hospital code, and latest event date for the primary care provider linked to the patient with ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"Please fetch the prefix, first name, family name, hospital name, hospital code, and latest event date for the primary care provider associated with the patient ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"Get me the prefix, first name, family name, hospital name, hospital code, and date of the latest event for the primary care provider of the patient with ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"Could you provide me with the prefix, first name, family name, hospital name, hospital code, and latest event date for the primary care provider serving the patient identified by the ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"Retrieve the prefix, first name, family name, hospital name, hospital code, and latest event date for the primary care provider associated with the patient having the ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"I need the prefix, first name, family name, hospital name, hospital code, and latest event date for the primary care provider of the patient with ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},
    {"prompt":"Show me the prefix, first name, family name, hospital name, hospital code, and latest event date for the primary care provider connected to the patient ID 2162971940296188757 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_ASC \"Latest Event\" LIMIT 100"},

    {"prompt":"Give me the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and number of remaining days for the patient with ID \"8965779841411371884\" associated with a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"list the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and remaining days for the patient identified by \"8965779841411371884\" who has an association with a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Can you provide me with the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and days remaining for the patient whose ID is \"8965779841411371884\" and is linked to a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"I'm interested in the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and days remaining for the patient with ID \"8965779841411371884\" who has an association with a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Please fetch the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and remaining days for the patient with ID \"8965779841411371884\" associated with a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Get me the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and number of days remaining for the patient having the ID \"8965779841411371884\" and connected to a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Could you provide me with the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and remaining days for the patient residing at ID \"8965779841411371884\" who has an association with a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Retrieve the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and days remaining for the patient with ID \"8965779841411371884\" associated with a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"I need the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and remaining days for the patient whose ID is \"8965779841411371884\" and is linked to a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Show me the procedure name, last update date, status, placer reference, date ordered, diagnostic service, and days remaining for the patient with ID \"8965779841411371884\" associated with a cytopathology laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:\"8965779841411371884\")-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH{diagnosticService = \"Cytopathology\"}]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days, r1.diagnosticService AS diagnosticService WHERE Days > 0 SORT_ASC date2 LIMIT 100"},

    {"prompt":"Give me the procedure name, last update date, status, placer reference, date ordered, and number of remaining days for the patient with ID 2162971940296188757 associated with a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"list the procedure name, last update date, status, placer reference, date ordered, and remaining days for the patient identified by 2162971940296188757 who has an association with a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Can you provide me with the procedure name, last update date, status, placer reference, date ordered, and days remaining for the patient whose ID is 2162971940296188757 and is linked to a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"I'm interested in the procedure name, last update date, status, placer reference, date ordered, and days remaining for the patient with ID 2162971940296188757 who has an association with a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Please fetch the procedure name, last update date, status, placer reference, date ordered, and remaining days for the patient with ID 2162971940296188757 associated with a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Get me the procedure name, last update date, status, placer reference, date ordered, and number of days remaining for the patient having the ID 2162971940296188757 and connected to a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Could you provide me with the procedure name, last update date, status, placer reference, date ordered, and remaining days for the patient residing at ID 2162971940296188757 who has an association with a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Retrieve the procedure name, last update date, status, placer reference, date ordered, and days remaining for the patient with ID 2162971940296188757 associated with a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"I need the procedure name, last update date, status, placer reference, date ordered, and remaining days for the patient whose ID is 2162971940296188757 and is linked to a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Show me the procedure name, last update date, status, placer reference, date ordered, and days remaining for the patient with ID 2162971940296188757 associated with a radiology diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:2162971940296188757)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH {diagnosticService = \"Radiology\"}]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},

    {"prompt":"list the procedure name, last update date, status, placer reference, date ordered, and remaining days for all patients associated with a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Show me the procedure name, last update date, status, placer reference, date ordered, and days remaining for patients linked to a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Get the procedure name, last update date, status, placer reference, date ordered, and number of days remaining for patients associated with a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Provide the procedure name, last update date, status, placer reference, date ordered, and remaining days for all patients who have an association with a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Can you fetch the procedure name, last update date, status, placer reference, date ordered, and days remaining for patients with a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"I'm interested in the procedure name, last update date, status, placer reference, date ordered, and remaining days for all patients connected to a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Please retrieve the procedure name, last update date, status, placer reference, date ordered, and number of days remaining for patients who are associated with a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Show me the procedure name, last update date, status, placer reference, date ordered, and days remaining for patients with an association to a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Get the procedure name, last update date, status, placer reference, date ordered, and remaining days for all patients who have a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Provide the procedure name, last update date, status, placer reference, date ordered, and days remaining for patients associated with a diagnostic procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP DiagnosticProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},

    {"prompt":"list the procedure name, last update date, status, placer reference, date ordered, and remaining days for all patients associated with a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Show me the procedure name, last update date, status, placer reference, date ordered, and days remaining for patients linked to a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Get the procedure name, last update date, status, placer reference, date ordered, and number of days remaining for patients associated with a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Provide the procedure name, last update date, status, placer reference, date ordered, and remaining days for all patients who have an association with a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Can you fetch the procedure name, last update date, status, placer reference, date ordered, and days remaining for patients with a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"I'm interested in the procedure name, last update date, status, placer reference, date ordered, and remaining days for all patients connected to a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Please retrieve the procedure name, last update date, status, placer reference, date ordered, and number of days remaining for patients who are associated with a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Show me the procedure name, last update date, status, placer reference, date ordered, and days remaining for patients with an association to a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Get the procedure name, last update date, status, placer reference, date ordered, and remaining days for all patients who have a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},
    {"prompt":"Provide the procedure name, last update date, status, placer reference, date ordered, and days remaining for patients associated with a laboratory procedure and an order ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN LP.preferredTerm AS Procedure, r1.lastStatusChange AS date1, MATH_EXP(\"DATE_FMT($date1, %d/%m/%Y)\") AS \"Last Update\", r1.status AS Status, r1.placerReference AS placerReference, O.date AS date2, MATH_EXP(\"DATE_FMT($date2, %d/%m/%Y)\") AS \"Date Ordered\" MATH_EXP(\"ROUND(DATE(120 - (($date1- CURTIME)/86400000000)))\") AS Days WHERE Days > 0 SORT_ASC date2 LIMIT 100"},

    {"prompt":"list the date, patient name, and encounter description for all patients associated with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"Show me the date, patient name, and description of the encounter for patients linked to a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"Get the date, patient name, and encounter description for patients associated with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"Provide the date, patient name, and description of the encounter for all patients who have an association with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"Can you fetch the date, patient name, and encounter description for patients with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"I'm interested in the date, patient name, and encounter description for all patients connected to a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"Please retrieve the date, patient name, and encounter description for patients who are associated with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"Show me the date, patient name, and description of the encounter for patients with an association to a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"Get the date, patient name, and encounter description for all patients who have a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},
    {"prompt":"Provide the date, patient name, and description of the encounter for patients associated with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal); RETURN msh.signalDateTime AS \"Date\", pid.name AS \"Patient\", msh.description AS \"Encounter Description\" LIMIT 100"},

    {"prompt":"list the date of establishment and reason for referral for all patients associated with an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"Show me the date and reason for referral for patients linked to an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"Get the establishment date and reason for referral for patients associated with an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"Provide the date and reason for referral for all patients who have an association with an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"Can you fetch the establishment date and reason for referral for patients with an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"I'm interested in the date and reason for referral for all patients connected to an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"Please retrieve the date and reason for referral for patients who are associated with an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"Show me the establishment date and reason for referral for patients with an association to an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"Get the date and reason for referral for all patients who have a signal message with an active problem ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},
    {"prompt":"Provide the date and reason for referral for patients associated with an active problem in a signal message ","completion":"S1{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@prb ActiveProblem:*); RETURN r2.dateEstablished AS \"Date\", prb.preferredTerm AS \"Reason for Referral\" LIMIT 100"},

    {"prompt":"list all information related to healthcare activities for patients associated with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"Show me the details of healthcare activities for patients connected to a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the information about healthcare activities for patients who are associated with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"Provide the complete data regarding healthcare activities for patients linked to a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"Can you fetch all the details of healthcare activities for patients with a signal message association ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"I'm interested in obtaining the information about healthcare activities for all patients in connection with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"Please retrieve all the data related to healthcare activities for patients who have a signal message association ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"Show me the complete information regarding healthcare activities for patients associated with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the details about healthcare activities for patients who have a signal message association ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},
    {"prompt":"Provide the comprehensive data of healthcare activities for patients connected to a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@evn HealthCareActivity:*);RETURN * LIMIT 100"},

    {"prompt":"list the date of observation and lifestyle factors for patients associated with a signal message, specifically focusing on certain codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the date and lifestyle factors related to patients connected to a signal message, considering specific codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the date and lifestyle factors for patients who are associated with a signal message, with a focus on particular codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the observation date and lifestyle factors for patients linked to a signal message, specifically for certain codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Can you fetch the observation date and lifestyle factors for patients with a signal message association, filtering by specific codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"I'm interested in obtaining the date and lifestyle factors for all patients in connection with a signal message, considering specific codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Please retrieve the observation date and lifestyle factors for patients who have a signal message association, focusing on particular codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the complete information regarding the date of observation and lifestyle factors for patients associated with a signal message, filtering by specific codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the date and lifestyle factors for patients who have a signal message association, specifically looking at certain codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the observation date and lifestyle factors for patients connected to a signal message, considering specific codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS \"Lifestyle Factor\", obx.code AS code WHERE code = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_DESC code LIMIT 100"},

    {"prompt":"list the last status change date and procedure information for patients associated with a signal message, specifically focusing on procedures with a duration of less than one day ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"Show me the date of the last status change and the procedure details for patients connected to a signal message, considering procedures that occurred within the past 24 hours ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the date of the most recent status change and the procedure information for patients who are associated with a signal message, with a focus on procedures completed in less than a day ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"Provide the last status change date and the corresponding procedure for patients linked to a signal message, specifically for procedures that occurred recently ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"Can you fetch the date of the last status change and the procedure details for patients with a signal message association, filtering by procedures completed within one day ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"I'm interested in obtaining the last status change date and the procedure information for all patients in connection with a signal message, considering procedures that have a duration of less than one day ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"Please retrieve the last status change date and the procedure details for patients who have a signal message association, focusing on procedures completed within a day ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"Show me the complete information regarding the last status change date and the procedures for patients associated with a signal message, filtering by procedures completed within one day ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the last status change date and the corresponding procedure for patients who have a signal message association, specifically looking at procedures that occurred recently ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the last status change date and the procedure information for patients connected to a signal message, considering procedures completed within a day ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*);RETURN r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC Date LIMIT 100"},

    {"prompt":"list the date and procedure information for patients associated with a signal message, specifically focusing on therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Show me the date and details of the procedures for patients connected to a signal message, considering therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the date and procedure information for patients who are associated with a signal message, with a focus on therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Provide the date and corresponding procedure for patients linked to a signal message, specifically for therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Can you fetch the date and procedure details for patients with a signal message association, filtering by therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"I'm interested in obtaining the date and procedure information for all patients in connection with a signal message, considering therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Please retrieve the date and procedure details for patients who have a signal message association, focusing on therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Show me the complete information regarding the date and procedures for patients associated with a signal message, filtering by therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the date and corresponding procedure for patients who have a signal message association, specifically looking at therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the date and procedure information for patients connected to a signal message, considering therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS Date, pr1.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},

    {"prompt":"list the date, symptom, and code information for patients associated with a signal message, specifically for the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the date, symptom, and code details for patients connected to a signal message, focusing on the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the date, symptom, and code information for patients who are associated with a signal message, with a focus on the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the date, symptom, and code for patients linked to a signal message, specifically for the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Can you fetch the date, symptom, and code details for patients with a signal message association, filtering by the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"I'm interested in obtaining the date, symptom, and code information for all patients in connection with a signal message, considering the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Please retrieve the date, symptom, and code details for patients who have a signal message association, focusing on the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the complete information regarding the date, symptom, and code for patients associated with a signal message, filtering by the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the date, symptom, and code for patients who have a signal message association, specifically looking at the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the date, symptom, and code information for patients connected to a signal message, considering the symptom codes C0562483, C0013404, C0008031, C0037011, C0019079, C0015672, and C0745015 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1s SignOrSymptom);RETURN r2.date AS Date, dg1s.preferredTerm AS Symptom, dg1s.code AS code WHERE code = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC code LIMIT 100"},

    {"prompt":"list the date, disorder, and code information for patients associated with a signal message, specifically related to the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the date, disorder, and code details for patients connected to a signal message, focusing on the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get the date, disorder, and code information for patients who are associated with a signal message, with a focus on the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the date, disorder, and code for patients linked to a signal message, specifically for the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Can you fetch the date, disorder, and code details for patients with a signal message association, filtering by the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"I'm interested in obtaining the date, disorder, and code information for all patients in connection with a signal message, considering the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Please retrieve the date, disorder, and code details for patients who have a signal message association, focusing on the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the complete information regarding the date, disorder, and code for patients associated with a signal message, filtering by the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get the date, disorder, and code for patients who have a signal message association, specifically looking at the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the date, disorder, and code information for patients connected to a signal message, considering the disease or syndrome codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@dg1d DiseaseOrSyndrome:*); RETURN r2.date AS Date, dg1d.preferredTerm AS Disorder,dg1d.code AS code SORT_DESC code LIMIT 100"},

    {"prompt":"list the date, observation, and code for patients associated with a signal message, specifically for the given observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the date, observation, and code details for patients connected to a signal message, focusing on the specified observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the date, observation, and code information for patients who are associated with a signal message, with a focus on the provided observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the date, observation, and code for patients linked to a signal message, specifically related to the given observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Can you fetch the date, observation, and code details for patients with a signal message association, filtering by the specified observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"I'm interested in obtaining the date, observation, and code information for all patients in connection with a signal message, considering the provided observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Please retrieve the date, observation, and code details for patients who have a signal message association, focusing on the given observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Show me the complete information regarding the date, observation, and code for patients associated with a signal message, filtering by the provided observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the date, observation, and code for patients who have a signal message association, specifically looking at the given observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the date, observation, and code information for patients connected to a signal message, considering the provided observation codes ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*); RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation,obx.code AS code WHERE code= [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC code LIMIT 100"},

    {"prompt":"list the date, observation, value, and unit of measure for patients associated with a signal message and the corresponding laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"Show me the date, observation, value, and unit of measure details for patients connected to a signal message, along with the relevant laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the date, observation, value, and unit of measure information for patients who are associated with a signal message and have findings related to laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"Provide the date, observation, value, and unit of measure for patients linked to a signal message, specifically for findings and laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"Can you fetch the date, observation, value, and unit of measure details for patients with a signal message association and findings related to laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"I'm interested in obtaining the date, observation, value, and unit of measure information for all patients in connection with a signal message and their corresponding laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"Please retrieve the date, observation, value, and unit of measure details for patients who have a signal message association and findings related to laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"Show me the complete information regarding the date, observation, value, and unit of measure for patients associated with a signal message and their relevant laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the date, observation, value, and unit of measure for patients who have a signal message association and findings related to laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the date, observation, value, and unit of measure information for patients connected to a signal message and their corresponding laboratory procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obx Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS Date, obx.preferredTerm AS Observation, r2.value AS Value, r2.UnitOfMeasure AS Unit SORT_ASC Date LIMIT 100"},

    {"prompt":"list the last update date received and the corresponding therapeutic or preventive procedure for patients associated with a signal message ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"Show me the last update received date and the procedure details for patients connected to a signal message, specifically for therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"Get the date of the last update received and the associated procedure for patients who are associated with a signal message and have undergone therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"Provide the last update received date and the procedure information for patients linked to a signal message, specifically for therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"Can you fetch the last update received date and the procedure details for patients with a signal message association and therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"I'm interested in obtaining the last update received date and the procedure details for all patients in connection with a signal message and their corresponding therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"Please retrieve the last update received date and the procedure details for patients who have a signal message association and have undergone therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"Show me the complete information regarding the last update received date and the procedure for patients associated with a signal message and their relevant therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"Get the last update received date and the procedure details for patients who have a signal message association and have undergone therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the last update received date and the procedure information for patients connected to a signal message and their corresponding therapeutic or preventive procedures ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr1 TherapeuticOrPreventiveProcedure:*);RETURN r2.date AS \"Lastupdatereceived\", pr1.preferredTerm AS \"Procedure\", MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days WHERE Days !~ NA LIMIT 100"},

    {"prompt":"list the last update date received, the procedure details, and the corresponding laboratory procedure for patients associated with a signal message and an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"Show me the last update received date, the procedure information, and the laboratory procedure for patients connected to a signal message and an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"Get the date of the last update received, the procedure details, and the associated laboratory procedure for patients who are associated with a signal message and have an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"Provide the last update received date, the procedure details, and the laboratory procedure information for patients linked to a signal message and an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"Can you fetch the last update received date, the procedure information, and the laboratory procedure details for patients with a signal message association and an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"I'm interested in obtaining the last update received date, the procedure details, and the laboratory procedure for all patients in connection with a signal message and their corresponding observation findings ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"Please retrieve the last update received date, the procedure details, and the laboratory procedure information for patients who have a signal message association and an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"Show me the complete information regarding the last update received date, the procedure details, and the laboratory procedure for patients associated with a signal message and an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"Get the last update received date, the procedure details, and the laboratory procedure information for patients who have a signal message association and an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},
    {"prompt":"Provide the comprehensive data of the last update received date, the procedure details, and the laboratory procedure information for patients connected to a signal message and an observation finding ","completion":"S{UNIQUE_SELECT}=>(@pid Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr Finding:*)-[@r3 IS_RESULT_FOR]->(@LP LaboratoryProcedure:*);RETURN r2.dateOfObservation AS \"Lastupdatereceived\", obr.preferredTerm AS Procedure, MATH_EXP(\"ROUND(DATE(($Lastupdatereceived-CURTIME)/86400000000))\") AS Days LIMIT 100"},

    {"prompt":"list the date of observation, formatted as dd/mm/yyyy, along with the observation details, value, unit of measure, and abnormal flag for findings associated with patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"Show me the date of observation, formatted as dd/mm/yyyy, the observation, value, unit of measure, and abnormal flag for findings linked to patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"Get the date of observation in the format dd/mm/yyyy, along with the observation, value, unit of measure, and abnormal flag for findings associated with patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"Provide the date of observation, formatted as dd/mm/yyyy, the observation, value, unit of measure, and abnormal flag for findings linked to patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"Can you fetch the date of observation, formatted as dd/mm/yyyy, the observation, value, unit of measure, and abnormal flag for findings associated with patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"I'm interested in obtaining the date of observation, in dd/mm/yyyy format, the observation, value, unit of measure, and abnormal flag for findings associated with patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"Please retrieve the date of observation, formatted as dd/mm/yyyy, along with the observation, value, unit of measure, and abnormal flag for findings linked to patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"Show me the complete information regarding the date of observation, formatted as dd/mm/yyyy, the observation, value, unit of measure, and abnormal flag for findings associated with patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"Get the date of observation, in dd/mm/yyyy format, the observation, value, unit of measure, and abnormal flag for findings linked to patients and signals, sorted in ascending order of signals","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},
    {"prompt":"Provide the comprehensive data of the date of observation, formatted as dd/mm/yyyy, the observation, value, unit of measure, and abnormal flag for findings associated with patients and signals, sorted in ascending order of signals ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH {value !~ NA}]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L DiagnosticProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 1"},

    {"prompt":"Show me all the allergies associated with patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"list the complete information about the allergies of patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Get me the details of all the allergies reported for patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Provide the list of allergies linked to patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Show me the allergies recorded for patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Fetch all the allergies that patients have ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Give me the information about allergies associated with patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Display the allergies reported for patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details of allergies linked to patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Show me the complete list of allergies associated with patients ","completion":"S=>(@P Patient)-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN * LIMIT 10"},

    {"prompt":"Provide all the allergy information ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"Give me the complete list of allergies ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"Show me all the recorded allergies ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"Display all the available allergy details ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"list the comprehensive allergy data ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"Present the complete list of allergies ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"Provide an overview of all the reported allergies ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"Show all the available allergy information ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"Give me a comprehensive list of allergies ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},
    {"prompt":"Display all the recorded allergies ","completion":"S=>(@A Allergies:*);RETURN * LIMIT 100"},

    {"prompt":"Count the total number of patients and allergies ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"list the count of patients and allergies ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"Provide the number of patients and allergies ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"Get the total count of patients and recorded allergies ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"Calculate the total number of patients and their corresponding allergies ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"Determine the count of patients and reported allergies ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"Count how many patients and allergies are recorded ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"Obtain the total count of patients and their allergies ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"Retrieve the number of patients and associated allergies ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},
    {"prompt":"Calculate the total number of patients and the number of allergies reported ","completion":"S=>(@P Patient:* )-[@r1 HAS_ALLERGY]->(@A Allergies:*);RETURN UCOUNT(P.name) AS Total_Patient, UCOUNT(A.name) AS Allergies LIMIT 100"},

    {"prompt":"list all the information related to patients and their allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Get the complete data regarding patients and their allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Return all the details associated with patients and allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Provide a comprehensive overview of patients and their allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Fetch all the records pertaining to patients and allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Gather all the information about patients and their allergic conditions ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete dataset of patients and their allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Present the entire information concerning patients and allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Display all the relevant data regarding patients and their allergic reactions ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the comprehensive records of patients and their allergy information ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN * LIMIT 10"},

    {"prompt":"list all the information related to various entities and their allergies ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Get the complete data regarding different entities and their allergies ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Return all the details associated with various entities and allergies ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Provide a comprehensive overview of different entities and their allergies ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Fetch all the records pertaining to various entities and allergies ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Gather all the information about different entities and their allergic conditions ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete dataset of various entities and their allergies ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Present the entire information concerning different entities and allergies ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Display all the relevant data regarding various entities and their allergic reactions ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the comprehensive records of different entities and their allergy information ","completion":"S=>(*)-[*]->(@A Allergies:*);RETURN * LIMIT 10"},

    {"prompt":"Fetch all the information related to allergies and provide the results ","completion":"S=>(@A Allergies:*)<-[*]-(*);RETURN * LIMIT 10"},
    {"prompt":"Gather data associated with allergies and display the outcome ","completion":"S=>(@A Allergies:*)<-[*]-(*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the relevant details connected to allergies and present them ","completion":"S=>(@A Allergies:*)<-[*]-(*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the information linked to allergies and show the findings ","completion":"S=>(@A Allergies:*)<-[*]-(*);RETURN * LIMIT 10"},
    {"prompt":"Return the records of all the entities connected to allergies ","completion":"S=>(@A Allergies:*)<-[*]-(*);RETURN * LIMIT 10"},
    {"prompt":"Display records of entities connected to allergies ","completion":"S=>(@A Allergies:*)<-[*]-(*);RETURN * LIMIT 10"},
    {"prompt":"Show records of entities and their allergy relationships ","completion":"S=>(@A Allergies:*)<-[*]-(*);RETURN * LIMIT 10"},

    {"prompt":"list the total count of patients with different ID types who have allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Get the count of patients with various ID types who are affected by allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Count the total number of patients with different ID types who have allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Obtain the count of patients with different identification types who are affected by allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Retrieve the total number of patients categorized by ID types who have allergies ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Get the count of patients with allergies based on different ID types ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Count the total number of patients with allergies according to their ID types ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Obtain the count of patients with allergies categorized by different ID types ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Retrieve the total count of patients with allergies and their respective ID types ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},
    {"prompt":"Get the count of patients with allergies based on their ID types ","completion":"S=>(@P Patient:* )-[*]->(@A Allergies:*);RETURN P.ID_type AS ID_type, COUNT(P.name) AS Total_rel LIMIT 100"},

    {"prompt":"list all information related to consent ","completion":"S=>(@C Consent:*);RETURN * LIMIT 100"},
    {"prompt":"Get all details of consent ","completion":"S=>(@C Consent:*);RETURN * LIMIT 100"},
    {"prompt":"list the complete data concerning consent ","completion":"S=>(@C Consent:*);RETURN * LIMIT 100"},
    {"prompt":"Obtain the entire information regarding consent ","completion":"S=>(@C Consent:*);RETURN * LIMIT 100"},
    {"prompt":"list all records associated with consent ","completion":"S=>(@C Consent:*);RETURN * LIMIT 100"},
    {"prompt":"Get all the available information about consent ","completion":"S=>(@C Consent:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all data related to consent ","completion":"S=>(@C Consent:*);RETURN * LIMIT 100"},
    
    {"prompt":"list all information related to patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Get all details pertaining to patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete data concerning patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the entire information regarding patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all records associated with patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the available information about patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all data related to patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the complete set of information regarding patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details regarding patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Get a comprehensive overview of patient consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN * LIMIT 10"},

    {"prompt":"list the personal identification and national health identification of patients along with the total count ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Get the unique identifiers and the total count of patients associated with consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Retrieve the patient's unique identification numbers and the total count of patients linked to consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Obtain the personal and national health identification of patients along with the total count ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Retrieve the identification information and total count of patients who have given consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Get the unique identifiers of patients, their national health identification, and the overall count ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Retrieve the patient identification details and calculate the total count of patients involved in consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Obtain the personal and national health identifiers of patients, along with the total count ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Retrieve the patient's unique identification numbers and calculate the total count of patients associated with consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},
    {"prompt":"Get the identification information and the total number of patients who have provided consent ","completion":"S=>(@P Patient:*)-[*]->(@C Consent:*);RETURN P.id_PI AS id_PI, P.id_NH AS id_NH, COUNT(P.name) AS total LIMIT 100"},

    {"prompt":"list the consent details for the patient with the personal identification 4767317636, first name IVAN, and last name RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Get the consent information associated with the patient having the personal identification 4767317636, first name IVAN, and family name RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the consent records for the patient identified by the personal identification 4767317636, with the first name IVAN and the last name RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the consent details for the patient whose personal identification is 4767317636, first name is IVAN, and family name is RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the consent information for the patient with the personal identification 4767317636 and the name IVAN RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Get the consent records associated with the patient whose personal identification is 4767317636, first name is IVAN, and last name is RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the consent details for the patient identified by the personal identification 4767317636, with the first name IVAN and the family name RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the consent information for the patient with the personal identification 4767317636 and the name IVAN RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the consent records for the patient having the personal identification 4767317636, first name IVAN, and family name RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},
    {"prompt":"Get the consent details for the patient whose personal identification is 4767317636, first name is IVAN, and last name is RUTHER ","completion":"S=>(@P Patient:* {id_PI = \"4767317636\" AND firstName = \"IVAN\" AND familyName = \"RUTHER\"})-[*]->(@C Consent:*);RETURN * LIMIT 10"},

    {"prompt":"list the sexual orientation information associated with the patient whose personal identification is 3538597783, first name is ASA, and last name is PURYEAR, and who has given consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Get the sexual orientation details for the patient with the personal identification 3538597783, first name ASA, and family name PURYEAR, who has provided consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation records for the patient identified by the personal identification 3538597783, with the first name ASA, last name PURYEAR, and valid consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Obtain the sexual orientation information for the patient whose personal identification is 3538597783, first name is ASA, last name is PURYEAR, and who has given consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation details for the patient having the personal identification 3538597783, first name ASA, last name PURYEAR, and valid consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Get the sexual orientation information associated with the patient with the personal identification 3538597783, first name ASA, and family name PURYEAR, who has provided consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation records for the patient whose personal identification is 3538597783, first name is ASA, last name is PURYEAR, and who has given consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Obtain the sexual orientation details for the patient identified by the personal identification 3538597783, with the first name ASA, last name PURYEAR, and valid consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation information for the patient with the personal identification 3538597783, first name ASA, last name PURYEAR, and valid consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Get the sexual orientation records associated with the patient whose personal identification is 3538597783, first name is ASA, last name is PURYEAR, and who has given consent ","completion":"S2=>[S1=>(@P Patient:* {id_PI = \"3538597783\" AND firstName = \"ASA\" AND familyName = \"PURYEAR\"})-[@r1 CONSENTS_TO]->(@C Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 100"},

    {"prompt":"list all information associated with the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the records of the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain information related to the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details regarding the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Get the information associated with the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the records containing the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain details about the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the information regarding the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},
    {"prompt":"Get the records associated with the patient's sexual orientation ","completion":"S1=>(@P Patient:* )-[@r1 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN * LIMIT 10"},

    {"prompt":"list all information related to sexual orientation ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the details of different sexual orientations ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the records of various sexual orientations ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain information about different types of sexual orientation ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve all the details regarding sexual orientation ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the information associated with diverse sexual orientations ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the records containing information on sexual orientation ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain details about various aspects of sexual orientation ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve all the information regarding different sexual orientations ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the records associated with various sexual orientations ","completion":"S1=>(@S SexualOrientation:*); LIMIT 100"},

    {"prompt":"list the first name, last name, date of birth, sexual orientation, severity, identification date, reaction, and type for patients with allergies and their associated sexual orientations ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Get the first name, last name, date of birth, sexual orientation, severity, identification date, reaction, and type for patients who have allergies and are associated with a particular sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Retrieve patient details including their first name, last name, date of birth, and information about their allergies and sexual orientation, such as severity, identification date, reaction, and type ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Obtain information about patients' first names, last names, dates of birth, and their allergies, along with details of their sexual orientation including name, severity, identification date, reaction, and type ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Retrieve patient information including their first name, last name, date of birth, and details about their allergies and associated sexual orientations, including severity, identification date, reaction, and type ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Get details of patients' first names, last names, dates of birth, and their allergies, along with information about their sexual orientations, including severity, identification date, reaction, and type ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Retrieve the first name, last name, date of birth, sexual orientation, severity, identification date, reaction, and type for patients with allergies, along with their associated sexual orientations ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Obtain the first name, last name, date of birth, sexual orientation, severity, identification date, reaction, and type for patients who have allergies and are associated with various sexual orientations ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Retrieve patient records containing their first names, last names, dates of birth, and information about their allergies and associated sexual orientations, including severity, identification date, reaction, and type ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},
    {"prompt":"Get patient data, including their first name, last name, date of birth, and details about allergies, along with information about their sexual orientation, including severity, identification date, reaction, and type ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@A Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@S SexualOrientation:*);RETURN P.firstName AS First_Name, P.familyName AS Family_Name, P.dateOfBirth AS DOB, S.name AS Sexual_Orientation, r1.severity AS Severity, r1.date AS Identification_Date, r1.date AS Reaction,r1.type AS type LIMIT 100"},

    {"prompt":"list address information ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Get details about addresses ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Obtain data related to addresses ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Retrieve information regarding addresses ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Get address records ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Obtain details about physical addresses ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Retrieve address-related data ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Get information about residential addresses ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Obtain records of addresses ","completion":"S=>(@A Address:*); LIMIT 20"},
    {"prompt":"Retrieve data associated with addresses ","completion":"S=>(@A Address:*); LIMIT 20"},

    {"prompt":"list all patient-address associations and address details ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Get all patient records along with their corresponding addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain complete information about patients and their addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve patient data and associated address information ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Get all patients and their respective addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain a comprehensive view of patients and their addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve patient-address relationships and address details ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Get all patient records including their addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain a complete overview of patients and their addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve data showing the connection between patients and their addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN * LIMIT 10"},

    {"prompt":"list the total count of patients associated with each country and city in the address records ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Get the count of patients grouped by country and city in the address data ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Obtain the total number of patients residing in each country and city based on their recorded addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"list the count of patients for each country and city in the address information ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Get the total count of patients residing in different countries and cities according to their recorded addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Obtain the number of patients associated with each country and city based on the address records ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Retrieve the count of patients categorized by country and city in the available address entries ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Get the total count of patients residing in different countries and cities as per their address information ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    
    {"prompt":"list the total count of patients along with their ID types, grouped by country and city in the address records ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Get the count of patients categorized by their ID types, country, and city based on their recorded addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Obtain the total number of patients along with their ID types residing in each country and city as per their address information ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Retrieve the count of patients for each ID type, country, and city in the available address data ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Get the total count of patients along with their ID types residing in different countries and cities according to their recorded addresses ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Obtain the number of patients categorized by ID type, country, and city based on the address records ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Retrieve the count of patients for each ID type, country, and city recorded in the address database ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Get the total count of patients along with their ID types residing in different countries and cities as per their address information ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Obtain the count of patients for each ID type, country, and city in the address dataset ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},
    {"prompt":"Retrieve the total number of patients along with their ID types, associated with each country and city in the address information ","completion":"S=>(@P Patient:*)-[*]->(@A Address:*);RETURN P.idType AS ID_type, A.country AS Country,A.city AS City, COUNT(P.name) AS Total_count LIMIT 10"},

    {"prompt":"list the type of address associated with patients who have a signal of message type A09 and are identified by the NH ID issuer IBM. Also, get the signal description, patient ID, and city of their address ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"Get the address type, signal description, patient ID, and city for patients with a signal of message type A09 and NH ID issuer IBM ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"list the address type, signal description, patient ID, and city for patients who have a signal with message type A09 and are identified by the NH ID issuer IBM ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"Obtain the type of address, signal description, patient ID, and city for patients whose signals have a message type of A09 and are associated with the NH ID issuer IBM ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"Get the address type, signal description, patient ID, and city for patients who have a signal with message type A09 and are linked to the NH ID issuer IBM in their address records ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"Retrieve the type of address, signal description, patient ID, and city for patients whose signals have a message type of A09 and are associated with the NH ID issuer IBM ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"Obtain the address type, signal description, patient ID, and city for patients who have a signal with message type A09 and have an NH ID issuer of IBM ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"Get the type of address, signal description, patient ID, and city for patients with signals of message type A09 and are identified by the NH ID issuer IBM in their address information ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"Retrieve the address type, signal description, patient ID, and city for patients whose signals have a message type of A09 and are associated with the NH ID issuer IBM in their address data ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},
    {"prompt":"Obtain the type of address, signal description, patient ID, and city for patients who have a signal with message type A09 and are linked to the NH ID issuer IBM in their address records ","completion":"S=>(@S Signal:* { messageType = \"A09\"})-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:* {idIssuer_NH = \"IBM\"})-[@r2 LIVES_IN]->(@A Address:*);RETURN r2.type AS Type S.description AS Signal_Description, P.name AS PatientID, A.city AS City LIMIT 100"},

    {"prompt":"Return all the information related to patients who have allergies and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"list the details of patients who have allergies and are linked to a sexual orientation entity ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Get the complete information of patients who have allergies and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Return the relevant data for patients who have allergies and are linked to a sexual orientation entity ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the records of patients who have allergies and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Obtain the details of patients who have allergies and are linked to a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Get the complete information for patients who have allergies and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Return the relevant data of patients who have allergies and are linked to a sexual orientation entity ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the records related to patients who have allergies and are associated with a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},
    {"prompt":"Obtain the details of patients who have allergies and are linked to a sexual orientation ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN * LIMIT 100"},

    {"prompt":"Return the count of patients who have given consent to share their DCR information and are associated with an address in Brentwood city ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"list the number of patients who have consented to share their DCR and have an address in Brentwood ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the count of patients who reside in Brentwood and have given consent to share their DCR information ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the total count of patients in Brentwood who have consented to share their DCR ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the number of patients from Brentwood city who have provided consent to share their DCR information ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the count of patients residing in Brentwood city who have given consent for DCR sharing ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the total count of patients who have consented to share their DCR and have an address in Brentwood ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the number of patients residing in Brentwood city and have given consent to share their DCR information ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients who live in Brentwood and have given consent for DCR sharing ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the total count of patients in Brentwood city who have consented to share their DCR ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(City) WHERE City = Brentwood SORT_ASC Count LIMIT 100"},

    {"prompt":"Return the count of patients who have allergies with severity and were associated with their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"list the number of patients who have reported allergies with severity and are linked to their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the count of patients who have allergies with severity and are associated with their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the total count of patients who have reported allergies with severity and their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the number of patients who have allergies with severity and are linked to their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients who have allergies with severity and their sexual orientation. ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the total count of patients who have allergies with severity and are associated with their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the count of patients who have reported allergies with severity and their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the number of patients who have allergies with severity and are associated with their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients who have allergies with severity and their sexual orientation ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) > 2020}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},

    {"prompt":"Get the count of patients who have given consent to share their information and live in a specific city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the number of patients who consent to share their information and have their address in a particular city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the total count of patients who have granted consent for information sharing and reside in a specific city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the count of patients who have provided consent to share their information and live in a particular city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients who have consented to share their information and have an address in a specific city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients who have consented to share their information and are residing in a specific city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Obtain the total count of patients who have given their consent to share information and have their address in a specific city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Return the count of patients who have consented to share their information and have their address in a particular city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Get the number of patients who have granted consent to share their information and reside in a specific city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients who have given consent for information sharing and live in a specific city ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:* {dcrConsentToShare !~NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.city AS City, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count SORT_ASC Count LIMIT 100"},

    {"prompt":"list the consent status of patients for data sharing and data storage, along with the count of patients, where the count exceeds 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Get the count of patients who have consented to share their data and store their data, and where the count is greater than 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Obtain the number of patients who have given consent for data sharing and data storage, and the count should be higher than 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Return the count of patients who have consented to share their data and store it, and the count should be above 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Retrieve the total count of patients who have granted consent for data sharing and data storage, where the count is more than 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Get the count of patients who have agreed to share their data and allow its storage, and the count should exceed 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Obtain the number of patients who have given consent for data sharing and data storage, and the count should be greater than 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Return the count of patients who have consented to share their data and store it, and the count should be higher than 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Get the total count of patients who have provided consent for data sharing and data storage, and the count should surpass 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},
    {"prompt":"Retrieve the count of patients who have consented to share their data and store it, and the count should be more than 20 ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN D.dcrConsentToShare AS DCR_Consent_To_Share, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count WHERE Count > 20 LIMIT 100"},

    {"prompt":"list the data controller, date, message code, message type, signal description, document type, document status, document location, and the number of days since the signal date ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the entity responsible for data control, signal date, message code, message type, signal description, document type, document status, document location, and the duration in days since the signal date ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the data controller, signal date, message code, message type, signal description, document type, document status, document location, and the number of days elapsed since the signal ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Return the data controller, signal date, message code, message type, signal description, document type, document status, document location, and the time in days since the signal ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the organization responsible for data control, signal date, message code, message type, signal description, document type, document status, document location, and the days that have passed since the signal ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the data controller, signal date, message code, message type, signal description, document type, document status, document location, and the calculated number of days since the signal ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the entity in charge of data control, signal date, message code, message type, signal description, document type, document status, document location, and the duration in days since the signal occurred ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Return the data controller, signal date, message code, message type, signal description, document type, document status, document location, and the days since the signal was recorded ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the responsible data controller, signal date, message code, message type, signal description, document type, document status, document location, and the calculated days since the signal was generated ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the data controller, signal date, message code, message type, signal description, document type, document status, document location, and the number of days that have passed since the signal date ","completion":"S=>(@S Signal:* );RETURN S.dataController AS dataController, DISTINCT(S.signalDateTime) AS Date, S.messageCode AS MessageCode, S.messageType AS messageType, S.description AS Signal_Description, S.documentType AS documentType, S.documentStatus AS documentStatus, S.documentLocation AS documentLocation, MATH_EXP(\"ROUND(DATE((CURTIME-$Date)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},

    {"prompt":"list the sexual orientation, city, and the count of patients associated with their respective addresses ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the name of the sexual orientation, city of residence, and the total count of patients ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the sexual orientation category, city location, and the number of patients in each category ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the sexual orientation label, city of residence, and the count of patients within each category ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation name, city where patients live, and the total count of patients ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the sexual orientation type, corresponding city, and the total number of patients associated with each ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the name of the sexual orientation, city of residence, and the count of patients for each category ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the sexual orientation, city, and the total count of patients in each category ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the sexual orientation category, city of residence, and the count of patients belonging to each category ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the sexual orientation label, city location, and the total count of patients associated with each sexual orientation ","completion":"S=>[S1=>(@P Patient:*)-[@r1 LIVES_IN]->(@D Address:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS SexualOrientation, D.city AS City, COUNT(P.name) AS Count SORT_DESC Count LIMIT 100"},

    {"prompt":"list the ID issuer for patients with drug allergies and their corresponding count ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID issuer of patients who have drug allergies and the total count of such patients ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the ID issuer of patients with a drug allergy and count the number of patients in this category ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the ID issuer associated with patients having a drug allergy and calculate the count of patients ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID issuer for patients who are allergic to drugs and determine the total count of such patients ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID issuer of patients with a drug allergy and count how many patients fall into this category ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Obtain the ID issuer for patients who have reported a drug allergy and calculate the count of patients in this group ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Return the ID issuer associated with patients who have a drug allergy and determine the total count of patients ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Retrieve the ID issuer for patients with drug allergies and calculate the count of patients in this category ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},
    {"prompt":"Get the ID issuer of patients who have reported a drug allergy and count how many patients fall into this group ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.idIssuer_NH AS idIssuer_NH, r1.type AS Description, COUNT(P.name) AS Count WHERE Description = \"Drug allergy\" SORT_DESC Count LIMIT 100"},

    {"prompt":"list the count of male patients with a consent status of Consent Status Unknown and their gender information ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Get the count of male patients whose consent status is labeled as Consent Status Unknown and include their gender ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Obtain the number of male patients who have an unknown consent status and display their gender along with the count ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Return the count of male patients with an unknown consent status and provide their gender information ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Retrieve the total count of male patients who have not specified their consent status and include their gender ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Get the count of male patients who haven't provided their consent status and display their gender ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Obtain the number of male patients whose consent status is unknown and include their gender in the count ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Return the count of male patients with an undisclosed consent status and include their gender information ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Retrieve the total count of male patients with an unknown consent status and provide their gender ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},
    {"prompt":"Get the count of male patients whose consent status is unknown and display their gender information ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 LIVES_IN]->(@H Address:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" SORT_ASC Gender LIMIT 100"},

    {"prompt":"list the count of male patients with an unknown consent status and their gender information while excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Get the count of male patients whose consent status is labeled as unknown and include their gender, excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Obtain the number of male patients with an undisclosed consent status and display their gender along with the count, excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Return the count of male patients whose consent status is unknown and provide their gender information, excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Retrieve the total count of male patients with a consent status labeled as unknown and include their gender, excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Get the count of male patients who haven't specified their consent status and display their gender, excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Obtain the number of male patients with an unknown consent status and include their gender in the count, excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Return the count of male patients with an unknown consent status and provide their gender, excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Retrieve the total count of male patients with an undisclosed consent status and provide their gender, excluding duplicate consent status entries ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},
    {"prompt":"Get the count of male patients whose consent status is unknown and display their gender information, excluding duplicate consent status entries. ","completion":"S2=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN P.gender AS Gender, D.locationHiding AS Location_Hiding, D.dcrConsentToShare AS DCR_Consent_To_Share, COUNT(P.name) AS Count EXCLUDE_GROUPBY(DCR_Consent_To_Share) WHERE DCR_Consent_To_Share = \"Consent Status Unknown\" AND Gender = \"Male\" LIMIT 100"},

    {"prompt":"list the association between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the relationship between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the connection between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the link between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the correlation between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the association between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the relationship between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Obtain the connection between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Get the link between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},
    {"prompt":"Retrieve the correlation between patients, allergies, and sexual orientation ","completion":"S1=>[S2=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*); LIMIT 100"},

    {"prompt":"Return the sexual orientation, severity of allergies, and count of patients associated with them ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"list the name of the sexual orientation, severity of allergies, and count of patients related to them ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"Get the sexual orientation name, severity of allergies, and count of associated patients ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"Obtain the name of the sexual orientation, severity of allergies, and the number of patients connected to them ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"Return the sexual orientation's name, severity of allergies, and the total count of patients involved ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"Retrieve the name of the sexual orientation, severity level of allergies, and the count of patients associated with it ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"Get the sexual orientation name, severity of allergies, and count of patients linked to it ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"Obtain the name of the sexual orientation, severity of allergies, and the count of patients associated with it ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"Return the sexual orientation's name, severity of allergies, and the count of patients connected to it ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},
    {"prompt":"Retrieve the name of the sexual orientation, severity of allergies, and the total count of patients associated with it ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN H.name AS Sexual_Orientation, r1.severity AS Severity, COUNT(P.name) AS Count SORT_DESC Sexual_Orientation LIMIT 100"},

    {"prompt":"Find the consented patients who live at the address '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"list the patients who have given consent and reside at the address '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"Get the patients who have granted consent and live at the address '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"Find the patients who have provided consent and have their residence at '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"Retrieve the patients who have agreed to consent and are living at the address '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"Get the patients who have given their consent and currently reside at '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"Find the patients who have consented and have their living address set as '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"Retrieve the patients who have granted their consent and have their residence located at '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"Get the patients who have agreed to consent and are currently living at '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},
    {"prompt":"Find the patients who have given consent and have their residential address specified as '7168 Hurst Springs, CM2 9JN, Chelmsford, Essex, UK' ","completion":"S2{UNIQUE_IN_CONTEXT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:2Yes0)]-[@r2 LIVES_IN]->(@H Address:\"7168 Hurst SpringsCM2 9JNChelmsfordEssexUK\"); LIMIT 1"},

    {"prompt":"Get the street name, city, state, postal code, and country of the patient with ID 4213065983120541618 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"list the street address, city, state, postal code, and country associated with the patient having ID 4213065983120541618 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Find the patient with ID 4213065983120541618 and retrieve their street name, city, state, postal code, and country ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Get the street name, city, state, postal code, and country information for the patient identified as 4213065983120541618 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Retrieve the street name, city, state, postal code, and country related to the patient with ID 4213065983120541618 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Find the patient whose ID is 4213065983120541618 and retrieve the corresponding street name, city, state, postal code, and country ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Get the patient's street name, city, state, postal code, and country for the patient ID 4213065983120541618 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Retrieve the patient's street name, city, state, postal code, and country associated with the patient ID 4213065983120541618 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Find the street name, city, state, postal code, and country information for the patient with ID 4213065983120541618 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Get the patient's street name, city, state, postal code, and country details for the patient ID 4213065983120541618 ","completion":"S{UNIQUE_SELECT}=>(@P Patient:4213065983120541618)-[@r LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},

    {"prompt":"list the street name, city, state, postal code, and country information for all patients and their associated addresses ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Get the street name, city, state, postal code, and country details for patients and their corresponding addresses ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Find the street address, city, state, postal code, and country for patients and their associated addresses ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Retrieve the street name, city, state, postal code, and country data for patients and their addresses ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Get the address details including street name, city, state, postal code, and country for all patients","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Find the street name, city, state, postal code, and country information related to patients and their addresses ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Retrieve the street name, city, state, postal code, and country for all patients and their associated addresses ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Get the street name, city, state, postal code, and country records for patients and their addresses ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Find the address details such as street name, city, state, postal code, and country for all patients ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},
    {"prompt":"Retrieve the street name, city, state, postal code, and country information for patients and their addresses ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[*]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN A.streetAddress AS Street_Name, A.city AS City, A.stateProvince AS State, Z.name AS Postal_Code, A.country AS Country SORT_DESC Postal_Code LIMIT 100"},

    {"prompt":"list information about all postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Get details of all postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Find data related to postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Retrieve information about the available postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Get the details of postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Find the records of postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Retrieve information about postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Get data about the postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Find details of available postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},
    {"prompt":"Retrieve the records of postcodes ","completion":"S=>(@P Postcode:*); LIMIT 100"},

    {"prompt":"Fetch patient records along with their associated addresses and postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"Get patient information, including their addresses and corresponding postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"list details of patients, their addresses, and the related postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"Find patient data along with their addresses and postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"Get records of patients, their addresses, and the associated postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"Fetch information about patients, their addresses, and the corresponding postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"Retrieve data of patients, their addresses, and the linked postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"Obtain details of patients, their addresses, and the related postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"Access patient records along with their addresses and the respective postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},
    {"prompt":"Retrieve patient information, including their addresses and the corresponding postcodes ","completion":"S=>(@P Patient:*)-[@r1 *]->(@A Address:*)-[@r2 *]->(@Z Postcode:*); LIMIT 100"},

    {"prompt":"Fetch addresses along with their associated postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Get information about addresses and their corresponding postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"list details of addresses and the related postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Find data of addresses along with the linked postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Get records of addresses and the associated postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Fetch information about locations and their corresponding postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Retrieve data of addresses and the linked postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Obtain details of locations and the related postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Access address records along with the respective postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Retrieve information about places and their corresponding postcodes ","completion":"S=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},

    {"prompt":"Get all the addresses and their associated postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"list the addresses along with their corresponding postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Fetch the data of locations and their linked postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Obtain information about addresses and the related postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Access the records of addresses and the associated postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Retrieve details of places and their corresponding postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Find the data of addresses and the linked postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Get the details of locations and the related postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Fetch the records of addresses and their respective postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Retrieve information about places and their associated postcodes ","completion":"S{UNIQUE}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},

    {"prompt":"Count the unique number of addresses where patients live ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the total count of distinct addresses where patients reside ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the number of different addresses associated with patients' living locations ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Find the count of unique addresses where patients are located ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the total number of distinct addresses linked to patients' residences ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the unique count of addresses where patients live ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the total number of different addresses associated with patients' living places ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Find the count of distinct addresses where patients are located ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the unique count of addresses linked to patients' residential areas ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the total count of different addresses where patients reside ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Count the number of unique addresses where patients reside ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the total count of distinct addresses associated with patients' living locations ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the unique count of addresses linked to patients' residential areas ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Find the number of different addresses where patients are located ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the total number of distinct addresses where patients live ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the unique count of addresses associated with patients' living places ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Determine the count of unique addresses where patients are situated ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Find the total count of different addresses linked to patients' residences ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Count the unique number of addresses where patients are located ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Calculate the total count of distinct addresses where patients reside ","completion":"S=>(@P Patient:*)-[@r1 LIVES_IN]->(@A Address:*)-[@r2 *]->(@Z Postcode:*);RETURN UCOUNT(A.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the name of the address and the associated postcode ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get the address name and its corresponding postal code ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"list the address and its associated postal code ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Fetch the name of the address along with its postcode ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the address name and the code of the associated postcode ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Display the name of the address and its corresponding postcode ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show the address name and the code of the linked postal area ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Present the name of the address and its corresponding postal code ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Give the address name and the code of the associated postcode ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Output the name of the address and the corresponding postal code ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Address:*)-[@r IS_ASSOCIATED_WITH]->(@O Postcode:*);RETURN S.name AS Address, O.name AS code SORT_DESC code LIMIT 100"},

    {"prompt":"list all information about the healthcare organizations ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Get details about the healthcare organizations ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Display all the data related to the healthcare organizations ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Provide information about the healthcare institutions ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Show all the records concerning the healthcare organizations ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Present the complete dataset for the healthcare organizations ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Output all the information available for the healthcare organizations ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve and display data about the healthcare organizations ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Give an overview of the healthcare organizations ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},
    {"prompt":"Show all the details pertaining to the healthcare institutions ","completion":"S=>(@O HealthCareOrganisation:*);RETURN * LIMIT 100"},

    {"prompt":"list all the signals associated with healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get information about the signals linked to healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Display all the data related to signals and healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Provide details about the signals and their association with healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Show all the records of signals and healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Present the complete dataset for signals and healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Output all the information available for signals and healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve and display data about the relationship between signals and healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Give an overview of the signals and their connection to healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Show all the details pertaining to the signals and healthcare organizations ","completion":"S=>(@S Signal:*)-[*]->(@O HealthCareOrganisation:*);RETURN * LIMIT 10"},

    {"prompt":"list the healthcare organizations associated with signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Get information about the healthcare organizations linked to signals ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Display all the data related to signals and their association with healthcare organizations","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Provide details about the signals and their connection to healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Show all the records of signals and their association with healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Present the complete dataset for signals and healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Output all the information available for signals and their association with healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Retrieve and display data about the relationship between signals and healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Give an overview of the signals and their connection to healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Show all the details pertaining to the signals and healthcare organizations ","completion":"S{UNIQUE_IN_CONTEXT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},

    {"prompt":"Retrieve the signals associated with the healthcare organization psm_dev_v1_0 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Get information about the signals linked to the specific healthcare organization ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Display all the data related to the signals associated with psm_dev_v1_0 healthcare organization ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Provide details about the signals and their connection to the healthcare organization psm_dev_v1_0 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Show all the records of signals associated with the specified healthcare organization ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Present the complete dataset for signals and their association with the psm_dev_v1_0 healthcare organization ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Output all the information available for signals and their association with the specific healthcare organization ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Retrieve and display data about the relationship between signals and the psm_dev_v1_0 healthcare organization ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Give an overview of the signals and their connection to the specified healthcare organization ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},
    {"prompt":"Show all the details pertaining to the signals and the psm_dev_v1_0 healthcare organization ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:\"psm_dev_v1_0\");RETURN * LIMIT 10"},

    {"prompt":"list the signals linked to any healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Get information about the signals associated with a healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Display the signals and their connection to a healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Provide details about the signals and their association with a healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Show all the records of signals associated with any healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Present the complete dataset for signals and their association with a healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Output all the information available for signals and their connection to a healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Retrieve and display data about the relationship between signals and a healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Give an overview of the signals and their connection to a specific healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},
    {"prompt":"Show all the details pertaining to the signals and a healthcare organization ","completion":"S{UNIQUE}=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); LIMIT 100"},

    {"prompt":"Fetch all the signals associated with any healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"list the signals linked to a healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"Get information about the signals and their connection to a healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"Display the signals and their association with a healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"Provide details about the signals and their association with any healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"Show all the records of signals associated with a healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"Present the complete dataset for signals and their association with any healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"Output all the information available for signals and their connection to a healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"Retrieve and display data about the relationship between signals and any healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},
    {"prompt":"Give an overview of the signals and their connection to a healthcare organization ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O HealthCareOrganisation:*); RETURN * LIMIT 10"},

    {"prompt":"list all the associations between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Fetch the connections between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Get the data regarding the relationship between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Display the associations between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Provide information about the linkages between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Show all the records of healthcare organizations associated with postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Present the complete dataset for healthcare organizations and their association with postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Output all the details available for the connections between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Retrieve and display data about the relationship between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},
    {"prompt":"Give an overview of the associations between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[IS_ASSOCIATED_WITH]->(@Z Postcode:*);RETURN * SORT_ASC evpk LIMIT 10"},

    {"prompt":"list all the connections between healthcare organizations and postcodes and return the results ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Fetch the data related to the associations between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Get the information regarding the linkages between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Display all the records of healthcare organizations associated with postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Provide a comprehensive overview of the relationships between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Show the complete dataset for healthcare organizations and their association with postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Present the details of the connections between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Output the associations between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Retrieve and display the data about the connections between healthcare organizations and postcodes ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},
    {"prompt":"Give an overview of the relationships between healthcare organizations and postcodes, including all the relevant details ","completion":"S=>(@O HealthCareOrganisation:*)-[*]->(@Z Postcode:*);RETURN * SORT_DESC evpk LIMIT 10"},

    {"prompt":"list all the relationships where one healthcare organization is operated by another healthcare organization and return the results ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Fetch the data associated with the operational connections between healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get the information about the operations of healthcare organizations by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Display all the records of healthcare organizations that are operated by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Provide a comprehensive overview of the relationships where healthcare organizations are operated by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Show the complete dataset for the operational connections between healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Present the details of the relationships where healthcare organizations are operated by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Output the operational connections between healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve and display the data about the relationships where healthcare organizations are operated by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Give an overview of the operational relationships between healthcare organizations, including all the relevant details ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},

    {"prompt":"list the names of healthcare organizations that are operated by other healthcare organizations and count the total number of occurrences ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Get the total count of healthcare organizations that are operated by other healthcare organizations and display their names ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Count the number of healthcare organizations that are operated by other healthcare organizations and provide the total count ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Show the total count of healthcare organizations that are operated by other healthcare organizations, along with their names ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Retrieve the names of healthcare organizations that have an operational relationship with other healthcare organizations and count them ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Provide the total count of healthcare organizations that are operated by other healthcare organizations, including their names ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Display the names of healthcare organizations that are operated by other healthcare organizations and count the total occurrences ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Count the number of healthcare organizations that have an operational relationship with other healthcare organizations and return the total count ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Show the total count of healthcare organizations that are operated by other healthcare organizations, accompanied by their names ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},
    {"prompt":"Retrieve the names of healthcare organizations that are operated by other healthcare organizations, along with the total count ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_OPERATED_BY]->(@P HealthCareOrganisation:*);RETURN S.name AS Health_Care_Organisation, COUNT(S.name) AS total LIMIT 100"},

    {"prompt":"Return all the information about healthcare organizations that are commissioned by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"list data on healthcare organizations that receive commissions from other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get details about healthcare organizations that are commissioned by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Provide information about healthcare organizations that are authorized by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Return the records of healthcare organizations that are commissioned by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve data on healthcare organizations that receive commissions from partnering healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Get details about healthcare organizations that have a commissioning relationship with other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Provide information about healthcare organizations that are designated by other healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Return the information about healthcare organizations that are commissioned by partnering healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve data on healthcare organizations that receive commissions from associated healthcare organizations ","completion":"S=>(@S HealthCareOrganisation:*)-[@r IS_COMMISSIONED_BY]->(@P HealthCareOrganisation:*);RETURN * LIMIT 10"},

    {"prompt":"Return all the details about hospital services ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"list information about services provided by hospitals ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"Get data on the different hospital services available ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"Provide details on the services offered by hospitals ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"Return the records of hospital services ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve information about the various services provided by hospitals ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"Get data on the different types of services offered in hospitals ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"Provide details on the specific services available in hospitals ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"Return the information about the services provided by healthcare institutions ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},
    {"prompt":"Retrieve data on the different hospital service offerings ","completion":"S=>(@H HospitalService:*);RETURN * LIMIT 100"},

    {"prompt":"Return all the signals associated with hospital services ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"list information about the location of signals in hospital services ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"Get data on the signals related to specific hospital services ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"Provide details on the signals that correspond to hospital services ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"Return the records of signals linked to hospital services ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"list information about the specific signals located within hospital services ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"Get data on the signals that are associated with different hospital services ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"Provide details on the location of signals within healthcare institutions ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"Return the information about the signals linked to various hospital service offerings ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve data on the signals that indicate the presence of hospital services ","completion":"S=>(@S Signal:*)-[IS_LOCATION_OF]->(@H HospitalService:*);RETURN * LIMIT 10"},

    {"prompt":"Return the count of patients who have given consent for data sharing and live at specific addresses ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"list the number of patients residing at particular addresses who have consented to share their data ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"Get the count of patients who have provided consent for data sharing and have their addresses recorded ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"Provide the total count of patients who live at specific addresses and have given consent for data sharing ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"Return the number of patients residing at particular addresses who have agreed to share their data ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the count of patients who have given consent for data sharing and their addresses are available ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"Get the total count of patients living at specific addresses who have consented to share their data ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"Provide the number of patients residing at particular addresses who have authorized data sharing ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"Return the count of patients who have given consent for data sharing and are associated with specific addresses ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},
    {"prompt":"Retrieve the total count of patients living at specific addresses who have agreed to share their data ","completion":"S2{UNIQUE_SELECT}=>[S1=>(@P Patient:*)-[@r1 CONSENTS_TO]->(@D Consent:*{scrConsentToShare !~ NA})]-[@r2 LIVES_IN]->(@H Address:*);RETURN H.name AS Address, D.scrConsentToShare AS SCR_Consent_To_Store, COUNT(P.name) AS Count LIMIT 100"},

    {"prompt":"Return the type, date, and new formatted date of allergies experienced by patients associated with sexual orientation, excluding duplicate new dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"list the description, date, and transformed date format of allergies recorded for patients with a specific sexual orientation, excluding repeated transformed dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Get the allergy type, date, and modified date format of patients associated with sexual orientation, excluding duplicate modified dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the description, date, and converted date format of allergies reported by patients linked to a particular sexual orientation, excluding duplicate converted dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Return the allergy type, date, and updated date format of patients associated with sexual orientation, excluding duplicate updated dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the description, date, and reformatted date of allergies experienced by patients with a specific sexual orientation, excluding duplicate reformatted dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Get the type, date, and newly formatted date of allergies recorded for patients linked to sexual orientation, excluding duplicate newly formatted dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Provide the allergy description, date, and transformed date format for patients associated with sexual orientation, excluding duplicate transformed dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Return the type, date, and modified date format of allergies reported by patients associated with a specific sexual orientation, excluding duplicate modified dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the description, date, and converted date format of allergies experienced by patients associated with sexual orientation, excluding duplicate converted dates ","completion":"S2{UNIQUE}=>[S1=>(@P Patient:*)-[@r1 HAS_ALLERGY {DATE_YEAR($date+0) = 2022 AND DATE_MONTH($date+0) >= 1 AND DATE_MONTH($date+0) <= 11 AND severity !~ NA}]->(@D Allergies:*)]-[@r2 IS_ASSOCIATED_WITH]->(@H SexualOrientation:*);RETURN r1.type AS Description, r1.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Date_New_Format EXCLUDE_GROUPBY(Date_New_Format) SORT_ASC date LIMIT 100"},

    {"prompt":"list all information related to the signal with the ID psm_dev_v1_020230123051623.9623 and its associated entities ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Return all details associated with the signal having the identifier psm_dev_v1_020230123051623.9623 and its connected elements ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Provide all data linked to the signal identified as psm_dev_v1_020230123051623.9623 and its associated entities ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all information related to the specific signal psm_dev_v1_020230123051623.9623 and its connected entities ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Return all details associated with the signal having the ID psm_dev_v1_020230123051623.9623 and its related elements ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Provide all data linked to the signal identified as psm_dev_v1_020230123051623.9623 and its associated elements ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all information related to the signal with the specific identifier psm_dev_v1_020230123051623.9623 and its connected components ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Return all details associated with the signal having the unique ID psm_dev_v1_020230123051623.9623 and its associated entities ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Provide all data linked to the signal identified as psm_dev_v1_020230123051623.9623 and its related elements ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all information related to the specific signal psm_dev_v1_020230123051623.9623 and its associated entities ","completion":"q=>(@S Signal:psm_dev_v1_020230123051623.9623)-[*]->(*);RETURN * LIMIT 10"},

    {"prompt":"Provide the relationships and the total count of entities connected to the HealthCareOrganisation with the identifier PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"list the connections and the overall count of entities associated with the HealthCareOrganisation identified as PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"Return the relations and the total number of entities linked to the HealthCareOrganisation labeled as PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"Get the relationships and the count of all entities connected to the HealthCareOrganisation with the ID PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"Provide the connections and the total count of entities associated with the HealthCareOrganisation labeled as PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"Retrieve the relations and the overall count of entities linked to the HealthCareOrganisation with the unique identifier PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"Return the relationships and the total number of entities connected to the HealthCareOrganisation identified as PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"Get the connections and the count of all entities associated with the HealthCareOrganisation with the label PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"Provide the relations and the total count of entities linked to the HealthCareOrganisation with the ID PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},
    {"prompt":"Retrieve the connections and the overall count of entities associated with the HealthCareOrganisation labeled as PSM002 ","completion":"q=>(@H HealthCareOrganisation:PSM002)<-[@r *]-(@a *);RETURN r.rel AS relations, COUNT(*) AS total LIMIT 10"},

    {"prompt":"Return all entities connected to the HealthCareOrganisation identified as PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Provide all the connected entities that are linked to the HealthCareOrganisation labeled as PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the entities that have a relationship with the HealthCareOrganisation with the identifier PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Get all the entities that are connected to the HealthCareOrganisation with the unique identifier PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Return all the entities that are linked to the HealthCareOrganisation with the label PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Provide all the connected entities associated with the HealthCareOrganisation identified as PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the entities that have a connection to the HealthCareOrganisation labeled as PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Get all the entities that are linked to the HealthCareOrganisation with the ID PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Return all the entities that are associated with the HealthCareOrganisation labeled as PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},
    {"prompt":"Provide all the connected entities that are linked to the HealthCareOrganisation with the ID PSM002 ","completion":"q=>(*)-[*]->(@H HealthCareOrganisation:PSM002); RETURN * LIMIT 10"},

    {"prompt":"list all entities connected to the Patient identified as 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Get all the connected entities that are linked to the Patient with the ID 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Return all the entities that have a relationship with the Patient labeled as 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Provide all the entities that are connected to the Patient with the unique identifier 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Get all the entities that are linked to the Patient with the ID 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the entities that have a connection to the Patient labeled as 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Return all the entities that are associated with the Patient identified as 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Provide all the connected entities associated with the Patient with the ID 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Get all the entities that are linked to the Patient labeled as 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},
    {"prompt":"Retrieve all entities connected to the Patient with the unique identifier 4213065983120541618 ","completion":"q=> (*)-[*]->(@P Patient:4213065983120541618); RETURN * LIMIT 10"},

    {"prompt":"Find all the signals that have a connection to any entity, and then find all the entities connected to those signals. Return all the retrieved entities ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"list all the signals and their associated entities, and return the complete set of entities ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"Get all the entities that are linked to the signals, which are in turn connected to another set of entities. Return all the entities found ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"Find all the signals and their corresponding entities, and retrieve all the entities from the result ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the entities connected to the signals, which themselves are connected to other entities. Return all the entities obtained ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"Get all the entities that are associated with signals, and retrieve the complete set of entities ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"Find all the signals connected to any entity, and retrieve all the entities connected to those signals. Return all the entities ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"Retrieve all the entities associated with signals, which are in turn connected to other entities. Return the complete set of entities ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"Find all the entities connected to signals, which themselves are connected to other entities. Return all the retrieved entities ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},
    {"prompt":"Get all the entities associated with signals, and retrieve all the entities from the result ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@X *)]-[@r2 *]->(@Y *);RETURN * LIMIT 100"},

    {"prompt":"list the names of signals where the signal name is either psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Get the signal names that match either psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Retrieve the names of signals that are either psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Get the signal names where the signal is either psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Retrieve the signal names that match any of the following: psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Get the names of signals that are either psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Retrieve the signal names where the signal is equal to psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Get the names of signals that match any of the following: psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Retrieve the names of signals that are either psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},
    {"prompt":"Get the signal names where the signal matches either psm_dev_v1_020220307044831.6067, psm_dev_v1_020220915043931.643, or psm_dev_v1_020220814224534.9082 ","completion":"S{UNIQUE_SELECT}=>(@S Signal:*);RETURN S.name AS Signal WHERE Signal = [\"psm_dev_v1_020220307044831.6067\",\"psm_dev_v1_020220915043931.643\",\"psm_dev_v1_020220814224534.9082\"] LIMIT 100"},

    {"prompt":"list the names of signals associated with patients where the patient ID matches either 3173614904298131950, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"Get the signal names that are associated with patients having the patient ID 3173614904298131950, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"list the names of signals that are linked to patients with the patient IDs 3173614904298131950, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"Get the signal names associated with patients having either 3173614904298131950, 479965874341068995, or 7243787200604964049 as their patient IDs ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"Retrieve the names of signals that are associated with patients having the patient ID 3173614904298131950, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"Get the names of signals that are linked to patients with the patient IDs 3173614904298131950, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"Retrieve the signal names where the patient ID is either 3173614904298131950, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"Get the names of signals associated with patients having either 3173614904298131950, 479965874341068995, or 7243787200604964049 as their patient IDs ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"Retrieve the signal names linked to patients with the patient IDs 3173614904298131950, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},
    {"prompt":"Get the names of signals that are associated with patients whose patient ID matches either 3173614904298131950, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = \"3173614904298131950\" OR PatientID = \"479965874341068995\" OR PatientID = \"7243787200604964049\" LIMIT 100"},

    {"prompt":"list the names of signals associated with patients whose patient IDs match either 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Get the signal names that are associated with patients having the patient IDs 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Retrieve the names of signals that are linked to patients with the patient IDs 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Get the signal names associated with patients whose patient IDs are either 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Retrieve the names of signals that are associated with patients whose patient IDs match either 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Get the names of signals that are linked to patients with the patient IDs 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Retrieve the signal names where the patient IDs are either 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Get the names of signals associated with patients whose patient IDs match either 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Retrieve the signal names linked to patients with the patient IDs 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},
    {"prompt":"Get the names of signals that are associated with patients whose patient IDs are either 4736591400837699273, 479965874341068995, or 7243787200604964049 ","completion":"S=>(@S Signal:*)-[IS_ASSOCIATED_WITH]->(@P Patient:*);RETURN S.name AS Signal, P.name AS PatientID WHERE PatientID = [\"4736591400837699273\",\"479965874341068995\",\"7243787200604964049\"] LIMIT 100"},

    {"prompt":"list all the information about health care activities that are located in hospital services ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of health care activities associated with hospital services ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"list the data related to health care activities that are located within hospital services ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"Get information about the activities provided by hospitals ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details of health care activities that are linked to hospital services ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"Get the information regarding health care activities associated with hospitals ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the records of health care activities that are located in hospital services ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of activities conducted by hospitals ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the information about health care activities that are associated with hospital services ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},
    {"prompt":"Get the data related to health care activities located in hospitals ","completion":"S=>(@W HospitalService:*)-[IS_LOCATION_OF]->(@H HealthCareActivity:*);RETURN * LIMIT 10"},

    {"prompt":"list all the information about signals that are linked to points of care ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of signals associated with specific points of care ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the data related to signals that are connected to points of care ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Get information about the signals received at different points of care ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the details of signals that are associated with specific points of care ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Get the information regarding signals received at different care points ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the records of signals that are connected to points of care ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of signals received at various care points ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the information about signals that are received at points of care ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},
    {"prompt":"Get the data related to signals that are linked to specific points of care ","completion":"S=>(@S Signal:*)-[*]->(@P PointOfCare:*);RETURN * LIMIT 10"},

    {"prompt":"list the relationships between signals and points of care along with the count of those relationships ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Get the count of relationships between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Retrieve the number of connections between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Count the relationships between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Obtain the count of connections between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Retrieve the total number of relationships between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Count the associations between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Get the number of connections between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Retrieve the count of relationships between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},
    {"prompt":"Obtain the total number of connections between signals and points of care ","completion":"S=>(@S Signal:*)-[@r1 *]->(@P PointOfCare:*);RETURN r1.rel AS relations, COUNT(*) AS rel LIMIT 100"},

    {"prompt":"Fetch all the information related to signals and their associations with active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"list the data associated with signals and their connections to active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"Get the details of signals and their relationships with active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve all the information pertaining to signals and their links to active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the data concerning signals and their associations with active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"Fetch the details of signals and their connections to active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"Retrieve the complete information about signals and their relationships with active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"Get all the data related to signals and their links to active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"Obtain the details of signals and their associations with active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},
    {"prompt":"Fetch all the relevant information about signals and their connections to active problems ","completion":"S=>(@S Signal)-[*]->(@A ActiveProblem:*);RETURN * LIMIT 10"},

    {"prompt":"list the preferred term of therapeutic or preventive procedures associated with patients through signals, along with the date of the signal and the number of days elapsed since the date ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the preferred term of therapeutic or preventive procedures linked to patients via signals, along with the signal date and the duration in days ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Fetch the procedure's preferred term for therapeutic or preventive procedures associated with patients through signals, including the signal date and the number of days passed ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the preferred term of therapeutic or preventive procedures connected to patients through signals, along with the signal date and the days elapsed ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the preferred term of therapeutic or preventive procedures associated with patients through signals, along with the date of the signal and the calculated number of days ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the preferred term of therapeutic or preventive procedures linked to patients via signals, along with the signal date and the duration expressed in days ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Fetch the procedure's preferred term for therapeutic or preventive procedures associated with patients through signals, including the signal date and the calculated days ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Obtain the preferred term of therapeutic or preventive procedures connected to patients through signals, along with the signal date and the calculated days ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the preferred term of therapeutic or preventive procedures associated with patients through signals, along with the date of the signal and the rounded number of days ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the preferred term of therapeutic or preventive procedures linked to patients via signals, along with the signal date and the rounded duration in days ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.signalDateTime AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS Days SORT_ASC Date LIMIT 100"},

    {"prompt":"list the date of observation, observation details, value, unit of measure, diagnostic service, and abnormal reason associated with diagnostic procedures linked to patients through signals and findings ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Get the date of observation, observation information, value, unit of measure, diagnostic service, and abnormal reason for diagnostic procedures connected to patients through signals and findings ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Fetch the observation date, observation description, value, unit of measure, diagnostic service, and abnormal reason related to diagnostic procedures associated with patients through signals and findings ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Obtain the date of observation, observation name, value, unit of measure, diagnostic service, and abnormal reason for diagnostic procedures associated with patients through signals and findings ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Retrieve the date of observation, observation details, value, unit of measure, diagnostic service, and abnormal reason linked to diagnostic procedures through signals and findings associated with patients ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Get the date of observation, observation information, value, unit of measure, diagnostic service, and abnormal reason for diagnostic procedures associated with patients through signals and findings ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Fetch the observation date, observation description, value, unit of measure, diagnostic service, and abnormal reason related to diagnostic procedures linked to patients through signals and findings ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Obtain the date of observation, observation name, value, unit of measure, diagnostic service, and abnormal reason associated with diagnostic procedures linked to patients through signals and findings ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Retrieve the date of observation, observation details, value, unit of measure, diagnostic service, and abnormal reason associated with diagnostic procedures and findings linked to patients through signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},
    {"prompt":"Get the date of observation, observation information, value, unit of measure, diagnostic service, and abnormal reason for diagnostic procedures and findings connected to patients through signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" op.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" LIMIT 100"},

    {"prompt":"Get the observation, data controller, message code, and diagnostic service associated with laboratory procedures, findings, and signals linked to patients. Filter by the diagnostic service being Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR and sort the results in descending order based on the message code ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"list the observation, data controller, message code, and diagnostic service for laboratory procedures, findings, and signals associated with patients. Filter the results by the diagnostic service, including Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR Sort the data in descending order based on the message code ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the observation, data controller, message code, and diagnostic service related to laboratory procedures, findings, and signals associated with patients. Only include results where the diagnostic service is Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR Arrange the data in descending order based on the message code ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the observation, data controller, message code, and diagnostic service associated with laboratory procedures, findings, and signals linked to patients. Filter the results by the diagnostic service, including Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR Sort the information in descending order based on the message code ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the observation, data controller, message code, and diagnostic service for laboratory procedures, findings, and signals associated with patients. Only include data where the diagnostic service is Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR Arrange the results in descending order based on the message code ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the observation, data controller, message code, and diagnostic service related to laboratory procedures, findings, and signals linked to patients. Filter the information by the diagnostic service, including Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR Sort the data in descending order based on the message code ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Fetch the observation, data controller, message code, and diagnostic service associated with laboratory procedures, findings, and signals linked to patients. Filter the data by the diagnostic service, including Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR Arrange the results in descending order based on the message code ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Obtain the observation, data controller, message code, and diagnostic service for laboratory procedures, findings, and signals associated with patients. Only include results where the diagnostic service is Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR Sort the data in descending order based on the message code ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Retrieve the observation, data controller, message code, and diagnostic service associated with laboratory procedures, findings, and signals linked to patients. Filter by the diagnostic service being Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR and sort the results based on the message code in descending order ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},
    {"prompt":"Get the observation, data controller, message code, and diagnostic service for laboratory procedures, findings, and signals associated with patients. Filter the data by the diagnostic service, including Laboratory, BLB, CH, HM, IMM, MB, MCB, MYC, OSL, SR, TX, or VR Sort the results based on the message code in descending order ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*);RETURN obf.preferredTerm AS \"Observation\", e1.dataController AS \"dataController\", e1.messageCode AS \"messageCode\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\".\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] SORT_DESC messageCode LIMIT 100"},

    {"prompt":"list the date of observation, observation details, value, unit of measure, diagnostic service, and abnormal reason associated with diagnostic procedures, findings, and signals linked to patients. Filter the results by the diagnostic service being Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Get the observation date, observation information, value, unit of measure, diagnostic service, and abnormal reason for diagnostic procedures, findings, and signals related to patients. Only include data where the diagnostic service is Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Retrieve the date of observation, observation description, value, unit of measure, diagnostic service, and abnormal reason associated with diagnostic procedures, findings, and signals linked to patients. Filter the information by the diagnostic service, including Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Obtain the observation date, observation details, value, unit of measure, diagnostic service, and abnormal reason for diagnostic procedures, findings, and signals associated with patients. Only include results where the diagnostic service is Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Fetch the date of observation, observation term, value, unit of measure, diagnostic service, and abnormal reason related to diagnostic procedures, findings, and signals associated with patients. Filter the data by the diagnostic service, including Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Retrieve the observation date, observation name, value, unit of measure, diagnostic service, and abnormal reason for diagnostic procedures, findings, and signals linked to patients. Only include information where the diagnostic service is Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Get the date of observation, observation details, value, unit of measure, diagnostic service, and abnormal reason associated with diagnostic procedures, findings, and signals linked to patients. Filter the results by the diagnostic service, including Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Obtain the observation date, observation information, value, unit of measure, diagnostic service, and abnormal reason for diagnostic procedures, findings, and signals associated with patients. Only include data where the diagnostic service is Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Fetch the date of observation, observation description, value, unit of measure, diagnostic service, and abnormal reason related to diagnostic procedures, findings, and signals associated with patients. Filter the information by the diagnostic service, including Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},
    {"prompt":"Retrieve the observation date, observation term, value, unit of measure, diagnostic service, and abnormal reason associated with diagnostic procedures, findings, and signals linked to patients. Only include results where the diagnostic service is Radiology, CTH, CUS, EC, or VUS ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN r4.dateOfObservation AS \"Date of Observation\", obf.preferredTerm AS \"Observation\", r4.value AS \"Value\", r4.unitOfMeasure AS \"Unit of Measure\" r2.diagnosticService AS \"Diagnostic service\", r4.abnormalFlags AS \"Abnormal reason\" WHERE \"Diagnostic service\" = [\"Radiology\",\"CTH\",\"CUS\",\"EC\",\"VUS\"] SORT_DESC Observation LIMIT 100"},

    {"prompt":"list the observation details, procedure code, diagnostic service, and patient gender for diagnostic procedures, findings, and signals associated with patients. Filter the results by the diagnostic service being Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the observation information, procedure code, diagnostic service, and gender of the patient for diagnostic procedures, findings, and signals linked to patients. Only include data where the diagnostic service is Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the observation description, procedure code, diagnostic service, and gender of the patient for diagnostic procedures, findings, and signals associated with patients. Filter the information by the diagnostic service, including Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the observation term, procedure code, diagnostic service, and patient gender for diagnostic procedures, findings, and signals associated with patients. Only include results where the diagnostic service is Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Fetch the observation details, procedure code, diagnostic service, and gender of the patient related to diagnostic procedures, findings, and signals associated with patients. Filter the data by the diagnostic service, including Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the observation information, procedure code, diagnostic service, and gender of the patient for diagnostic procedures, findings, and signals linked to patients. Only include information where the diagnostic service is Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the observation description, procedure code, diagnostic service, and gender of the patient for diagnostic procedures, findings, and signals associated with patients. Filter the results by the diagnostic service, including Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the observation term, procedure code, diagnostic service, and patient gender for diagnostic procedures, findings, and signals associated with patients. Only include data where the diagnostic service is Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Fetch the observation details, procedure code, diagnostic service, and gender of the patient related to diagnostic procedures, findings, and signals associated with patients. Filter the information by the diagnostic service, including Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the observation information, procedure code, diagnostic service, and gender of the patient for diagnostic procedures, findings, and signals linked to patients. Only include results where the diagnostic service is Radiology, HP, or RAD ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"Radiology\",\"HP\",\"RAD\"] SORT_DESC code LIMIT 100"},

    {"prompt":"list the observation description, procedure code, diagnostic service, and patient gender for laboratory procedures, findings, and signals associated with patients. Filter the results by the diagnostic service being CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the observation information, procedure code, diagnostic service, and gender of the patient for laboratory procedures, findings, and signals linked to patients. Only include data where the diagnostic service is CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the observation term, procedure code, diagnostic service, and gender of the patient for laboratory procedures, findings, and signals associated with patients. Filter the information by the diagnostic service, including CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the observation details, procedure code, diagnostic service, and patient gender for laboratory procedures, findings, and signals associated with patients. Only include results where the diagnostic service is CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Fetch the observation description, procedure code, diagnostic service, and gender of the patient related to laboratory procedures, findings, and signals associated with patients. Filter the data by the diagnostic service, including CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the observation information, procedure code, diagnostic service, and gender of the patient for laboratory procedures, findings, and signals linked to patients. Only include information where the diagnostic service is CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Get the observation term, procedure code, diagnostic service, and gender of the patient for laboratory procedures, findings, and signals associated with patients. Filter the results by the diagnostic service, including CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the observation details, procedure code, diagnostic service, and patient gender for laboratory procedures, findings, and signals associated with patients. Only include data where the diagnostic service is CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Fetch the observation description, procedure code, diagnostic service, and gender of the patient related to laboratory procedures, findings, and signals associated with patients. Filter the information by the diagnostic service, including CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the observation information, procedure code, diagnostic service, and gender of the patient for laboratory procedures, findings, and signals linked to patients. Only include results where the diagnostic service is CP, SP, or Laboratory ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*)<-[@r3 IS_RESULT_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", op.code AS \"code\", r2.diagnosticService AS \"Diagnostic service\", p.gender AS \"gender\" WHERE \"Diagnostic service\" = [\"CP\",\"SP\",\"Laboratory\"] SORT_DESC code LIMIT 100"},

    {"prompt":"list the date of observation, observation description, value, unit of measure, reference range, and observation ID for findings associated with signals and patients. Only include data where the observation ID matches C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Get the observation date, observation term, value, unit of measure, reference range, and observation ID for findings linked to signals and patients. Only include information where the observation ID corresponds to C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Retrieve the date of observation, observation description, value, unit of measure, reference range, and observation ID for findings associated with signals and patients. Only include data where the observation ID matches C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Get the observation date, observation term, value, unit of measure, reference range, and observation ID for findings linked to signals and patients. Only include information where the observation ID corresponds to C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Fetch the date of observation, observation description, value, unit of measure, reference range, and observation ID for findings associated with signals and patients. Only include data where the observation ID matches C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Get the observation date, observation term, value, unit of measure, reference range, and observation ID for findings linked to signals and patients. Only include information where the observation ID corresponds to C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Retrieve the date of observation, observation description, value, unit of measure, reference range, and observation ID for findings associated with signals and patients. Only include data where the observation ID matches C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Get the observation date, observation term, value, unit of measure, reference range, and observation ID for findings linked to signals and patients. Only include information where the observation ID corresponds to C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Fetch the date of observation, observation description, value, unit of measure, reference range, and observation ID for findings associated with signals and patients. Only include data where the observation ID matches C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Get the observation date, observation term, value, unit of measure, reference range, and observation ID for findings linked to signals and patients. Only include information where the observation ID corresponds to C0429745, C0730561, C0040509, C4482149, C1287681, C3828596, C0805916, C0429706, C4700971, C2143178, C4482147, C4027617, C5445904, C4481141, or C4054207","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C0429745\",\"C0730561\",\"C0040509\",\"C4482149\",\"C1287681\",\"C3828596\",\"C0805916\",\"C0429706\",\"C4700971\",\"C2143178\",\"C4482147\",\"C4027617\",\"C5445904\",\"C4481141\",\"C4054207\"] SORT_DESC ObservationID LIMIT 100"},

    {"prompt":"Get the preferred term of diagnostic procedures, the last status update, and the diagnostic service for procedures associated with signals and patients. Include data where the diagnostic service matches Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"list the procedure name, last status update, and diagnostic service for diagnostic procedures linked to signals and patients. Only include information where the diagnostic service is Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"Fetch the preferred term of the diagnostic procedure, the date of the last status update, and the diagnostic service for procedures associated with signals and patients. Limit the results to cases where the diagnostic service is Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"Get the name of the diagnostic procedure, the date of the last status update, and the diagnostic service for diagnostic procedures connected to signals and patients. Include only instances where the diagnostic service matches Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"Retrieve the preferred term for the diagnostic procedure, the date of the last status update, and the diagnostic service for procedures associated with signals and patients. Filter the results to include only cases where the diagnostic service is Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"Get the procedure name, last status update date, and diagnostic service for diagnostic procedures linked to signals and patients. Include information where the diagnostic service matches Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"Retrieve the preferred term of the diagnostic procedure, the last status update date, and the diagnostic service for procedures associated with signals and patients. Include data where the diagnostic service is Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"Get the diagnostic procedure name, last status update date, and diagnostic service for diagnostic procedures associated with signals and patients. Only include information where the diagnostic service corresponds to Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"Fetch the procedure name, last status update, and diagnostic service for diagnostic procedures associated with signals and patients. Include results where the diagnostic service is Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},
    {"prompt":"Retrieve the preferred term of the diagnostic procedure, the last status update date, and the diagnostic service for procedures linked to signals and patients. Only include data where the diagnostic service matches Radiology, RAD, CUS, AU, CT, CTH, EC, EN, ICU, NMR, NMS, NRS, OUS, PF, RAD, RUS, RX, VUS, or XRC ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", op.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Radiology\",\"RAD\",\"CUS\",\"AU\",\"CT\",\"CTH\",\"EC\",\"EN\",\"ICU\",\"NMR\",\"NMS\",\"NRS\",\"OUS\",\"PF\",\"RAD\",\"RUS\",\"RX\",\"VUS\",\"XRC\"] LIMIT 100"},

    {"prompt":"Show the observation, diagnostic service, and code associated with diagnostic procedures that link signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"list the observation, diagnostic service, and code for diagnostic procedures that are connected to signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get the preferred term for the observation, diagnostic service, and code related to diagnostic procedures associated with signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Display the observation, diagnostic service, and code for diagnostic procedures involved in signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the observation, diagnostic service, and code associated with diagnostic procedures that connect signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show the preferred term of the observation, diagnostic service, and code for diagnostic procedures linked to signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get the observation, diagnostic service, and code for diagnostic procedures that are associated with signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Display the observation, diagnostic service, and code related to diagnostic procedures involved in signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the preferred term, diagnostic service, and code for observations associated with diagnostic procedures that link signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show the observation, diagnostic service, and code for diagnostic procedures that are connected to signals, patients, findings, and observations ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*)<-[@r3 IS_FINDING_FOR]-(@obf Finding:*)<-[@r4 IS_ASSOCIATED_WITH]-(@obs Signal:*); RETURN obf.preferredTerm AS \"Observation\", r2.diagnosticService AS \"Diagnostic service\", op.code AS code SORT_DESC code LIMIT 100"},

    {"prompt":"Show the preferred term, date, and remaining days for therapeutic or preventive procedures associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"list the procedure's preferred term, date, and days remaining for therapeutic or preventive procedures linked to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the preferred term, date, and remaining days for therapeutic or preventive procedures connected to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Display the procedure's preferred term, date, and days remaining for therapeutic or preventive procedures associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, date, and remaining days for therapeutic or preventive procedures that are associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Show the procedure's preferred term, date, and days remaining for therapeutic or preventive procedures involved in patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the preferred term, date, and remaining days for therapeutic or preventive procedures associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Display the procedure's preferred term, date, and days remaining for therapeutic or preventive procedures related to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, date, and remaining days for therapeutic or preventive procedures that link patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Show the procedure's preferred term, date, and days remaining for therapeutic or preventive procedures connected to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, e1.occurredDate AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},

    {"prompt":"list the preferred term, last status update, and diagnostic service for laboratory procedures associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Show the procedure's preferred term, last status update, and diagnostic service for laboratory procedures linked to patients and signals. ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Get the preferred term, last status update, and diagnostic service for laboratory procedures connected to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Display the procedure's preferred term, last status update, and diagnostic service for laboratory procedures associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Retrieve the preferred term, last status update, and diagnostic service for laboratory procedures that are associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Show the procedure's preferred term, last status update, and diagnostic service for laboratory procedures involved in patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Get the preferred term, last status update, and diagnostic service for laboratory procedures associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Display the procedure's preferred term, last status update, and diagnostic service for laboratory procedures related to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Retrieve the preferred term, last status update, and diagnostic service for laboratory procedures that link patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},
    {"prompt":"Show the procedure's preferred term, last status update, and diagnostic service for laboratory procedures connected to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic service\" WHERE \"Diagnostic service\" = [\"Laboratory\",\"LAB\",\"BLB\",\"CH\",\"HM\",\"IMM\",\"MB\",\"MCB\",\"MYC\",\"OSL\",\"SR\",\"TX\",\"VR\"] LIMIT 100"},

    {"prompt":"Get the date, code, and symptom for signs or symptoms associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"list the date, code, and symptom for signs or symptoms linked to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"Show the date, code, and symptom for signs or symptoms involved in patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"Display the date, code, and symptom for signs or symptoms associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the date, code, and symptom for signs or symptoms that are associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the date, code, and symptom for signs or symptoms connected to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"Show the date, code, and symptom for signs or symptoms associated with patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"Display the date, code, and symptom for signs or symptoms related to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the date, code, and symptom for signs or symptoms that link patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the date, code, and symptom for signs or symptoms connected to patients and signals ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom SORT_DESC Code LIMIT 100"},

    {"prompt":"Return the date, code, and symptom name for the specified symptom codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"list the date, code, and symptom associated with the specified codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Show the date, code, and symptom name for the given set of codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Provide the date, code, and name of the symptom for the specified codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the date, code, and preferred term for the symptom codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Show the date, code, and symptom associated with the provided codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the date, code, and symptom name corresponding to the given codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Provide the date, code, and preferred term for the specified symptom codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the date, code, and symptom name associated with the provided codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Show the date, code, and symptom details for the given set of codes are C0562483,C0013404,C0008031,C0037011,C0019079,C0015672,C0745015 ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},

    {"prompt":"Give me the date of observation, observation details, value, unit of measure, reference range, and observation ID for the specified observation IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"list the date of observation, specific observation, value, unit of measure, reference range, and observation ID for the given set of observation IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Show the date of observation, observation name, value, unit of measure, reference range, and observation ID for the provided observation IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Provide the date of observation, observation details, value, unit of measure, reference range, and observation ID associated with the specified observation IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Retrieve the date of observation, observation code, value, unit of measure, reference range, and observation ID corresponding to the given observation IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Show me the date of observation, observation name, value, unit of measure, reference range, and observation ID associated with the specified IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Get the date of observation, specific observation, value, unit of measure, reference range, and observation ID for the given observation IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Provide the date of observation, observation details, value, unit of measure, reference range, and observation ID for the specified IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Retrieve the date of observation, observation name, value, unit of measure, reference range, and observation ID associated with the provided IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},
    {"prompt":"Show me the date of observation, observation code, value, unit of measure, reference range, and observation ID for the given set of observation IDs are C1271051,C1271052 ,C1271053 ,C1271054 ,C1271055 ,C4035644 ,C4035645 ,C4035646 ,C0580717","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS ObservationID WHERE ObservationID = [\"C1271051\",\"C1271052\" ,\"C1271053\" ,\"C1271054\" ,\"C1271055\" ,\"C4035644\" ,\"C4035645\" ,\"C4035646\" ,\"C0580717\"] SORT_DESC ObservationID LIMIT 100"},

    {"prompt":"Give me the observation details, date of observation, and observation ID for the specified observation IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"list the observation, date of observation, and observation ID for the given set of observation IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"Show the observation, date of observation, and observation ID for the provided observation IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"Provide the observation details, date of observation, and observation ID associated with the specified observation IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"Retrieve the observation, date of observation, and observation ID corresponding to the given observation IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"Show me the observation, date of observation, and observation ID associated with the specified IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"Get the observation, date of observation, and observation ID for the given observation IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"Provide the observation details, date of observation, and observation ID for the specified IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"Retrieve the observation, date of observation, and observation ID associated with the provided IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},
    {"prompt":"Show the observation details, date of observation, and observation ID for the given set of observation IDs C5545428,C5545429,C4505216,C5545426,C3241966,C0337671,C0425293,C3496610,C0425311,C4718386,C0425319,C0425317,C0425327,C0425325,963051000000100,963071000000109","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\",\"963051000000100\",\"963071000000109\"] SORT_ASC ObservationID LIMIT 100"},

    {"prompt":"Return the consent status for sharing, date, formatted date, issuer ID, and count of patients who have given express consent to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"list the consent status for sharing, date, formatted date, issuer ID, and count of patients who have specifically consented to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the consent status for sharing, date, formatted date, issuer ID, and count of patients who have granted express consent to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the consent status for sharing, date, formatted date, issuer ID, and count of patients who have given their express consent to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the status of consent for sharing, date, formatted date, issuer ID, and count of patients who have agreed to share their information with IBM through express consent ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the consent status for sharing, date, formatted date, issuer ID, and count of patients who have explicitly consented to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"Give me the consent status for sharing, date, formatted date, issuer ID, and count of patients who have granted express consent to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the status of consent for sharing, date, formatted date, issuer ID, and count of patients who have specifically consented to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the consent status for sharing, date, formatted date, issuer ID, and count of patients who have provided express consent to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the consent status for sharing, date, formatted date, issuer ID, and count of patients who have given their express consent to share their information with IBM ","completion":"s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 CONSENTS_TO]->(@op Consent:*); RETURN op.dcrConsentToShare AS dcrConsentToShare, r2.date AS date1, MATH_EXP(\"DATE_FMT($date1, %Y/%m/%d)\") AS Date, e1.idIssuer_NH AS idIssuer, COUNT(p.name) AS cnt EXCLUDE_GROUPBY(date1) WHERE idIssuer = IBM AND dcrConsentToShare = \"Express consent\" SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the city, state/province, message type, message code, and count of patients associated with signals whose address is linked to postcodes in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"list the city, state/province, message type, message code, and count of patients whose signals are associated with addresses located in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the city, state/province, message type, message code, and count of patients linked to signals with addresses in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"can you provide the city, state/province, message type, message code, and count of patients whose signals are associated with addresses in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the city, state/province, message type, message code, and count of patients associated with signals that have addresses located in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the city, state/province, message type, message code, and count of patients whose signals are linked to addresses in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"Give me the city, state/province, message type, message code, and count of patients associated with signals having addresses in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the city, state/province, message type, message code, and count of patients whose signals are linked to addresses in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the city, state/province, message type, message code, and count of patients associated with signals that have addresses in Brentwood, Harlow, or Colchester. ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the city, state/province, message type, message code, and count of patients whose signals are associated with addresses in Brentwood, Harlow, or Colchester ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{documentType !~ NA})]-[@r2 LIVES_IN]->(@op Address:*)-[@r3 IS_ASSOCIATED_WITH]->(@obf Postcode:*); RETURN op.city AS city, op.stateProvince AS stateProvince, e1.messageType AS messageType, e1.messageCode AS messageCode, COUNT(p.name) AS cnt WHERE city =[Brentwood,Harlow] OR city =Colchester SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner associated with signals where the consulting doctor was C14161 and the value is not missing ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"list the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner for signals where the consulting doctor is C14161 and the value is not NA ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner linked to signals where the consulting doctor was C14161 and the value is not null ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner associated with signals in which the consulting doctor was C14161 and the value is not undefined ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner for signals where the consulting doctor is C14161 and the value is valid ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner for signals in which the consulting doctor was C14161 and the value is not NA ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Give me the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner associated with signals where the consulting doctor is C14161 and the value is not missing ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner for signals where the consulting doctor was C14161 and the value is present ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner linked to signals where the consulting doctor is C14161 and the value is available ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the value, message type, message code, document type, count of patients, and name of the responsible observer practitioner associated with signals in which the consulting doctor was C14161 and the value is not null ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN k.value AS value, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the name, preferred term, description, signal ID, and message code of the healthcare activity associated with the patient, signal with message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"list the name, preferred term, description, signal ID, and message code of the healthcare activity linked to the patient, signal having the message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show the name, preferred term, description, signal ID, and message code of the healthcare activity connected to the patient, signal with the message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the name, preferred term, description, signal ID, and message code of the healthcare activity associated with the patient, signal identified by the message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get the name, preferred term, description, signal ID, and message code of the healthcare activity related to the patient, signal categorized with the message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Display the name, preferred term, description, signal ID, and message code of the healthcare activity linked to the patient, signal specified by the message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Give me the name, preferred term, description, signal ID, and message code of the healthcare activity associated with the patient, signal marked with the message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the name, preferred term, description, signal ID, and message code of the healthcare activity linked to the patient, signal identified by the message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show the name, preferred term, description, signal ID, and message code of the healthcare activity connected to the patient, signal with the message code ADT and signal ID 20220618172832.6736, and hospital service","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the name, preferred term, description, signal ID, and message code of the healthcare activity associated with the patient, signal with the message code ADT and signal ID 20220618172832.6736, and hospital service ","completion":"s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*{messageCode = ADT AND signalId = \"20220618172832.6736\"})-[@r2 IS_LOCATION_OF]->(@op HospitalService:*)-[@k IS_LOCATION_OF]->(@s2 HealthCareActivity:*); RETURN s2.name AS name, op.preferredTerm AS preferredTerm, e1.description AS description, e1.signalId AS signalId, e1.messageCode AS code SORT_DESC code LIMIT 100"},

    {"prompt":"Return the patient's name, signal name, message code, finding code, and count of patients associated with the practitioner who acted as the responsible observer for the diagnostic procedure ordered by another practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"list the name of the patient, name of the signal, message code, code of the finding, and count of patients linked to the practitioner who served as the responsible observer for the diagnostic procedure ordered by a different practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the patient's name, signal name, message code, finding code, and count of patients connected to the practitioner who acted as the responsible observer for the diagnostic procedure ordered by another practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the name of the patient, name of the signal, message code, code of the finding, and count of patients associated with the practitioner who fulfilled the role of the responsible observer for the diagnostic procedure ordered by a separate practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the patient's name, signal name, message code, finding code, and count of patients linked to the practitioner who served as the responsible observer for the diagnostic procedure ordered by another practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Display the patient's name, signal name, message code, finding code, and count of patients connected to the practitioner who acted as the responsible observer for the diagnostic procedure ordered by a different practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Give me the name of the patient, name of the signal, message code, code of the finding, and count of patients associated with the practitioner who performed the role of the responsible observer for the diagnostic procedure ordered by another practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the name of the patient, name of the signal, message code, code of the finding, and count of patients linked to the practitioner who served as the responsible observer for the diagnostic procedure ordered by a separate practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Show the patient's name, signal name, message code, finding code, and count of patients connected to the practitioner who acted as the responsible observer for the diagnostic procedure ordered by another practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},
    {"prompt":"Provide the name of the patient, name of the signal, message code, code of the finding, and count of patients associated with the practitioner who fulfilled the role of the responsible observer for the diagnostic procedure ordered by a separate practitioner ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)]-[@r2 CONSULTING_DOCTOR_WAS]->(@s2 Practitioner:*)-[@dsk WAS_RESPONSIBLE_OBSERVER_FOR]->(@sad2 Finding:*)-[@dsdk IS_FINDING_FOR]->(@sadd2 DiagnosticProcedure:*)-[@dd IS_ASSOCIATED_WITH]->(@saddd2 Order:*)-[@ddd ACTION_BY_WAS]->(@sdaddd2 Practitioner:*); RETURN e1.name AS Pname, s2.name AS sname, p.messageCode AS messageCode, sad2.code AS code, COUNT(p.name) AS cnt SORT_DESC cnt LIMIT 100"},

    {"prompt":"Return the code, preferred term, laboratory procedure code, status, and allergy code associated with the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"list the finding code, preferred term, laboratory procedure code, status, and allergy code linked to the signal's finding, laboratory procedure, patient, and allergies ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, preferred term, laboratory procedure code, status, and allergy code connected to the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the finding code, preferred term, laboratory procedure code, status, and allergy code associated with the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Get the code, preferred term, laboratory procedure code, status, and allergy code linked to the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Display the code, preferred term, laboratory procedure code, status, and allergy code connected to the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Give me the finding code, preferred term, laboratory procedure code, status, and allergy code associated with the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, laboratory procedure code, status, and allergy code linked to the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Show the code, preferred term, laboratory procedure code, status, and allergy code connected to the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the finding code, preferred term, laboratory procedure code, status, and allergy code associated with the finding, laboratory procedure, patient, and allergies in the signal ","completion":"s{UNIQUE}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS code SORT_DESC code LIMIT 100"},

    {"prompt":"Return the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity associated with the signal's finding, laboratory procedure, patient, and allergies where the laboratory procedure code is CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"list the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity linked to the signal's finding, laboratory procedure, patient, and allergies when the laboratory procedure code is CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"Show the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity connected to the signal's finding, laboratory procedure, patient, and allergies with the laboratory procedure code as CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"Provide the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity associated with the signal's finding, laboratory procedure, patient, and allergies where the laboratory procedure code matches CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity linked to the signal's finding, laboratory procedure, patient, and allergies for the laboratory procedure with the code CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"Display the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity connected to the signal's finding, laboratory procedure, patient, and allergies when the laboratory procedure code is CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"Give me the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity associated with the signal's finding, laboratory procedure, patient, and allergies with the laboratory procedure code as CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity linked to the signal's finding, laboratory procedure, patient, and allergies when the laboratory procedure code equals CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"Show the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity connected to the signal's finding, laboratory procedure, patient, and allergies where the laboratory procedure code is CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},
    {"prompt":"Provide the finding code, preferred term, laboratory procedure code, status, allergy code, allergy type, and severity associated with the signal's finding, laboratory procedure, patient, and allergies for the laboratory procedure identified as CBC ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS preferredTerm, op.code AS labcode, r1.status AS status, al.code AS allergiescode, ha.type AS Allergytype, ha.severity AS severity WHERE labcode = CBC SORT_DESC labcode LIMIT 100"},

    {"prompt":"Return the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish associated with the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"list the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish linked to the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"Show the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish connected to the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"Provide the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish associated with the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"Get the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish linked to the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"Display the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish connected to the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"Give me the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish associated with the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"Retrieve the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish linked to the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"Show the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish connected to the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},
    {"prompt":"Provide the patient's home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish associated with the patient's address ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish LIMIT 100"},

    {"prompt":"Return the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity associated with the signal's finding, laboratory procedure, patient, and allergies where the finding code is MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"list the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity linked to the signal's finding, laboratory procedure, patient, and allergies when the finding code is MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"Show the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity connected to the signal's finding, laboratory procedure, patient, and allergies with the finding code as MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity associated with the signal's finding, laboratory procedure, patient, and allergies where the finding code matches MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"Get the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity linked to the signal's finding, laboratory procedure, patient, and allergies for the finding with the code MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"Display the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity connected to the signal's finding, laboratory procedure, patient, and allergies when the finding code is MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"Give me the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity associated with the signal's finding, laboratory procedure, patient, and allergies with the finding code as MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity linked to the signal's finding, laboratory procedure, patient, and allergies when the finding code equals MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"Show the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity connected to the signal's finding, laboratory procedure, patient, and allergies where the finding code is MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},
    {"prompt":"Provide the finding code, laboratory procedure code, status, allergy code, allergy type, severity, patient's ID issuer, and ethnicity associated with the signal's finding, laboratory procedure, patient, and allergies for the finding identified as MCV ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*{code = MCV})-[@r2 IS_RESULT_FOR]->(@op LaboratoryProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, op.code AS labcode, r1.status AS status, al.code AS code, ha.type AS Allergytype, ha.severity AS severity, pk.idIssuer_NH AS idIssuer, pk.ethnicity AS ethnicity SORT_DESC code LIMIT 100"},

    {"prompt":"Return the street address, city, gender, ethnicity, order control, signal description, and status associated with the patient's address, order, and signal where the city is either Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Retrieve the street address, city, gender, ethnicity, order control, signal description, and status linked to the patient's address, order, and signal when the city is Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Show the street address, city, gender, ethnicity, order control, signal description, and status connected to the patient's address, order, and signal for the cities Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Provide the street address, city, gender, ethnicity, order control, signal description, and status associated with the patient's address, order, and signal in the cities Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Get the street address, city, gender, ethnicity, order control, signal description, and status linked to the patient's address, order, and signal where the city is either Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Display the street address, city, gender, ethnicity, order control, signal description, and status connected to the patient's address, order, and signal when the city matches Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Give me the street address, city, gender, ethnicity, order control, signal description, and status associated with the patient's address, order, and signal within the cities Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Retrieve the street address, city, gender, ethnicity, order control, signal description, and status linked to the patient's address, order, and signal for the cities Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Show the street address, city, gender, ethnicity, order control, signal description, and status connected to the patient's address, order, and signal in the cities Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},
    {"prompt":"Provide the street address, city, gender, ethnicity, order control, signal description, and status associated with the patient's address, order, and signal where the city is either Tendring, Colchester, Basildon, Brentwood, or Epping Forest ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE city = [Tendring,Colchester,Basildon,Brentwood,\"Epping Forest\"] LIMIT 100"},

    {"prompt":"Return the placer reference, street address, city, gender, ethnicity, order control, signal description, and status associated with the patient's address, order, and signal where the description is either Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"list the placer reference, street address, city, gender, ethnicity, order control, signal description, and status linked to the patient's address, order, and signal when the description is Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"Show the placer reference, street address, city, gender, ethnicity, order control, signal description, and status connected to the patient's address, order, and signal for the descriptions Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"Provide the placer reference, street address, city, gender, ethnicity, order control, signal description, and status associated with the patient's address, order, and signal where the description matches Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"Get the placer reference, street address, city, gender, ethnicity, order control, signal description, and status linked to the patient's address, order, and signal with the descriptions Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"Display the placer reference, street address, city, gender, ethnicity, order control, signal description, and status connected to the patient's address, order, and signal when the description is Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"Give me the placer reference, street address, city, gender, ethnicity, order control, signal description, and status associated with the patient's address, order, and signal having the descriptions Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"Retrieve the placer reference, street address, city, gender, ethnicity, order control, signal description, and status linked to the patient's address, order, and signal for the descriptions Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"Show the placer reference, street address, city, gender, ethnicity, order control, signal description, and status connected to the patient's address, order, and signal in the presence of the descriptions Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},
    {"prompt":"Provide the placer reference, street address, city, gender, ethnicity, order control, signal description, and status associated with the patient's address, order, and signal where the description is either Laboratory Order, Cardiac Ultrasound, or General Clinical Order ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE description = [\"Laboratory Order\",\"Cardiac Ultrasound\",\"General Clinical Order\"] LIMIT 100"},

    {"prompt":"list the identifier and count of orders associated with a specific signal, using the signal's ID ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"Get the ID and number count of orders related to a particular signal by using its unique identifier ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"Show the ID and count of orders associated with a specific signal, identified by its unique ID ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"Display the identifier and count of orders connected to a particular signal, using the signal's ID ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"list the ID and count of orders linked to a specific signal, identified by its unique ID ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"Get the ID and number count of orders associated with a particular signal, using its unique identifier ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"Show the ID and count of orders associated with a specific signal, using the signal's unique ID ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"Display the identifier and count of orders connected to a particular signal, identified by its unique ID ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"Retrieve the ID and count of orders linked to a specific signal, using its unique identifier ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},
    {"prompt":"Get the ID and number count of orders associated with a particular signal, identified by its unique ID ","completion":"<ADD USING id> S2=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*)-[@r2 ACTION_BY_WAS]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S1=>(@S Signal:psm_dev_v1_020230218000423.4977)-[@r IS_ASSOCIATED_WITH]->(@F Order:*);RETURN F.name AS id, COUNT(F.name) AS cnt SORT_DESC cnt LIMIT 3"},

    {"prompt":"list the names and count of practitioners associated with any signal through consulting doctors ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Get the IDs and calculate the number of practitioners linked to signals through consulting doctors ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Obtain the names and count of practitioners who were consulted for any signal ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Retrieve the IDs and calculate the count of practitioners associated with signals through consulting doctors ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Get the names and count of practitioners associated with any signal through consulting doctors ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Obtain the IDs and calculate the number of practitioners linked to signals through consulting doctors ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Retrieve the names and count of practitioners who were consulted for any signal ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Get the IDs and calculate the count of practitioners associated with signals through consulting doctors ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Retrieve the names and count of practitioners associated with any signal through consulting doctors ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Obtain the IDs and calculate the number of practitioners linked to signals through consulting doctors ","completion":"<SUBTRACT USING id SORT_DESC id> S1=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*);RETURN F.name AS id, COUNT(F.name) AS numcnt ++ S2=>(@S Signal:*)-[@r CONSULTING_DOCTOR_WAS]->(@F Practitioner:*)-[@r2 *]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS cnt LIMIT 3"},

    {"prompt":"Get the name of the postcode, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients, excluding duplicate dates of birth, for patients associated with a signal residing at an address associated with a postcode. Only consider patients with a valid document type and age above 16 ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"list the postcode name, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients linked to a signal, living at an address associated with a postcode. Only include patients with a valid document type and an age above 16 ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"Get the name of the postcode, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address linked to a postcode. Consider only patients with a valid document type and an age greater than 16 ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"Retrieve the postcode name, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients associated with a signal, living at an address linked to a postcode. Only include patients with a valid document type and an age above 16 years ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"Get the name of the postcode, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address associated with a postcode. Consider only patients with a valid document type and an age greater than 16 ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"Retrieve the postcode name, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients associated with a signal, living at an address linked to a postcode. Only include patients with a valid document type and an age above 16 ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"Get the name of the postcode, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address associated with a postcode. Consider only patients with a valid document type and an age greater than 16 years ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"Retrieve the postcode name, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients associated with a signal, living at an address linked to a postcode. Only include patients with a valid document type and an age above 16 years old ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"Get the name of the postcode, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address associated with a postcode. Consider only patients with a valid document type and an age greater than 16 ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},
    {"prompt":"Retrieve the postcode name, document type, city, state/province, country, gender, first name, formatted date of birth, age, and count of patients (excluding duplicates) for patients associated with a signal, living at an address linked to a postcode. Only include patients with a valid document type and an age above 16 years ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE documentType !~ NA AND Age > 16 SORT_DESC Age LIMIT 10"},

    {"prompt":"Get the name of the postcode, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address associated with specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"list the postcode name, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients linked to a signal, living at an address associated with specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the postcode name, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address linked to specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the name of the postcode, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients associated with a signal, living at an address linked to specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the name of the postcode, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address associated with specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the postcode name, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients linked to a signal, living at an address associated with specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the postcode name, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address linked to specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the name of the postcode, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients associated with a signal, living at an address linked to specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Get the name of the postcode, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients associated with a signal, residing at an address associated with specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},
    {"prompt":"Retrieve the postcode name, document type, city, state/province, country, signal description, gender, first name, formatted date of birth, and count of patients (excluding duplicates) for patients associated with a signal, living at an address linked to specific postcodes ","completion":"s{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)]-[@ok LIVES_IN]->(@pk Address:*)-[@ha IS_ASSOCIATED_WITH]->(@al Postcode:*); RETURN al.name AS postcodeName, e1.documentType AS documentType, pk.city AS city, pk.stateProvince AS stateProvince, pk.country AS country, e1.description AS description, p.gender AS gender, p.firstName AS firstName, p.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB COUNT(p.name) AS Cnt EXCLUDE_GROUPBY(dateOfBirth) WHERE postcodeName = [\"CM7 5TG\",\"CM9 8DY\",\"CM8 3NL\",\"CM14 4TA\",\"CM17 0JB\",\"CO15 3JH\",\"SS8 9EX\",\"SS4 3JA\"] SORT_DESC Cnt LIMIT 100"},

    {"prompt":"Get the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals having a description, linked to patients living at addresses. Only include the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"list the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals that have a non-null description, linked to patients residing at addresses. Limit the results to the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"Get the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals having a non-empty description, linked to patients living at addresses. Consider only the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"Retrieve the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals that have a description, linked to patients residing at addresses. Only include the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"Get the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals having a non-null description, linked to patients living at addresses. Limit the results to the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"Retrieve the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals that have a non-empty description, linked to patients residing at addresses. Consider only the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"Get the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals having a description, linked to patients living at addresses. Only include the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"Retrieve the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals that have a non-null description, linked to patients residing at addresses. Limit the results to the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"Get the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals having a non-empty description, linked to patients living at addresses. Consider only the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},
    {"prompt":"Retrieve the placer reference, street address, city, gender, ethnicity, order control, signal description, and status for orders associated with signals that have a description, linked to patients residing at addresses. Only include the specified placer references ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*{description !~ NA})-[@r1 IS_ASSOCIATED_WITH{orderControl = \"Status changed\"}]->(@e1 Order:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha LIVES_IN]->(@al Address:*); RETURN e1.placerReference AS placerReference, al.streetAddress AS streetAddress, al.city AS city, pk.gender AS gender, pk.ethnicity AS ethnicity, r1.orderControl AS orderControl, p.description AS description, r1.status AS status WHERE placerReference = [\"20221118182026.4\",\"20220906112824.5\",\"20220925180544.3\",\"20220505113541.1\"] LIMIT 100"},

    {"prompt":"Get the phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients living at addresses in countries other than the UK, and linked to home phone numbers. Limit the results to the specified phone numbers or addresses with non-null other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"list the home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients residing at addresses outside of the UK, and associated with phone numbers. Only include the specified phone numbers or addresses with non-empty other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"Get the phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients living at addresses in countries other than the UK, and linked to home phone numbers. Consider only the specified phone numbers or addresses with non-null other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"Retrieve the home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients residing at addresses outside of the UK, and associated with phone numbers. Only include the specified phone numbers or addresses with non-empty other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"Get the phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients living at addresses in countries other than the UK, and linked to home phone numbers. Limit the results to the specified phone numbers or addresses with non-null other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"Retrieve the home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients residing at addresses outside of the UK, and associated with phone numbers. Only include the specified phone numbers or addresses with non-empty other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"Get the phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients living at addresses in countries other than the UK, and linked to home phone numbers. Consider only the specified phone numbers or addresses with non-null other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"Retrieve the home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients residing at addresses outside of the UK, and associated with phone numbers. Only include the specified phone numbers or addresses with non-empty other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"Get the phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients living at addresses in countries other than the UK, and linked to home phone numbers. Limit the results to the specified phone numbers or addresses with non-null other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},
    {"prompt":"Retrieve the home phone number, email address, street address, other designation, city, state/province, country, other geographic designation, and county/parish for patients residing at addresses outside of the UK, and associated with phone numbers. Only include the specified phone numbers or addresses with non-empty other designations ","completion":"s2{UNIQUE_IN_CONTEXT}=>[s=>(@p Patient:*)-[@r1 LIVES_IN]->(@e1 Address:*{country != GBR})]-[@ok IS_ASSOCIATED_WITH]->(@pk PhoneNumberHome:*); RETURN pk.phoneNumberHome AS phoneNumberHome, pk.emailAddress AS emailAddress, e1.streetAddress AS streetAddress, e1.otherDesignation AS otherDesignation, e1.city AS city, e1.stateProvince AS stateProvince, e1.country AS country, e1.otherGeographicDesignation AS otherGeographicDesignation, e1.countyParish AS countyParish WHERE phoneNumberHome = [\"07545 887795\",\"07545 301751\",\"07545 606397\",\"07545 976903\",\"07545 500917\"] OR otherDesignation !~ NA LIMIT 100"},

    {"prompt":"Get the code for the finding, preferred term for the finding, code for the diagnostic procedure, status of the procedure, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count of patients, excluding duplicate dates of allergies and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"list the finding code, preferred term for the finding, diagnostic procedure code, procedure status, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count for patients, excluding duplicate dates and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term for the finding, diagnostic procedure code, procedure status, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count of patients, excluding duplicate allergy dates and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"Retrieve the code for the finding, preferred term for the finding, code for the diagnostic procedure, status of the procedure, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count of patients, excluding duplicate allergy dates and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term for the finding, diagnostic procedure code, procedure status, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count for patients, excluding duplicate dates of allergies and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term for the finding, diagnostic procedure code, status of the procedure, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count of patients, excluding duplicate dates and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term for the finding, diagnostic procedure code, procedure status, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count of patients, excluding duplicate allergy dates and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"Retrieve the code for the finding, preferred term for the finding, code for the diagnostic procedure, status of the procedure, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count of patients, excluding duplicate allergy dates and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term for the finding, diagnostic procedure code, procedure status, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count for patients, excluding duplicate dates of allergies and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term for the finding, diagnostic procedure code, status of the procedure, allergy code, allergy date, formatted date, patient's date of birth, formatted date of birth, age, and count of patients, excluding duplicate dates and dates of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:C5231107)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Findingcode LIMIT 100"},

    {"prompt":"Get the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings linked to practitioners and signals, excluding duplicate names, where the name is C14161, the value is not empty, and the abnormal flags are not marked as abnormal ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"list the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings associated with practitioners and signals, excluding duplicate names, where the name is C14161, the value is not null, and the abnormal flags are not indicating abnormalities ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings connected to practitioners and signals, excluding duplicate names, where the name is C14161, the value is present, and the abnormal flags are not classified as abnormal ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings linked to practitioners and signals, excluding duplicate names, where the name is C14161, the value is not NA, and the abnormal flags are not abnormal ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings associated with practitioners and signals, excluding duplicate names, where the name is C14161, the value is not empty, and the abnormal flags are not indicating abnormalities ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings connected to practitioners and signals, excluding duplicate names, where the name is C14161, the value is not null, and the abnormal flags are not classified as abnormal ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings linked to practitioners and signals, excluding duplicate names, where the name is C14161, the value is not NA, and the abnormal flags are not abnormal ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings associated with practitioners and signals, excluding duplicate names, where the name is C14161, the value is not empty, and the abnormal flags are not indicating abnormalities ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings connected to practitioners and signals, excluding duplicate names, where the name is C14161, the value is not null, and the abnormal flags are not classified as abnormal ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the preferred term, value, unit of measure, abnormal flags, message type, message code, document type, count, and name for findings linked to practitioners and signals, excluding duplicate names, where the name is C14161, the value is not NA, and the abnormal flags are not abnormal ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Signal:*)-[@r1 CONSULTING_DOCTOR_WAS]->(@e1 Practitioner:*)-[@r2 WAS_RESPONSIBLE_OBSERVER_FOR]->(@op Finding:*)<-[@k IS_ASSOCIATED_WITH]-(@s2 Signal:*); RETURN op.preferredTerm AS preferredTerm, k.value AS value, k.unitOfMeasure AS unitOfMeasure, k.abnormalFlags AS abnormalFlags, s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt, e1.name AS name1 EXCLUDE_GROUPBY(name1) WHERE name1 = C14161 AND value !~ NA AND abnormalFlags != A SORT_DESC cnt LIMIT 100"},

    {"prompt":"Get the patient's ID, ID type, gender, city, postcode, and description for signals linked to patients, their addresses, and postcodes, excluding descriptions marked as NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"list the patient's ID, ID type, gender, city, postcode, and description for signals associated with patients, their addresses, and postcodes, excluding descriptions that are NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"Get the patient's ID, ID type, gender, city, postcode, and description for signals linked to patients, their addresses, and postcodes, excluding descriptions labeled as NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, ID type, gender, city, postcode, and description for signals associated with patients, their addresses, and postcodes, excluding descriptions that contain NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"Get the patient's ID, ID type, gender, city, postcode, and description for signals linked to patients, their addresses, and postcodes, excluding descriptions denoted as NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, ID type, gender, city, postcode, and description for signals associated with patients, their addresses, and postcodes, excluding descriptions identified as NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"Get the patient's ID, ID type, gender, city, postcode, and description for signals linked to patients, their addresses, and postcodes, excluding descriptions marked as NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, ID type, gender, city, postcode, and description for signals associated with patients, their addresses, and postcodes, excluding descriptions that are NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"Get the patient's ID, ID type, gender, city, postcode, and description for signals linked to patients, their addresses, and postcodes, excluding descriptions labeled as NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, ID type, gender, city, postcode, and description for signals associated with patients, their addresses, and postcodes, excluding descriptions that contain NA ","completion":"s{UNIQUE_SELECT}=>(@p Signal:*{dataController !~ NA AND documentType ~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Patient:*)-[@r2 LIVES_IN]->(@tp Address:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Postcode:*); RETURN e1.id_NH AS id, e1.idIssuer_NH AS idType, e1.gender AS gender, tp.city AS city, tp2.name AS Postcode, p.description AS description WHERE description !~ NA SORT_DESC id LIMIT 100"},

    {"prompt":"list the patient type, class, diagnostic procedure code, and preferred term for signals linked to findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Get the patient type, class, diagnostic procedure code, and preferred term for signals associated with findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the patient type, class, diagnostic procedure code, and preferred term for signals linked to findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Get the patient type, class, diagnostic procedure code, and preferred term for signals associated with findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the patient type, class, diagnostic procedure code, and preferred term for signals linked to findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Get the patient type, class, diagnostic procedure code, and preferred term for signals associated with findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the patient type, class, diagnostic procedure code, and preferred term for signals linked to findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Get the patient type, class, diagnostic procedure code, and preferred term for signals associated with findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the patient type, class, diagnostic procedure code, and preferred term for signals linked to findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},
    {"prompt":"Get the patient type, class, diagnostic procedure code, and preferred term for signals associated with findings, diagnostic procedures, orders, and healthcare activities ","completion":"s2=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@tp DiagnosticProcedure:*)-[@r22 IS_ASSOCIATED_WITH]->(@tp2 Order:20221208145646.2)]-[@r5 IS_ASSOCIATED_WITH]->(@ha HealthCareActivity:*);RETURN r5.patientType AS patientType, r5.class AS class, tp.code AS code, tp.preferredTerm AS preferredTerm SORT_DESC code LIMIT 100"},

    {"prompt":"Get the name of the therapeutic or preventive procedure, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals linked to patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"list the therapeutic or preventive procedure name, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals associated with patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the name of the therapeutic or preventive procedure, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals linked to patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the therapeutic or preventive procedure name, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals associated with patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the name of the therapeutic or preventive procedure, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals linked to patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the therapeutic or preventive procedure name, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals associated with patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the name of the therapeutic or preventive procedure, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals linked to patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the therapeutic or preventive procedure name, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals associated with patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Get the name of the therapeutic or preventive procedure, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals linked to patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},
    {"prompt":"Retrieve the therapeutic or preventive procedure name, document type, ID issuer, first name, family name, preferred term, date, and remaining days for signals associated with patients and procedures ","completion":"s{UNIQUE_IN_CONTEXT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.name AS THName, e1.documentType AS documentType, p.idIssuer_NH AS idIssuer, p.firstName AS firstName, p.familyName AS familyName, pr.preferredTerm AS Procedure, r2.date AS Date, MATH_EXP(\"ROUND(DATE(($Date-CURTIME)/86400000000))\") AS \"Days remaining\" SORT_ASC Date LIMIT 100"},

    {"prompt":"Provide the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals linked to findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Obtain the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals linked to findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals linked to findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Obtain the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals linked to findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals linked to findings, diagnostic procedures, patients, and allergies ","completion":"s=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB ,MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC Diagnosticcode LIMIT 100"},

    {"prompt":"list the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Get the code for findings, preferred terms, diagnostic codes, statuses, allergy codes, dates, formatted dates, dates of birth, formatted dates of birth, ages, and counts for signals related to findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Obtain the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals linked to findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Obtain the code for findings, preferred terms, diagnostic codes, statuses, allergy codes, dates, formatted dates, dates of birth, formatted dates of birth, ages, and counts for signals related to findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Retrieve the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Get the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals linked to findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Obtain the finding code, preferred term, diagnostic code, status, allergy code, date, formatted date, date of birth, formatted date of birth, age, and count for signals associated with findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},
    {"prompt":"Retrieve the code for findings, preferred terms, diagnostic codes, statuses, allergy codes, dates, formatted dates, dates of birth, formatted dates of birth, ages, and counts for signals related to findings, diagnostic procedures, patients, and allergies, excluding grouping by date and date of birth ","completion":"s{UNIQUE_SELECT}=>[s=>(@p Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*)]-[@ok IS_ASSOCIATED_WITH]->(@pk Patient:*)-[@ha HAS_ALLERGY]->(@al Allergies:*); RETURN e1.code AS Findingcode, e1.preferredTerm AS FpreferredTerm, op.code AS Diagnosticcode, op.status AS status, al.code AS allergiescode, ha.date AS date, MATH_EXP(\"DATE_FMT($date, %Y/%m/%d)\") AS Formatted_date, pk.dateOfBirth AS dateOfBirth, MATH_EXP(\"DATE_FMT($dateOfBirth, %Y/%m/%d)\") AS Formatted_DOB, MATH_EXP(\"ROUND(DATE((CURTIME-$dateOfBirth)/31536000000000))\") AS Age, COUNT(pk.name) AS count EXCLUDE_GROUPBY(date,dateOfBirth) SORT_DESC allergiescode LIMIT 100"},

    {"prompt":"list the ID, ethnicity, diagnostic procedure code, procedure name, and status for patients associated with signals and findings related to diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Get the patient's ID, ethnicity, diagnostic procedure code, procedure name, and status for patients linked to signals and findings associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the ID, ethnicity, diagnostic procedure code, procedure name, and status for patients associated with signals and findings related to diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the ID, ethnicity, diagnostic procedure code, procedure name, and status for patients linked to signals and findings associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Get the patient's ID, ethnicity, diagnostic procedure code, procedure name, and status for patients associated with signals and findings related to diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the ID, ethnicity, diagnostic procedure code, procedure name, and status for patients linked to signals and findings associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the ID, ethnicity, diagnostic procedure code, procedure name, and status for patients associated with signals and findings related to diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Get the patient's ID, ethnicity, diagnostic procedure code, procedure name, and status for patients linked to signals and findings associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Obtain the ID, ethnicity, diagnostic procedure code, procedure name, and status for patients associated with signals and findings related to diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},
    {"prompt":"Retrieve the ID, ethnicity, diagnostic procedure code, procedure name, and status for patients linked to signals and findings associated with diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*{ethnicity !~ NA})-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r3 IS_ASSOCIATED_WITH]->(@f Finding:*)-[@r2 IS_FINDING_FOR]->(@op DiagnosticProcedure:*); RETURN p.id_NH AS id_NH, p.ethnicity AS ethnicity, op.code AS code, op.preferredTerm AS \"Procedure\", r3.status AS \"Status\" SORT_DESC code LIMIT 100"},

    {"prompt":"list the preferred term, date of observation, and observation ID for patients associated with signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Get the preferred term, observation date, and observation ID for patients linked to signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the preferred term, date of observation, and observation ID for patients associated with signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, observation date, and observation ID for patients linked to signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Get the preferred term, date of observation, and observation ID for patients associated with signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the preferred term, observation date, and observation ID for patients linked to signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, date of observation, and observation ID for patients associated with signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Get the preferred term, observation date, and observation ID for patients linked to signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the preferred term, date of observation, and observation ID for patients associated with signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, observation date, and observation ID for patients linked to signals and observations ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*);RETURN o.preferredTerm AS \"Observation\", r2.dateOfObservation AS \"date\", MATH_EXP(\"DATE_FMT($date, %B %Y)\") AS \"Date of Observation\", o.code AS ObservationID WHERE ObservationID = [\"C5545428\",\"C5545429\",\"C4505216\",\"C5545426\",\"C3241966\",\"C0337671\",\"C0425293\",\"C3496610\",\"C0425311\",\"C4718386\",\"C0425319\",\"C0425317\",\"C0425327\",\"C0425325\"] SORT_ASC date LIMIT 100"},

    {"prompt":"list the preferred term, last status change date, diagnostic service, status, and days since last update for patients associated with signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Get the preferred term, date of the last status change, diagnostic service, status, and number of days since the last update for patients linked to signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Obtain the preferred term, date of the last status change, diagnostic service, status, and days elapsed since the last update for patients associated with signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, last status change date, diagnostic service, status, and days since the last update for patients linked to signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Get the preferred term, date of the last status change, diagnostic service, status, and number of days since the last update for patients associated with signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Obtain the preferred term, date of the last status change, diagnostic service, status, and days elapsed since the last update for patients linked to signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, last status change date, diagnostic service, status, and days since the last update for patients associated with signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Get the preferred term, date of the last status change, diagnostic service, status, and number of days since the last update for patients linked to signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Obtain the preferred term, date of the last status change, diagnostic service, status, and days elapsed since the last update for patients associated with signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, last status change date, diagnostic service, status, and days since the last update for patients linked to signals and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH{status != \"F\"}]->(@op DiagnosticProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days WHERE \"Diagnostic Service\" = \"Radiology\" SORT_DESC date LIMIT 100"},

    {"prompt":"list the preferred term, date, and number of days for patients associated with signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Get the procedure name, date, and days elapsed for patients linked to signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the preferred term, date, and days since the procedure for patients associated with signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the procedure name, date, and number of days for patients linked to signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Get the preferred term, date, and days elapsed for patients associated with signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the procedure name, date, and days since the procedure for patients associated with signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the preferred term, date, and days for patients associated with signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Get the procedure name, date, and days elapsed for patients linked to signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the preferred term, date, and days since the procedure for patients associated with signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the procedure name, date, and number of days for patients linked to signals and therapeutic or preventive procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:*); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS Days SORT_ASC date LIMIT 100"},

    {"prompt":"list the date, formatted date, code, and preferred term for patients associated with signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the date, formatted date, symptom code, and symptom name for patients linked to signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Obtain the date, formatted date, code, and preferred term for patients associated with signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the date, formatted date, symptom code, and symptom name for patients linked to signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the date, formatted date, code, and preferred term for patients associated with signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Obtain the date, formatted date, symptom code, and symptom name for patients linked to signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the date, formatted date, code, and preferred term for patients associated with signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Get the date, formatted date, symptom code, and symptom name for patients linked to signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Obtain the date, formatted date, code, and preferred term for patients associated with signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},
    {"prompt":"Retrieve the date, formatted date, symptom code, and symptom name for patients linked to signals and signs or symptoms ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op SignOrSymptom:*); RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date\", op.code AS \"Code\", op.preferredTerm AS Symptom WHERE \"Code\" = [\"C0562483\",\"C0013404\",\"C0008031\",\"C0037011\",\"C0019079\",\"C0015672\",\"C0745015\"] SORT_DESC Code LIMIT 100"},

    {"prompt":"Get the date and formatted date for patients associated with signals and diseases or syndromes, along with the preferred term for the disorder ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"list the date, formatted date, and disorder name for patients linked to signals and diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the date and formatted date for patients associated with signals and diseases or syndromes, along with the preferred term for the disorder ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date, formatted date, and disorder name for patients linked to signals and diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the date and formatted date for patients associated with signals and diseases or syndromes, along with the preferred term for the disorder ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the date, formatted date, and disorder name for patients linked to signals and diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date and formatted date for patients associated with signals and diseases or syndromes, along with the preferred term for the disorder ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the date, formatted date, and disorder name for patients linked to signals and diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the date and formatted date for patients associated with signals and diseases or syndromes, along with the preferred term for the disorder ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date, formatted date, and disorder name for patients linked to signals and diseases or syndromes ","completion":"s{UNIQUE_SELECT}=>(@P Patient:)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal)-[@r2 IS_ASSOCIATED_WITH]->(@D DiseaseOrSyndrome);RETURN r2.date AS \"date\", MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, D.preferredTerm AS \"Disorder\" SORT_ASC date LIMIT 100"},

    {"prompt":"list the date of observation, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the date of observation, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date of observation, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the date of observation, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the date of observation, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and diagnostic procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},

    {"prompt":"list the observation date, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients associated with signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Get the date of observation, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients linked to signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Obtain the observation date, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients associated with signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Retrieve the observation date, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients linked to signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Get the date of observation, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients associated with signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Obtain the observation date, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients linked to signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Retrieve the observation date, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients associated with signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Get the date of observation, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients linked to signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Obtain the observation date, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients associated with signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},
    {"prompt":"Retrieve the observation date, formatted date, observation name, value, unit of measure, reference range, and observation ID for patients linked to signals and findings ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@o Finding:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", o.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.referencesRange AS \"Reference Range\", o.code AS \"Observation ID\" WHERE \"Observation ID\" = [\"C1271051\",\"C1271052\",\"C1271053\",\"C1271054\",\"C1271055\",\"C4035644\",\"C4035645\",\"C4035646\",\"C0580717\",\"963051000000100\",\"963071000000109\"] SORT_DESC date LIMIT 100"},

    {"prompt":"list the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date of observation, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date of observation, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date of observation, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients associated with signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the observation date, formatted date, observation name, value, unit of measure, and abnormal flag for patients linked to signals, findings, and laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@L LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},

    {"prompt":"list the observation date, formatted as dd/mm/yyyy, for patients associated with signals, findings, and diagnostic procedures. Also, fetch the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date of observation in the format dd/mm/yyyy for patients linked to signals, findings, and diagnostic procedures. Additionally, obtain the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the date of observation, presented as dd/mm/yyyy, for patients associated with signals, findings, and diagnostic procedures. Retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the observation date formatted as dd/mm/yyyy for patients linked to signals, findings, and diagnostic procedures. Also, retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date of observation in the format dd/mm/yyyy for patients associated with signals, findings, and diagnostic procedures. Fetch the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the observation date, formatted as dd/mm/yyyy, for patients linked to signals, findings, and diagnostic procedures. Additionally, obtain the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the date of observation formatted as dd/mm/yyyy for patients associated with signals, findings, and diagnostic procedures. Also, retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the observation date in the format dd/mm/yyyy for patients linked to signals, findings, and diagnostic procedures. Fetch the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":" Obtain the date of observation, presented as dd/mm/yyyy, for patients associated with signals, findings, and diagnostic procedures. Retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the observation date formatted as dd/mm/yyyy for patients linked to signals, findings, and diagnostic procedures. Also, retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_FINDING_FOR]->(@D DiagnosticProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},

    {"prompt":"list the date of observation, formatted as dd/mm/yyyy, for patients associated with signals, findings, and laboratory procedures. Also, fetch the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the observation date in the format dd/mm/yyyy for patients linked to signals, findings, and laboratory procedures. Additionally, obtain the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the date of observation, presented as dd/mm/yyyy, for patients associated with signals, findings, and laboratory procedures. Retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the date of observation formatted as dd/mm/yyyy for patients linked to signals, findings, and laboratory procedures. Also, retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the observation date in the format dd/mm/yyyy for patients associated with signals, findings, and laboratory procedures. Fetch the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the date of observation, formatted as dd/mm/yyyy, for patients linked to signals, findings, and laboratory procedures. Additionally, obtain the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the observation date formatted as dd/mm/yyyy for patients associated with signals, findings, and laboratory procedures. Also, retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the date of observation in the format dd/mm/yyyy for patients linked to signals, findings, and laboratory procedures. Fetch the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the observation date, presented as dd/mm/yyyy, for patients associated with signals, findings, and laboratory procedures. Retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the date of observation formatted as dd/mm/yyyy for patients linked to signals, findings, and laboratory procedures. Also, retrieve the preferred term of the finding, the observation value, unit of measure, and abnormal flag ","completion":"s{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 IS_RESULT_FOR]->(@D LaboratoryProcedure:*); RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\" SORT_ASC date LIMIT 100"},

    {"prompt":"list the procedure, date, formatted as dd/mm/yyyy, and calculate the remaining days for patients associated with signals and the specific therapeutic or preventive procedure called Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the procedure name, date in the format dd/mm/yyyy, and calculate the remaining days for patients linked to signals and undergoing the therapeutic or preventive procedure known as Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the name of the procedure, date of occurrence formatted as dd/mm/yyyy, and calculate the number of remaining days for patients associated with signals and receiving the therapeutic or preventive procedure labeled Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the preferred term of the procedure, date of occurrence formatted as dd/mm/yyyy, and calculate the remaining days for patients linked to signals and undergoing the specific therapeutic or preventive procedure named Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the preferred term of the procedure, date in the format dd/mm/yyyy, and calculate the remaining days for patients associated with signals and receiving the therapeutic or preventive procedure referred to as Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the procedure's preferred term, date of occurrence formatted as dd/mm/yyyy, and calculate the remaining days for patients associated with signals and undergoing the specific therapeutic or preventive procedure identified as Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the procedure's preferred term, date of occurrence formatted as dd/mm/yyyy, and calculate the remaining days for patients linked to signals and undergoing the therapeutic or preventive procedure known as Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Get the preferred term of the procedure, date in the format dd/mm/yyyy, and calculate the remaining days for patients associated with signals and receiving the therapeutic or preventive procedure denoted as Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the procedure name, date of occurrence formatted as dd/mm/yyyy, and calculate the number of remaining days for patients associated with signals and undergoing the specific therapeutic or preventive procedure referred to as Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the name of the procedure, date of occurrence formatted as dd/mm/yyyy, and calculate the remaining days for patients linked to signals and undergoing the therapeutic or preventive procedure with the preferred term Appendectomy ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@pr TherapeuticOrPreventiveProcedure:* {preferredTerm = \"Appendectomy\"}); RETURN pr.preferredTerm AS Procedure, r2.date AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS Date, MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC date LIMIT 100"},

    {"prompt":"list the event primary key, procedure name, date of the last status change formatted as dd/mm/yyyy, the diagnostic service, status, and calculate the remaining days for patients associated with signals and undergoing diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Get the event primary key, procedure name, date of the most recent status update formatted as dd/mm/yyyy, the diagnostic service, status, and calculate the days remaining for patients linked to signals and receiving diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Obtain the event primary key, procedure name, date of the last status update in the format dd/mm/yyyy, the diagnostic service, status, and calculate the remaining days for patients associated with signals and undergoing diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Retrieve the event primary key, procedure name, date indicating the last status change formatted as dd/mm/yyyy, the diagnostic service, status, and calculate the days remaining for patients linked to signals and receiving diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Get the event primary key, procedure name, date of the most recent status update formatted as dd/mm/yyyy, the diagnostic service, status, and calculate the remaining days for patients associated with signals and undergoing diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Obtain the event primary key, procedure name, date of the last status change in the format dd/mm/yyyy, the diagnostic service, status, and calculate the days remaining for patients associated with signals and receiving diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Retrieve the event primary key, procedure name, date of the last status update formatted as dd/mm/yyyy, the diagnostic service, status, and calculate the remaining days for patients linked to signals and undergoing diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Get the event primary key, procedure name, date indicating the last status change in the format dd/mm/yyyy, the diagnostic service, status, and calculate the days remaining for patients associated with signals and receiving diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Obtain the event primary key, procedure name, date of the most recent status update formatted as dd/mm/yyyy, the diagnostic service, status, and calculate the remaining days for patients associated with signals and undergoing diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},
    {"prompt":"Retrieve the event primary key, procedure name, date of the last status update in the format dd/mm/yyyy, the diagnostic service, status, and calculate the days remaining for patients linked to signals and receiving diagnostic procedures ","completion":"s{UNIQUE}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op DiagnosticProcedure:*); RETURN r2.evpk AS evpk, op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" SORT_ASC evpk LIMIT 10"},

    {"prompt":"list the procedure name, date of the last status update formatted as dd/mm/yyyy, diagnostic service, status, and calculate the negative days remaining for patients associated with signals and undergoing laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Get the procedure name, date of the most recent status update formatted as dd/mm/yyyy, diagnostic service, status, and calculate the remaining days in negative value for patients linked to signals and receiving laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the procedure name, date of the last status update in the format dd/mm/yyyy, diagnostic service, status, and calculate the negative days remaining for patients associated with signals and undergoing laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the procedure name, date indicating the last status change formatted as dd/mm/yyyy, diagnostic service, status, and calculate the negative days remaining for patients linked to signals and receiving laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Get the procedure name, date of the most recent status update formatted as dd/mm/yyyy, diagnostic service, status, and calculate the remaining days in negative value for patients associated with signals and undergoing laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the procedure name, date of the last status change in the format dd/mm/yyyy, diagnostic service, status, and calculate the negative days remaining for patients associated with signals and receiving laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the procedure name, date of the last status update formatted as dd/mm/yyyy, diagnostic service, status, and calculate the negative days remaining for patients linked to signals and undergoing laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Get the procedure name, date indicating the last status change formatted as dd/mm/yyyy, diagnostic service, status, and calculate the negative days remaining for patients associated with signals and receiving laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Obtain the procedure name, date of the most recent status update formatted as dd/mm/yyyy, diagnostic service, status, and calculate the remaining days in negative value for patients associated with signals and undergoing laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},
    {"prompt":"Retrieve the procedure name, date of the last status update in the format dd/mm/yyyy, diagnostic service, status, and calculate the negative days remaining for patients linked to signals and receiving laboratory procedures ","completion":"s{UNIQUE_SELECT}=>(@p Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@e1 Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@op LaboratoryProcedure:*); RETURN op.preferredTerm AS \"Procedure\", r2.lastStatusChange AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Last Status Update\", r2.diagnosticService AS \"Diagnostic Service\", r2.status AS \"Status\", MATH_EXP(\"ROUND(DATE(($date-CURTIME)/86400000000))\") AS \"Days Remaining\" WHERE \"Days Remaining\" < 0 SORT_ASC date LIMIT 100"},

    {"prompt":"list patient information including their ID, first name, family name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the last signal received ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Get patient details such as their identification number, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the most recent signal received ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Obtain patient data including their ID, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the last signal received ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Retrieve patient records containing their ID, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the last received signal ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Get patient information such as their ID, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the last signal received ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Obtain patient details including their ID, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the most recent signal received ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Retrieve patient data consisting of their ID, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the last signal received ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Get patient records containing their ID, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the last received signal ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Obtain patient information such as their ID, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the last signal received ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},
    {"prompt":"Retrieve patient details including their ID, first name, last name, NHS number, date of birth, referral date, orders date, remaining days until completion, and the most recent signal received ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.dateOfBirth AS DateOFBirth, MATH_EXP(\"DATE_FMT($DateOFBirth, %m/%d/%Y)\") AS DOB, P.referralDate AS Referral_Date , MATH_EXP(\"DATE_FMT($Referral_Date, %m/%d/%Y)\") AS \"Referral Date\", P.ordersDate AS Orders_Date, MATH_EXP(\"ROUND(DATE(120 - ((CURTIME-$Orders_Date)/86400000000)))\") AS \"Remaining Days\",P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %m/%d/%Y, %H:%M)\") AS \"Last Signal Received\" SORT_ASC \"Referral Date\" LIMIT 100"},

    {"prompt":"For the given patient with ID 4213065983120541618, calculate the frequency of different findings associated with the signal ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"list the count of various findings linked to the signal for patient 4213065983120541618 ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Count the occurrences of different findings related to the signal for patient ID 4213065983120541618 ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Determine the number of instances of distinct findings associated with the signal for patient 4213065983120541618 ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Calculate the count of different findings associated with the signal for the specified patient (ID: 4213065983120541618) ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Retrieve the occurrence count of various findings associated with the signal for patient 4213065983120541618 ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Count the frequency of different findings linked to the signal for the specified patient (ID: 4213065983120541618) ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Determine the number of instances of distinct findings associated with the signal for patient ID 4213065983120541618 ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Calculate the count of various findings associated with the signal for patient 4213065983120541618 ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},
    {"prompt":"Retrieve the occurrence count of different findings related to the signal for the given patient (ID: 4213065983120541618) ","completion":"<SUBTRACT USING Findings SORT_DESC Findings>S1=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS Findings, COUNT(F.name) AS cnt ++ S2=>(@P Patient:4213065983120541618)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r3 *]->(@O *);RETURN F.name AS Findings, COUNT(F.name) AS cnt LIMIT 3"},

    {"prompt":"list the recorded date, room, bed, description, message code, and document type for signals recorded in 2022 and assigned to point-of-care locations R8, R9, or R15 ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Get the recorded date, room number, bed number, description, message code, and document type for signals recorded in the year 2022 and assigned to point-of-care areas R8, R9, or R15 ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Obtain the date of recording, room details, bed information, description, message code, and document type for signals that occurred in 2022 and were assigned to either room R8, R9, or R15 in a point-of-care setting ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room number, bed number, description, message code, and document type for signals that took place in 2022 and were assigned to point-of-care areas R8, R9, or R15 ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Get the date of recording, room and bed details, description, message code, and document type for signals recorded in the year 2022 and assigned to point-of-care locations R8, R9, or R15 ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Obtain the recorded date, room information, bed details, description, message code, and document type for signals that occurred in 2022 and were assigned to either room R8, R9, or R15 in a point-of-care context ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Retrieve the date when the signals were recorded, room assignment, bed allocation, description, message code, and document type for signals recorded in 2022 and assigned to point-of-care areas R8, R9, or R15 ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Get the recorded date, room number, bed number, description, message code, and document type for signals recorded in the year 2022 and assigned to point-of-care locations R8, R9, or R15 ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Obtain the date of recording, room details, bed information, description, message code, and document type for signals that occurred in 2022 and were assigned to either room R8, R9, or R15 in a point-of-care setting ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},
    {"prompt":"Retrieve the recorded date, room number, bed number, description, message code, and document type for signals that took place in 2022 and were assigned to point-of-care areas R8, R9, or R15 ","completion":"S=>(@P Signal:* {DATE_YEAR($signalDateTime+0) = 2022})-[@r1 HAS_BEEN_ASSIGNED]->(@D PointOfCare:*);RETURN P.recordedDate AS recordedDate, D.room AS room, D.bed AS bed, P.description AS description, P.messageCode AS messageCode, P.documentType AS documentType WHERE room = [\"R8\",\"R9\",\"R15\"] SORT_DESC description LIMIT 100"},

    {"prompt":"list the signal ID, issuer ID, and data controller for all patients associated with signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Get the signal ID, issuer NH ID, and data controller information for patients linked to signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Obtain the unique signal IDs, NH ID issuers, and data controllers for patients associated with signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Retrieve the signal identification, issuer NH ID, and data controller details for patients connected to signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Get the signal ID, NH ID issuer, and data controller information for all patients who have signal associations ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Obtain the unique signal IDs, ID issuers, and data controllers for patients who are associated with signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Retrieve the signal ID, NH ID issuer, and data controller for patients linked to signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Get the signal identification, issuer NH ID, and data controller details for patients associated with signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Obtain the unique signal IDs, NH ID issuers, and data controllers for patients with signal associations ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},
    {"prompt":"Retrieve the signal ID, issuer ID, and data controller for all patients who are associated with signals ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@D Signal:*);RETURN P.signalId AS signalId, P.idIssuer_NH AS idIssuer, D.dataController AS dataController SORT_DESC idIssuer LIMIT 100"},

    {"prompt":"Get the code, preferred term, and coding system for all active problems associated with signals, along with the gender and date of birth of the patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"list the code, preferred term, and coding system of active problems linked to signals, along with the gender and date of birth of the patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Obtain the active problem code, preferred term, and coding system for signals, and also retrieve the gender and date of birth of the associated patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system for all active problems that are connected to signals, and include the gender and date of birth information of the patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Retrieve the active problem code, preferred term, and coding system from signals, along with the gender and date of birth of the patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Obtain the code, preferred term, and coding system for active problems associated with signals, and also retrieve the gender and date of birth of the patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the active problem code, preferred term, and coding system for signals, and include the gender and date of birth information of the associated patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Retrieve the code, preferred term, and coding system of active problems linked to signals, along with the gender and date of birth of the patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Obtain the active problem code, preferred term, and coding system for signals, and also include the gender and date of birth information of the associated patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},
    {"prompt":"Get the code, preferred term, and coding system for all active problems associated with signals, and include the gender and date of birth information of the patients ","completion":"S2=>[S1=>(@S Signal:*)-[@r1 *]->(@A ActiveProblem:*)]-[@r2 *]->(@P Patient:*);RETURN A.code AS code,A.preferredTerm AS preferredTerm, A.codingSystem AS codingSystem, P.gender AS gender, P.dateOfBirth AS dateOfBirthDate, MATH_EXP(\"DATE_FMT($dateOfBirthDate, %m/%d/%Y)\") AS dateOfBirth SORT_DESC dateOfBirthDate LIMIT 100"},

    {"prompt":"list the prefix, first name, family name, hospital name, hospital code, and the latest event for all patients associated with signals and their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Get the prefix, first name, family name, hospital name, hospital code, and the most recent event for patients linked to signals and their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Obtain the prefix, first name, family name, hospital name, hospital code, and the latest event for patients associated with signals and their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Retrieve the prefix, first name, family name, hospital name, hospital code, and the most recent event for all patients who have signals and their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Get the prefix, first name, family name, hospital name, hospital code, and the latest event for patients who are associated with signals and their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Obtain the prefix, first name, family name, hospital name, hospital code, and the most recent event for patients who have signals and their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Retrieve the prefix, first name, family name, hospital name, hospital code, and the latest event for all patients associated with signals, along with their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Get the prefix, first name, family name, hospital name, hospital code, and the most recent event for patients linked to signals and their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Obtain the prefix, first name, family name, hospital name, hospital code, and the latest event for patients associated with signals, and include their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},
    {"prompt":"Retrieve the prefix, first name, family name, hospital name, hospital code, and the most recent event for all patients who have signals, and also include their primary care providers ","completion":"S{UNIQUE_SELECT}=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 PRIMARY_CARE_PROVIDER_WAS]->(@GP Practitioner:*);RETURN GP.prefix AS Prefix, GP.firstName AS First_Name,GP.familyName AS Family_Name, GP.gpPracticeName AS Hospital, GP.gpPracticeCode AS \"Hospital Code\", S.signalDateTime AS \"Latest Event\" SORT_DESC \"Latest Event\" LIMIT 100"},

    {"prompt":"Sort the signal IDs in descending order and retrieve the signal ID for all patients ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Arrange the signal IDs in descending order and get the signal ID for each patient ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Sort the signal IDs in descending order and obtain the signal ID of all patients ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Organize the signal IDs in descending order and retrieve the signal ID associated with each patient ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Sort the signal IDs in descending order and get the signal ID for all patients ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Arrange the signal IDs in descending order and obtain the signal ID of each patient ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Sort the signal IDs in descending order and retrieve the signal ID for all patients ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Organize the signal IDs in descending order and get the signal ID associated with each patient ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Sort the signal IDs in descending order and obtain the signal ID of all patients ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},
    {"prompt":"Arrange the signal IDs in descending order and retrieve the signal ID associated with each patient ","completion":"<PIPE USING signalId SORT_DESC signalId> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, r2.referralDate AS Datetime, r2.referralReason AS Reason, MATH_EXP(\"DATE_FMT($Datetime,%m/%d/%Y)\") AS Date r2.class AS Class LIMIT 3"},

    {"prompt":"list the patient ID and first name for all patients whose first name contains 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Get the patient ID and first name for patients whose first name matches 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Obtain the patient ID and first name for all patients with a first name that includes 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Retrieve the patient ID and first name for patients whose first name starts with 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Get the patient ID and first name for all patients whose first name is similar to 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Obtain the patient ID and first name for patients whose first name matches the pattern 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Retrieve the patient ID and first name for all patients whose first name begins with 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Get the patient ID and first name for patients whose first name contains the characters 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Obtain the patient ID and first name for all patients whose first name resembles 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},
    {"prompt":"Retrieve the patient ID and first name for patients whose first name is a variation of 'AB' ","completion":"s=>(@P Patient:*);RETURN P.name AS Pid, P.firstName AS firstName WHERE firstName=\"AB$%\" LIMIT 100"},

    {"prompt":"list all information for patients whose first name matches the pattern 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Get the details of patients with a first name similar to 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Obtain the complete record of patients whose first name contains 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Retrieve all data for patients whose first name starts with 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Get the information of patients whose first name resembles 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Obtain the complete profile of patients with a first name that includes 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Retrieve all attributes for patients whose first name matches the pattern 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Get the complete data set for patients whose first name begins with 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Obtain the information of patients whose first name contains the characters 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},
    {"prompt":"Retrieve all records for patients with a first name that is a variation of 'AB' ","completion":"s=>(@P Patient:* {firstName=\"AB$%\"});RETURN * LIMIT 100"},

    {"prompt":"list the preferred term, diagnostic service, and count of laboratory procedures associated with signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Get the preferred term, diagnostic service, and number of occurrences for laboratory procedures linked to signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Obtain the preferred term, diagnostic service, and count of laboratory procedures that are associated with signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Retrieve the preferred term, diagnostic service, and total count of laboratory procedures related to signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Get the preferred term, diagnostic service, and frequency of laboratory procedures associated with signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Obtain the preferred term, diagnostic service, and number of instances for laboratory procedures associated with signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Retrieve the preferred term, diagnostic service, and count of laboratory procedures that are linked to signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Get the preferred term, diagnostic service, and total occurrence count for laboratory procedures associated with signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Obtain the preferred term, diagnostic service, and count of laboratory procedures associated with signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Retrieve the preferred term, diagnostic service, and number of occurrences for laboratory procedures associated with signals ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, r.diagnosticService AS DiagnosticService, COUNT(r.status) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},

    {"prompt":"list the preferred term and diagnostic service of laboratory procedures associated with signals, along with the count of procedures that have a status of O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Get the preferred term and diagnostic service of laboratory procedures linked to signals, and count the procedures with statuses O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Obtain the preferred term and diagnostic service of laboratory procedures that are associated with signals, and calculate the count of procedures with statuses O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Retrieve the preferred term and diagnostic service of laboratory procedures related to signals, and count the procedures with statuses O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Get the preferred term and diagnostic service of laboratory procedures associated with signals, and determine the number of procedures with statuses O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Obtain the preferred term and diagnostic service of laboratory procedures associated with signals, and count the procedures that have either O or F as their status ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Retrieve the preferred term and diagnostic service of laboratory procedures linked to signals, and calculate the count of procedures with statuses O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Get the preferred term and diagnostic service of laboratory procedures associated with signals, and count the procedures with statuses O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Obtain the preferred term and diagnostic service of laboratory procedures associated with signals, and determine the count of procedures with statuses O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},
    {"prompt":"Retrieve the preferred term and diagnostic service of laboratory procedures related to signals, and count the procedures with statuses O or F ","completion":"S=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@O LaboratoryProcedure:*);RETURN O.preferredTerm AS PreferredTerm, O.diagnosticService AS DiagnosticService, COUNT(O.status {Cnt=[\"O\",\"F\"]}) AS Cnt SORT_DESC DiagnosticService LIMIT 100"},

    {"prompt":"Subtract the findings based on their IDs in descending order from the signals, and return the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Remove the findings from the signals based on their IDs in descending order, and provide the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Deduct the findings from the signals using their IDs, sorting them in descending order, and retrieve the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Subtract the findings from the signals by sorting their IDs in descending order, and report the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Exclude the findings from the signals based on their IDs, arranging them in descending order, and display the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Remove the findings from the signals using their IDs, sorting them in descending order, and present the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Subtract the findings from the signals by sorting their IDs in descending order, and output the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Remove the findings from the signals based on their IDs, arranging them in descending order, and show the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Deduct the findings from the signals using their IDs, sorting them in descending order, and indicate the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},
    {"prompt":"Subtract the findings from the signals by sorting their IDs in descending order, and provide the IDs along with the count of each ID occurrence ","completion":"<SUBTRACT USING id SORT_DESC id>S1=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN F.name AS id, COUNT(F.name) AS Cnt ++ S2=>(@S Signal:*)-[@r IS_ASSOCIATED_WITH]->(@F Finding:*)-[@r2 IS_FINDING_FOR]->(@OP *);RETURN F.name AS id, COUNT(F.name) AS Cnt LIMIT 3"},

    {"prompt":"list the message type, message code, document type, and count of names associated with the signals, where the message type is A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the messageType, messageCode, documentType, and count of names from the signals, specifically those with messageType A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the messageType, messageCode, documentType, and count of names related to the signals, filtering for messageType A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the messageType, messageCode, documentType, and count of names associated with the signals, limited to messageType A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the messageType, messageCode, documentType, and count of names from the signals, focusing on those with messageType A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the messageType, messageCode, documentType, and count of names related to the signals, specifically those with messageType A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the messageType, messageCode, documentType, and count of names associated with the signals, where the messageType is set to A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Get the messageType, messageCode, documentType, and count of names from the signals, filtering for messageType A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Obtain the messageType, messageCode, documentType, and count of names related to the signals, limiting the results to messageType A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},
    {"prompt":"Retrieve the messageType, messageCode, documentType, and count of names associated with the signals, specifically those with messageType A10 ","completion":"s=>(@s2 Signal:*); RETURN s2.messageType AS messageType, s2.messageCode AS messageCode, s2.documentType AS documentType, COUNT(p.name) AS cnt WHERE messageType = A10 SORT_DESC cnt LIMIT 100"},

    {"prompt":"list the path from the patient with ID 4213065983120541618 to the order with ID 20240324235111.2 ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Get the shortest path between the patient (ID: 4213065983120541618) and the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Obtain the shortest path connecting the patient (ID: 4213065983120541618) to the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Retrieve the shortest path from the patient (ID: 4213065983120541618) to the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Get the path with the shortest distance between the patient (ID: 4213065983120541618) and the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Obtain the path of minimum length connecting the patient (ID: 4213065983120541618) to the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Retrieve the shortest possible path from the patient (ID: 4213065983120541618) to the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Get the path with the least number of steps connecting the patient (ID: 4213065983120541618) to the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Obtain the shortest available path between the patient (ID: 4213065983120541618) and the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},
    {"prompt":"Retrieve the path of minimum length from the patient (ID: 4213065983120541618) to the order (ID: 20240324235111.2) ","completion":"S=>(@P Patient:4213065983120541618)-[#SHORT_PATH *]->(@O Order:20240324235111.2) LIMIT 3"},

    {"prompt":"list all the consents for the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the consents given by the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the consent information for the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve the consents provided by the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the details of the consents given by the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the records of consents granted by the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve all the consent data for the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the consents that the patients have given ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the information regarding consents granted by the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve the consent records associated with the patients ","completion":"s=>(@S Patient:*)-[@r CONSENTS_TO]->(@O Consent:*);RETURN * SORT_ASC sub LIMIT 10"},

    {"prompt":"list all the diagnostic procedures where the practitioners were the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the records of diagnostic procedures where the practitioners acted as the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the information regarding diagnostic procedures where the practitioners served as the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve the details of diagnostic procedures where the practitioners were designated as the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the data of diagnostic procedures where the practitioners held the role of principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the records of diagnostic procedures with practitioners as the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve all the diagnostic procedures associated with practitioners acting as the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the diagnostic procedure information where the practitioners were the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the records of diagnostic procedures with practitioners designated as the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve the diagnostic procedure data for practitioners serving as the principal result interpreters ","completion":"s=>(@S Practitioner:*)-[@r WAS_PRINCIPAL_RESULT_INTERPRETER_FOR]->(@O DiagnosticProcedure:*);RETURN * SORT_ASC sub LIMIT 10"},

    {"prompt":"list all the sexual orientation information associated with patients ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the records of patients' sexual orientation ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the details of patients' sexual orientation ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve the information regarding patients' sexual orientation ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the data of patients' sexual orientation ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the records of patients' associated sexual orientation ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve all the sexual orientation data for patients ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Get the sexual orientation information associated with patients ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Obtain the records of patients' sexual orientation ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},
    {"prompt":"Retrieve the sexual orientation data for patients ","completion":"s=>(@S Patient:*)-[@r IS_ASSOCIATED_WITH]->(@O SexualOrientation:*);RETURN * SORT_ASC sub LIMIT 10"},

    {"prompt":"Combine the patient IDs and count of diagnostic procedures associated with each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Merge the patient IDs and the count of laboratory procedures associated with each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Bring together the patient IDs and the number of diagnostic procedures linked to each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Merge the patient IDs and the count of laboratory procedures associated with each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Combine the patient IDs and the total count of diagnostic procedures for each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Merge the patient IDs and the number of laboratory procedures associated with each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Bring together the patient IDs and the count of diagnostic procedures for each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Merge the patient IDs and the count of laboratory procedures associated with each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Combine the patient IDs and the total count of diagnostic procedures for each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Merge the patient IDs and the number of laboratory procedures associated with each patient from the signals data ","completion":"<CROSS USING P_id SORT_ASC P_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Patient:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},

    {"prompt":"Join the data using patient IDs, sorting in descending order of patient IDs, and limit the results to 100 records ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Retrieve the patient IDs and the count of diagnostic procedures associated with each patient from the signals data, considering only those patients with more than 50 diagnostic procedures ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Merge the patient IDs with the count of laboratory procedures associated with each patient from the signals data ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Combine the patient IDs and the count of diagnostic procedures for each patient from the signals data, filtering for patients with more than 50 diagnostic procedures ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Merge the patient IDs with the count of laboratory procedures associated with each patient from the signals data ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Bring together the patient IDs and the total count of diagnostic procedures for each patient from the signals data, considering only patients with over 50 diagnostic procedures ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Merge the patient IDs with the count of laboratory procedures associated with each patient from the signals data ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Combine the patient IDs and the count of diagnostic procedures for each patient from the signals data, filtering for patients with more than 50 diagnostic procedures ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Merge the patient IDs with the count of laboratory procedures associated with each patient from the signals data ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},
    {"prompt":"Join the data using patient IDs, sorting in descending order of patient IDs, and limit the results to 100 records ","completion":"<JOIN USING P_id SORT_DESC P_id LIMIT 100>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN P.name AS P_id, COUNT(D.name) AS nDiagnosticProcedures WHERE nDiagnosticProcedures > 50 ++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@P Patient:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN P.name AS P_id, COUNT(L.name) AS nLaboratoryProcedures"},

    {"prompt":"Get the F_id values and the count of diagnostic procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"list the F_id values and the absolute count of laboratory procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the number of diagnostic procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and the absolute count of laboratory procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and the count of diagnostic procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the absolute count of laboratory procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and the count of diagnostic procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and the absolute count of laboratory procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the count of diagnostic procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and the absolute count of laboratory procedures associated with each F_id from the signals data ","completion":"<DIFFERENCE USING F_id SORT_ASC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@P Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, UCOUNT_ABS(L.name) AS nLaboratoryProcedures LIMIT 3"},

    {"prompt":"list the F_id values and the count of laboratory procedures associated with each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and the total number of laboratory procedures linked to each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the count of laboratory procedures associated with each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and the number of diagnostic procedures associated with each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and the count of diagnostic procedures linked to each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the number of diagnostic procedures associated with each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and the count of laboratory procedures associated with each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and the total number of diagnostic procedures linked to each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the count of diagnostic procedures associated with each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and the number of laboratory procedures associated with each F_id from the signals data ","completion":"<SUBTRACT USING F_id>S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures++ S2=>[S1=>(@S Signal:*)-[@r1 *]->(@F Finding:*)]-[@r2 *]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures LIMIT 3"},

    {"prompt":"list the unique F_id values and count the number of associated diagnostic procedures for each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and calculate the total count of diagnostic procedures associated with each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the count of diagnostic procedures linked to each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and count the number of laboratory procedures associated with each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and calculate the total count of laboratory procedures linked to each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the count of laboratory procedures associated with each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and count the number of diagnostic procedures associated with each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Get the F_id values and calculate the total count of diagnostic procedures linked to each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Obtain the F_id values along with the count of diagnostic procedures associated with each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and count the number of laboratory procedures associated with each F_id in the signals data ","completion":"<LEFT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},

    {"prompt":"Perform a right join using the F_id as the key and sort the results in descending order of F_id. Then, retrieve the F_id values and count the number of diagnostic procedures associated with each F_id in the signals data ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Perform a right join using the F_id as the key and sort the results in descending order of F_id. Then, obtain the F_id values and calculate the total count of diagnostic procedures linked to each F_id in the signals data ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Use a right join operation, utilizing the F_id as the key, to combine the data from different sources. Sort the results in descending order of F_id. Retrieve the F_id values and the corresponding count of diagnostic procedures associated with each F_id in the signals data ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Combine the data using a right join operation, using the F_id as the key, and sort the results in descending order of F_id. Get the F_id values and count the number of laboratory procedures associated with each F_id in the signals data ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Perform a right join operation, utilizing the F_id as the key, and sort the results in descending order of F_id. Then, calculate the total count of laboratory procedures linked to each F_id in the signals data and retrieve the F_id values ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Utilize a right join operation, sorting the results in descending order of F_id, to combine the data from different sources based on the F_id as the key. Retrieve the F_id values along with the count of laboratory procedures associated with each F_id in the signals data ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Retrieve the F_id values and count the number of diagnostic procedures associated with each F_id in the signals data. Perform a right join using the F_id as the key and sort the results in descending order of F_id ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Calculate the total count of diagnostic procedures linked to each F_id in the signals data. Use a right join operation, sorting the results in descending order of F_id, to combine the data based on the F_id as the key. Retrieve the F_id values ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Combine the data from different sources based on the F_id as the key using a right join operation. Sort the results in descending order of F_id. Retrieve the F_id values along with the count of diagnostic procedures associated with each F_id in the signals data ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},
    {"prompt":"Sort the results in descending order of F_id. Perform a right join using the F_id as the key to combine the data from different sources. Retrieve the F_id values and count the number of laboratory procedures associated with each F_id in the signals data ","completion":"<RIGHT_JOIN USING F_id SORT_DESC F_id>S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@D DiagnosticProcedure:*);RETURN F.name AS F_id, COUNT(D.name) AS nDiagnosticProcedures ++ S2=>[S1=>(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@F Finding:*)]-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*);RETURN F.name AS F_id, COUNT(L.name) AS nLaboratoryProcedures LIMIT 3"},

    {"prompt":"list the patient's name, the distinct preferred terms of laboratory procedures, and the status of the associated signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Get the name of the patient, the unique preferred terms for the laboratory procedures, and the status of the signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Obtain the patient's name, the distinct preferred terms related to laboratory procedures, and the status of the associated signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Retrieve the patient's name, the unique preferred terms associated with laboratory procedures, and the status of the signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Get the patient's name, the distinct preferred terms for the laboratory procedures, and the status of the associated signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Obtain the name of the patient, the unique preferred terms of laboratory procedures, and the status of the signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Retrieve the patient's name, the distinct preferred terms related to laboratory procedures, and the status of the associated signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Get the name of the patient, the unique preferred terms for the laboratory procedures, and the status of the signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Obtain the patient's name, the distinct preferred terms associated with laboratory procedures, and the status of the associated signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},
    {"prompt":"Retrieve the patient's name, the unique preferred terms of laboratory procedures, and the status of the signal ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r1 IS_ASSOCIATED_WITH]->(@LP LaboratoryProcedure:*)-[@r3 IS_ASSOCIATED_WITH]->(@O Order:*);RETURN P.name AS Patient, DISTINCT(LP.preferredTerm) AS Procedure, r1.status AS Status SORT_DESC Patient LIMIT 100"},

    {"prompt":"list the patient's name, first name, family name, NHS number, latest signal received, and gender ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Get the patient's node ID, first name, family name, NHS number, last signal received, and gender ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Obtain the node ID, first name, family name, NHS number, last signal received, and gender of the patient ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Retrieve the patient's node ID, first name, family name, NHS number, last signal received, and gender ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Get the node ID, first name, family name, NHS number, last signal received, and gender of the patient ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Obtain the patient's name, first name, family name, NHS number, last signal received, and gender ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Retrieve the patient's name, first name, family name, NHS number, last signal received, and gender ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Get the patient's name, first name, family name, NHS number, last signal received, and gender ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Obtain the name, first name, family name, NHS number, last signal received, and gender of the patient ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},
    {"prompt":"Retrieve the name, first name, family name, NHS number, last signal received, and gender of the patient ","completion":"S=>(@P Patient:*);RETURN P.name AS NodeID, P.firstName AS \"First Name\", P.familyName AS \"Family Name\", P.id_NH AS \"NHS Number\", P.latestEventDatetime AS LSR, MATH_EXP(\"DATE_FMT($LSR, %Y/%m/%d %H:%M:%S)\") AS \"Last Signal Received\", P.gender AS Gender SORT_ASC_QLEX LSR LIMIT 100"},

    {"prompt":"Get the patient's ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"list the patient's ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Obtain the patient's ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date for the patient ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Retrieve the ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date for the patient ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Obtain the patient's ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the patient's ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Obtain the ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date for the patient ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the ID, date, procedure, status, signal date and time, completion status, and the number of days since the signal date for the patient ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, r2.Completed AS Completion_Status, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},

    {"prompt":"list the patient's ID, last status change date, procedure, status, signal date and time, and calculate the number of days since the signal date. Only include records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the patient's ID, date of the last status change, procedure name, status, signal date and time. Calculate the number of days between the signal date and the current time, rounding the result. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Obtain the patient's ID, date of the last status change, procedure name, status, and signal date and time. Calculate the number of days between the signal date and the current time, rounded to the nearest whole number. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the ID of the patient, the date of the last status change, the procedure name, the status, and the signal date and time. Calculate the number of days between the signal date and the current time. Round the result to the nearest whole number. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, the date of the last status change, the procedure name, the status, and the signal date and time. Calculate the number of days between the signal date and the current time, rounding to the nearest whole number. Only include records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Obtain the ID of the patient, the date of the last status change, the procedure name, the status, and the signal date and time. Calculate the number of days between the signal date and the current time. Round the result to the nearest whole number. Only include records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the patient's ID, the date of the last status change, the procedure name, the status, and the signal date and time. Calculate the number of days between the signal date and the current time. Round the result to the nearest whole number. Only include records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Retrieve the ID of the patient, the date of the last status change, the procedure name, the status, and the signal date and time. Calculate the number of days between the signal date and the current time, rounded to the nearest whole number. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Obtain the patient's ID, the date of the last status change, the procedure name, the status, and the signal date and time. Calculate the number of days between the signal date and the current time, rounding to the nearest whole number. Only include records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the ID of the patient, the date of the last status change, the procedure name, the status, and the signal date and time. Calculate the number of days between the signal date and the current time. Round the result to the nearest whole number. Only include records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},

    {"prompt":"list the patient's ID, last status change date, procedure name, status, completion status, and signal date and time from the diagnostic procedure records associated with the patient's signals. Only include records where the number of days since the signal date is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days between the signal date and the current time, rounded to the nearest whole number. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Fetch the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days that have passed since the signal date, rounding the result. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days between the signal date and the current time, rounded to the nearest whole number. Display only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Obtain the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days that have elapsed since the signal date, rounding the result. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Fetch the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days between the signal date and the current time, rounded to the nearest whole number. Filter the results to show only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Retrieve the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days that have passed since the signal date, rounding the result. Show only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Get the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days between the signal date and the current time, rounded to the nearest whole number. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Obtain the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days that have elapsed since the signal date, rounding the result. Include only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},
    {"prompt":"Fetch the patient's ID, date of the last status change, procedure name, status, completion status, and signal date and time. Calculate the number of days between the signal date and the current time, rounded to the nearest whole number. Display only records where the number of days is less than 1 ","completion":"S{UNIQUE_SELECT}=>(@pid Patient)-[@r1 IS_ASSOCIATED_WITH]->(@msh Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@obr DiagnosticProcedure:*); RETURN pid.name AS Patient_ID, r2.lastStatusChange AS Date, obr.preferredTerm AS Procedure, r2.status AS Status, r2.Completed AS completed, msh.signalDateTime AS dateTime, MATH_EXP(\"ROUND(DATE(($dateTime-CURTIME)/86400000000))\") AS Days WHERE Days < 1 SORT_ASC dateTime LIMIT 100"},

    {"prompt":"list the date of observation, formatted as dd/mm/yyyy, for the findings associated with the patient's signals. Also, get the preferred term of the observation, its value, unit of measure, abnormal flag, and the signal name ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Get the observation date, presented as Date of Observation, for the findings linked to the patient's signals. Additionally, obtain the preferred term of the observation, its value, unit of measure, abnormal flag, and the associated signal's name ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Fetch the date when the observation took place, formatted as dd/mm/yyyy, for the findings associated with the patient's signals. Also, retrieve the preferred term of the observation, its value, unit of measure, abnormal flag, and the name of the signal ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Obtain the observation date, displayed as Date of Observation, for the findings that are associated with the patient's signals. Furthermore, acquire the preferred term of the observation, its value, unit of measure, abnormal flag, and the name of the signal ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Retrieve the date of observation, presented in the format dd/mm/yyyy, for the findings associated with the patient's signals. Additionally, fetch the preferred term of the observation, its value, unit of measure, abnormal flag, and the name of the signal ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Get the observation date, formatted as Date of Observation, for the findings associated with the patient's signals. Also, retrieve the preferred term of the observation, its value, unit of measure, abnormal flag, and the name of the signal ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Fetch the date when the observation was made, presented as dd/mm/yyyy, for the findings that are associated with the patient's signals. Also, obtain the preferred term of the observation, its value, unit of measure, abnormal flag, and the signal name ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Obtain the observation date, displayed as Date of Observation, for the findings linked to the patient's signals. Additionally, acquire the preferred term of the observation, its value, unit of measure, abnormal flag, and the associated signal's name ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Retrieve the date of observation, formatted as dd/mm/yyyy, for the findings associated with the patient's signals. Also, fetch the preferred term of the observation, its value, unit of measure, abnormal flag, and the name of the signal ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},
    {"prompt":"Get the observation date, presented as Date of Observation, for the findings that are associated with the patient's signals. Furthermore, obtain the preferred term of the observation, its value, unit of measure, abnormal flag, and the name of the signal ","completion":"<CROSS USING Signal SORT_ASC Signal>S=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@F Finding:*);RETURN r2.dateOfObservation AS date, MATH_EXP(\"DATE_FMT($date, %d/%m/%Y)\") AS \"Date of Observation\", F.preferredTerm AS \"Observation\", r2.value AS \"Value\", r2.unitOfMeasure AS \"Unit of Measure\", r2.abnormalFlags AS \"Abnormal Flag\", S.name AS Signal ++ S1=>(@P Patient:*)-[@r1 IS_ASSOCIATED_WITH]->(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@L LaboratoryProcedure:*); RETURN S.name AS Signal, r2.diagnosticService AS \"Diagnostic Service\" LIMIT 3"},

    {"prompt":"list the patient's NHS number, unique address, and the date associated with their residency ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Get the patient's identification number, distinct address, and the date linked to their residential status ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Fetch the patient's NHS number, unique address, and the date of their residency ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Obtain the patient's identification number, distinct address, and the date corresponding to their residential information ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Retrieve the patient's NHS number, unique address, and the date indicating their residency ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Get the patient's identification number, distinct address, and the date associated with their residential status ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Fetch the patient's NHS number, unique address, and the date of their residency ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Obtain the patient's identification number, distinct address, and the date linked to their residential information ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Retrieve the patient's NHS number, unique address, and the date indicating their residency ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},
    {"prompt":"Get the patient's identification number, distinct address, and the date corresponding to their residential status ","completion":"S{UNIQUE_SELECT}=>(@P Patient:* {id_NH = \"9402415323\"})-[@r LIVES_IN]->(@A Address:*);RETURN P.id_NH AS Patient, DISTINCT(A.name) AS Address, r.evpk AS date SORT_DESC date LIMIT 10"},

    {"prompt":"list the signal IDs of patients as signalId from the patient records ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Get the signal IDs of patients and their corresponding message codes, patient types, dates, and classes from the healthcare activities ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Obtain the patient signal IDs from the patient information ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Fetch the signal IDs and related information such as message codes, patient types, dates, and classes from the healthcare activities ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Retrieve the signal IDs of patients labeled as signalId from the patient data ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Get the signal IDs and their associated message codes, patient types, dates, and classes from the healthcare activities ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Retrieve the patient signal IDs from the patient records ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Obtain the signal IDs of patients along with their respective message codes, patient types, dates, and classes from the healthcare activities ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Retrieve the patient signal IDs as signalId from the patient database ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},
    {"prompt":"Fetch the signal IDs and additional details like message codes, patient types, dates, and classes from the healthcare activities ","completion":"<ADD USING signalId SORT_ASC signalId LIMIT 100> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.signalId AS signalId, S.messageCode AS messageCode, r2.patientType AS Type, S.signalDateTime AS Date, r2.class AS Class"},

    {"prompt":"Count the number of records associated with patients and calculate the sum, maximum, and minimum values of their associated evpks ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Determine the total count of records and calculate the sum, latest, and earliest evpks associated with patients ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Count how many records are linked to patients and calculate the sum, highest, and lowest values of their corresponding evpks ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Calculate the total number of patient records and find the sum, most recent, and earliest evpks associated with them ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Determine the count of records associated with patients and calculate the sum, maximum, and minimum evpks ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Count the total number of patient records and calculate the sum, latest, and earliest evpks among them ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Calculate the number of records associated with patients and determine the sum, highest, and lowest evpks ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Count how many records are linked to patients and calculate the sum, latest, and first evpks ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Determine the total count of patient records and calculate the sum, maximum, and minimum evpks associated with them ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},
    {"prompt":"Calculate the count of patient records and find the sum, most recent, and initial evpks associated with them ","completion":"S=>(@P Patient:*)-[@r IS_ASSOCIATED_WITH]->(@S Signal:*);RETURN COUNT(r.evpk) AS num_of_records, SUM(r.evpk) AS sum_on_evpks, MAX(r.evpk) AS latest_evpk, MIN(r.evpk) AS first_evpk LIMIT 10"},

    {"prompt":"list the signal IDs associated with patients ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Obtain the patient's signal ID from the database ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Get the signal IDs linked to patients ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Retrieve the signal IDs belonging to patients ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Get the patients' signal IDs ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Obtain the signal ID of patients ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Retrieve the signal IDs associated with healthcare activities ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Get the signal IDs linked to healthcare activities ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Obtain the signal IDs corresponding to healthcare activities ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},
    {"prompt":"Retrieve the signal IDs belonging to healthcare activities ","completion":"<LEFT_JOIN USING signalId SORT_DESC signalId LIMIT 1000> S1=>(@P Patient:*); RETURN P.signalId AS signalId ++ S2=>(@S Signal:*)-[@r2 IS_ASSOCIATED_WITH]->(@H HealthCareActivity:*);RETURN S.name AS signalId, r2.class AS Class"},

    {"prompt":"list the recorded dates, calculate the corresponding months, and count the total number of signals excluding grouping by the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the dates when signals were recorded, determine the respective months, and count the overall number of signals without grouping by the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Obtain the recorded dates of signals, calculate the corresponding months, and count the total signals while excluding grouping based on the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the date and time of signal recordings, determine the corresponding months, and count the total signals excluding the grouping by date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the recorded dates of signals, calculate the respective months, and count the total number of signals while excluding grouping based on the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Obtain the signal recorded dates, calculate the corresponding months, and count the total number of signals without grouping by the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the timestamps of signal recordings, determine the months they belong to, and count the total number of signals excluding grouping by the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Get the signal recorded timestamps, calculate the corresponding months, and count the total number of signals while excluding grouping based on the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Obtain the date and time of signal recordings, calculate the respective months, and count the total signals without grouping by the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"},
    {"prompt":"Retrieve the recorded dates of signals, calculate the corresponding months, and count the total signals excluding grouping based on the date ","completion":"s{UNIQUE}=>(@S Signal:* {dataController = \"psm_dev_v1_0\" AND DATE_YEAR($recordedDate+0) = 2022});RETURN S.recordedDate AS DateTime, MATH_EXP(\"DATE_MONTH($DateTime+0)\") AS Month, COUNT(S.name) AS \"Total Signals\" EXCLUDE_GROUPBY(DateTime) SORT_ASC Month LIMIT 100"}


]


